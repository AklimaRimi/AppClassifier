Description,Category
"CLI tool and python library that converts the output of popular command-line tools and file types to JSON or Dictionaries. This allows piping of output to tools like jq and simplifying automation scripts. jc JSONifies the output of many CLI tools and file types for easier parsing in scripts. This allows further command-line processing of output with tools like jq or jello by piping commands. The JC parsers can also be used as python modules. In this case, the output will be a python dictionary, or a list of dictionaries, instead of JSON. Two representations of the data are available. The default representation uses a strict schema per parser and converts known numbers to int/float JSON values. Certain known values of None are converted to JSON null, known boolean values are converted, and, in some cases, additional semantic context fields are added.CLI tool and python library that converts the output of popular command-line tools and file types to JSON or Dictionaries. This allows piping of output to tools like jq and simplifying automation scripts. jc JSONifies the output of many CLI tools and file types for easier parsing in scripts. This allows further command-line processing of output with tools like jq or jello by piping commands. The JC parsers can also be used as python modules. In this case, the output will be a python dictionary, or a list of dictionaries, instead of JSON. Two representations of the data are available. The default representation uses a strict schema per parser and converts known numbers to int/float JSON values. Certain known values of None are converted to JSON null, known boolean values are converted, and, in some cases, additional semantic context fields are added.","Categories
Terminals, JSON, Libraries"
"Command Line by Jeroen Janssens, published by O’Reilly Media in October 2021. Obtain, scrub, explore, and model data with Unix Power Tools. This repository contains the full text, data, and scripts used in the second edition of the book Data Science at the Command Line by Jeroen Janssens. This thoroughly revised guide demonstrates how the flexibility of the command line can help you become a more efficient and productive data scientist. You’ll learn how to combine small yet powerful command-line tools to quickly obtain, scrub, explore, and model your data. To get you started, author Jeroen Janssens provides a Docker image packed with over 100 Unix power tools, useful whether you work with Windows, macOS, or Linux. You’ll quickly discover why the command line is an agile, scalable, and extensible technology. Even if you’re comfortable processing data with Python or R, you’ll learn how to greatly improve your data science workflow by leveraging the command line’s power.Command Line by Jeroen Janssens, published by O’Reilly Media in October 2021. Obtain, scrub, explore, and model data with Unix Power Tools. This repository contains the full text, data, and scripts used in the second edition of the book Data Science at the Command Line by Jeroen Janssens. This thoroughly revised guide demonstrates how the flexibility of the command line can help you become a more efficient and productive data scientist. You’ll learn how to combine small yet powerful command-line tools to quickly obtain, scrub, explore, and model your data. To get you started, author Jeroen Janssens provides a Docker image packed with over 100 Unix power tools, useful whether you work with Windows, macOS, or Linux. You’ll quickly discover why the command line is an agile, scalable, and extensible technology. Even if you’re comfortable processing data with Python or R, you’ll learn how to greatly improve your data science workflow by leveraging the command line’s power.","Categories
Terminals, Education, Research, Data Science"
"A full-featured framework for building command-line applications (CLI) with node.js, including help generation, colored output, verbosity control, custom logger, coercion and casting, typos suggestions, and auto-complete for bash/zsh/fish.A full-featured framework for building command-line applications (CLI) with node.js, including help generation, colored output, verbosity control, custom logger, coercion and casting, typos suggestions, and auto-complete for bash/zsh/fish.","Categories
Terminals, Build Tools, Frameworks"
"screenFetch is a ""Bash Screenshot Information Tool"". This handy Bash script can be used to generate one of those nifty terminal theme information + ASCII distribution logos you see in everyone's screenshots nowadays. It will auto-detect your distribution and display an ASCII version of that distribution's logo and some valuable information to the right. There are options to specify no ASCII art, colors, taking a screenshot upon displaying info, and even customizing the screenshot command! This script is very easy to add to and can easily be extended. To run screenFetch, open a terminal of some sort and type in the command screenfetch or wherever you saved the script to. This will generate an ASCII logo with the information printed to the side of the logo. There are some options that may be specified on the command line.screenFetch is a ""Bash Screenshot Information Tool"". This handy Bash script can be used to generate one of those nifty terminal theme information + ASCII distribution logos you see in everyone's screenshots nowadays. It will auto-detect your distribution and display an ASCII version of that distribution's logo and some valuable information to the right. There are options to specify no ASCII art, colors, taking a screenshot upon displaying info, and even customizing the screenshot command! This script is very easy to add to and can easily be extended. To run screenFetch, open a terminal of some sort and type in the command screenfetch or wherever you saved the script to. This will generate an ASCII logo with the information printed to the side of the logo. There are some options that may be specified on the command line.","Categories
Terminals"
"719 unique Pokemon. Select Pokemon by name or by index number. Ability to change the Desktop Wallpaper & the Terminal background. Internal search system for finding Pokemon. Supports iTerm2, ConEmu, Terminology, Windows Terminal, and Tilix terminal emulators. Supports Windows, MacOS, GNOME, Openbox (with feh), i3wm (with feh), and sway for desktops.719 unique Pokemon. Select Pokemon by name or by index number. Ability to change the Desktop Wallpaper & the Terminal background. Internal search system for finding Pokemon. Supports iTerm2, ConEmu, Terminology, Windows Terminal, and Tilix terminal emulators. Supports Windows, MacOS, GNOME, Openbox (with feh), i3wm (with feh), and sway for desktops.","Categories
Terminals, KDE Themes"
"airgeddon is an alive project growing day by day. Interface mode switcher (Monitor-Managed) keeping selection even on interface name changing. DoS over wireless networks using different methods (mdk3, mdk4, aireplay-ng). ""DoS Pursuit mode"" is available to avoid AP channel hopping (available also on DoS performed on Evil Twin attacks). Full support for 2.4Ghz and 5Ghz bands. Assisted WPA/WPA2 personal networks Handshake file and PMKID capturing. Cleaning and optimizing Handshake captured files. Offline password decrypting on WPA/WPA2 captured files for personal networks (Handshakes and PMKIDs) using a dictionary, brute-force, and rule-based attacks with aircrack, crunch and hashcat tools. Enterprise networks captured password decrypting based on john the ripper, crunch, asleap and hashcat tools. GPU support available for hashcat. Only Rogue/Fake AP mode to sniff using external sniffer (Hostapd + DHCP + DoS).airgeddon is an alive project growing day by day. Interface mode switcher (Monitor-Managed) keeping selection even on interface name changing. DoS over wireless networks using different methods (mdk3, mdk4, aireplay-ng). ""DoS Pursuit mode"" is available to avoid AP channel hopping (available also on DoS performed on Evil Twin attacks). Full support for 2.4Ghz and 5Ghz bands. Assisted WPA/WPA2 personal networks Handshake file and PMKID capturing. Cleaning and optimizing Handshake captured files. Offline password decrypting on WPA/WPA2 captured files for personal networks (Handshakes and PMKIDs) using a dictionary, brute-force, and rule-based attacks with aircrack, crunch and hashcat tools. Enterprise networks captured password decrypting based on john the ripper, crunch, asleap and hashcat tools. GPU support available for hashcat. Only Rogue/Fake AP mode to sniff using external sniffer (Hostapd + DHCP + DoS).","Categories
Terminals, Networking, Wireless"
"A Quicker and better SSH/Telnet/Serial/Shell/Sftp client for DevOps. WindTerm is a partial open source project, and the source will be gradually opened. Open source code includes, but is not limited to, the classes that can be used independently, such as functional, algorithms, GUI widgets, etc., as well as functional libraries, such as networks, protocols, etc., as well as all types that require open source according to the license. SSH v2, Telnet, Raw TCP, Serial, Shell protocols were implemented. Supports SSH auto-execution when the session is authenticated. Integrated local file manager, supports the move to, copy to, copy from, remove, rename, make new file/directory and so on. Supports Windows Cmd, PowerShell and Cmd, PowerShell as administrator. Supports Linux bash, zsh, PowerShell core, and so on. Supports MacOS bash, zsh, PowerShell core, and so on.A Quicker and better SSH/Telnet/Serial/Shell/Sftp client for DevOps. WindTerm is a partial open source project, and the source will be gradually opened. Open source code includes, but is not limited to, the classes that can be used independently, such as functional, algorithms, GUI widgets, etc., as well as functional libraries, such as networks, protocols, etc., as well as all types that require open source according to the license. SSH v2, Telnet, Raw TCP, Serial, Shell protocols were implemented. Supports SSH auto-execution when the session is authenticated. Integrated local file manager, supports the move to, copy to, copy from, remove, rename, make new file/directory and so on. Supports Windows Cmd, PowerShell and Cmd, PowerShell as administrator. Supports Linux bash, zsh, PowerShell core, and so on. Supports MacOS bash, zsh, PowerShell core, and so on.","Categories
Terminals, DevOps, SFTP Clients"
"A shell parser, formatter, and interpreter. Supports POSIX Shell, Bash, and mksh. Requires Go 1.16 or later. To parse shell scripts, inspect them, and print them out, see the syntax examples. For high-level operations like performing shell expansions on strings, see the shell examples. shfmt formats shell programs. See canonical.sh for a quick look at its default style. shfmt formats shell programs. If the only argument is a dash (-) or no arguments are given, standard input will be used. If a given path is a directory, all shell scripts found under that directory will be used. When indexing Bash associative arrays, always use quotes. The static parser will otherwise have to assume that the index is an arithmetic expression. Some builtins like export and let are parsed as keywords. A subset of the Go packages are available as an npm package called mvdan-sh.A shell parser, formatter, and interpreter. Supports POSIX Shell, Bash, and mksh. Requires Go 1.16 or later. To parse shell scripts, inspect them, and print them out, see the syntax examples. For high-level operations like performing shell expansions on strings, see the shell examples. shfmt formats shell programs. See canonical.sh for a quick look at its default style. shfmt formats shell programs. If the only argument is a dash (-) or no arguments are given, standard input will be used. If a given path is a directory, all shell scripts found under that directory will be used. When indexing Bash associative arrays, always use quotes. The static parser will otherwise have to assume that the index is an arithmetic expression. Some builtins like export and let are parsed as keywords. A subset of the Go packages are available as an npm package called mvdan-sh.","Categories
Terminals, User Interface (UI)"
"letsencrypt/acme client implemented as a shell-script, just add water. Dehydrated is a client for signing certificates with an ACME-server (e.g. Let’s Encrypt or ZeroSSL) implemented as a relatively simple bash script. It uses the OpenSSL utility for everything related to actually handling keys and certificates, so you need to have that installed. Other dependencies are cURL, sed, grep, mktemp (all found on almost any system, cURL being the only exception). Please keep in mind that this software and even the acme-protocol are relatively young and may still have some unresolved issues. Feel free to report any issues you find with this script or contribute by submitting a pull request. dehydrated is looking for a config file in a few different places, it will use the first one it can find.letsencrypt/acme client implemented as a shell-script, just add water. Dehydrated is a client for signing certificates with an ACME-server (e.g. Let’s Encrypt or ZeroSSL) implemented as a relatively simple bash script. It uses the OpenSSL utility for everything related to actually handling keys and certificates, so you need to have that installed. Other dependencies are cURL, sed, grep, mktemp (all found on almost any system, cURL being the only exception). Please keep in mind that this software and even the acme-protocol are relatively young and may still have some unresolved issues. Feel free to report any issues you find with this script or contribute by submitting a pull request. dehydrated is looking for a config file in a few different places, it will use the first one it can find.","Categories
Terminals, User Interface (UI)"
"It remembers which directories you use most frequently, so you can ""jump"" to them in just a few keystrokes. zoxide works on all major shells. zoxide is a smarter cd command, inspired by z and auto jump. fzf is a command-line fuzzy finder, used by zoxide for interactive selection. zoxide supports fzf v0.21.0+. Environment variables can be used for configuration. They must be set before zoxide init is called.It remembers which directories you use most frequently, so you can ""jump"" to them in just a few keystrokes. zoxide works on all major shells. zoxide is a smarter cd command, inspired by z and auto jump. fzf is a command-line fuzzy finder, used by zoxide for interactive selection. zoxide supports fzf v0.21.0+. Environment variables can be used for configuration. They must be set before zoxide init is called.","Categories
Terminals"
"Useful scripts for making developers' everyday lives easier and happier, involving java, shell, etc. Usually useful manual operations are made into scripts for convenient use, making the daily life of development easier. Share the functions (i.e. requirements, ideas) that are commonly used but not written into scripts, and submit an Issue. The scripts of this warehouse (such as related scripts) are deployed and used in the online production environment of JavaAlibaba and other companies (such as Portable Cloud). It is used to quickly troubleshoot performance problems, automatically find out how many threads are consumed in the running process, and print out their thread stacks to determine the method calls that cause performance problems. Find out duplicate classes in jar files and class directories. Used to troubleshoot Javaclass conflicts.Useful scripts for making developers' everyday lives easier and happier, involving java, shell, etc. Usually useful manual operations are made into scripts for convenient use, making the daily life of development easier. Share the functions (i.e. requirements, ideas) that are commonly used but not written into scripts, and submit an Issue. The scripts of this warehouse (such as related scripts) are deployed and used in the online production environment of JavaAlibaba and other companies (such as Portable Cloud). It is used to quickly troubleshoot performance problems, automatically find out how many threads are consumed in the running process, and print out their thread stacks to determine the method calls that cause performance problems. Find out duplicate classes in jar files and class directories. Used to troubleshoot Javaclass conflicts.","Categories
Terminals, Software Development, User Interface (UI)"
"Color Scheme for Gnome Terminal, Pantheon Terminal, Tilix, and XFCE4 Terminal. Color Schemes For Ubuntu, Linux Mint, Elementary OS and all distributions that use Gnome Terminal, Pantheon Terminal, Tilix, or XFCE4 Terminal, initially inspired by Elementary OS Luna. Also works on iTerm for macOS.Color Scheme for Gnome Terminal, Pantheon Terminal, Tilix, and XFCE4 Terminal. Color Schemes For Ubuntu, Linux Mint, Elementary OS and all distributions that use Gnome Terminal, Pantheon Terminal, Tilix, or XFCE4 Terminal, initially inspired by Elementary OS Luna. Also works on iTerm for macOS.","Categories
Terminals, Design"
"These tools search for possible local privilege escalation paths that you could exploit and print them to you with nice colors so you can recognize the misconfigurations easily. All the scripts/binaries of the PEAS suite should be used for authorized penetration testing and/or educational purposes only. Any misuse of this software will not be the responsibility of the author or of any other collaborator. Use it at your own machines and/or with the owner's permission. Here you will find privilege escalation tools for Windows and Linux/Unix and MacOS. Find the latest versions of all the scripts and binaries in the releases page. Check the parsers directory to transform PEASS outputs to JSON, HTML and PDF.These tools search for possible local privilege escalation paths that you could exploit and print them to you with nice colors so you can recognize the misconfigurations easily. All the scripts/binaries of the PEAS suite should be used for authorized penetration testing and/or educational purposes only. Any misuse of this software will not be the responsibility of the author or of any other collaborator. Use it at your own machines and/or with the owner's permission. Here you will find privilege escalation tools for Windows and Linux/Unix and MacOS. Find the latest versions of all the scripts and binaries in the releases page. Check the parsers directory to transform PEASS outputs to JSON, HTML and PDF.","Categories
Terminals, Software Testing, Penetration Testing"
A collection of small bash scripts for heavy terminal users with no dependencies. All of these scripts have been heavily tested on macOS and Linux. Most of these scripts have been tested on Windows 10 and the official developer bash instance. Does not work with Cygwin or Mysys2.A collection of small bash scripts for heavy terminal users with no dependencies. All of these scripts have been heavily tested on macOS and Linux. Most of these scripts have been tested on Windows 10 and the official developer bash instance. Does not work with Cygwin or Mysys2.,"Categories
Terminals"
"ShellJS is a portable (Windows/Linux/macOS) implementation of Unix shell commands on top of the Node.js API. You can use it to eliminate your shell script's dependency on Unix while still keeping its familiar and powerful commands. You can also install it globally so you can run it from outside Node projects, say goodbye to those gnarly Bash scripts! ShellJS is proudly tested on every node release since v8! ShellJS now supports third-party plugins! You can learn more about using plugins and writing your own ShellJS commands in the wiki. The most important thing is to require the most recent version of ShellJS as a peer-dependency. If you want to add unit tests for your plugin as well, you'll probably want it as a dev-dependency too.ShellJS is a portable (Windows/Linux/macOS) implementation of Unix shell commands on top of the Node.js API. You can use it to eliminate your shell script's dependency on Unix while still keeping its familiar and powerful commands. You can also install it globally so you can run it from outside Node projects, say goodbye to those gnarly Bash scripts! ShellJS is proudly tested on every node release since v8! ShellJS now supports third-party plugins! You can learn more about using plugins and writing your own ShellJS commands in the wiki. The most important thing is to require the most recent version of ShellJS as a peer-dependency. If you want to add unit tests for your plugin as well, you'll probably want it as a dev-dependency too.","Categories
Terminals"
"The minimal, blazing-fast, and infinitely customizable prompt for any shell! Works on the most common shells on the most common operating systems. Use it everywhere! Brings the best-in-class speed and safety of Rust, to make your prompt as quick and reliable as possible. Every little detail is customizable to your liking, to make this prompt as minimal or feature-rich as you'd like it to be. Configure your shell to initialize starship. Start a new shell instance, and you should see your beautiful new shell prompt. If you're happy with the defaults, enjoy!The minimal, blazing-fast, and infinitely customizable prompt for any shell! Works on the most common shells on the most common operating systems. Use it everywhere! Brings the best-in-class speed and safety of Rust, to make your prompt as quick and reliable as possible. Every little detail is customizable to your liking, to make this prompt as minimal or feature-rich as you'd like it to be. Configure your shell to initialize starship. Start a new shell instance, and you should see your beautiful new shell prompt. If you're happy with the defaults, enjoy!","Categories
Terminals"
"A pure Unix shell script implementing ACME client protocol. An ACME protocol client written purely in Shell (Unix shell) language. Full ACME protocol implementation. Support ECDSA certs. Support SAN and wildcard certs. Simple, powerful and very easy to use. You only need 3 minutes to learn it. Bash, dash and sh compatible. Purely written in Shell with no dependencies on python. Just one script to issue, renew and install your certificates automatically. Does not require root/sudoer access. Docker ready. IPv6 ready. Cron job notifications for renewal or error etc. It's probably the easiest & smartest shell script to automatically issue & renew the free certificates. After the cert is generated, you probably want to install/copy the cert to your Apache/Nginx or other servers. The ownership and permission info of existing files are preserved. You can pre-create the files to define the ownership and permission.A pure Unix shell script implementing ACME client protocol. An ACME protocol client written purely in Shell (Unix shell) language. Full ACME protocol implementation. Support ECDSA certs. Support SAN and wildcard certs. Simple, powerful and very easy to use. You only need 3 minutes to learn it. Bash, dash and sh compatible. Purely written in Shell with no dependencies on python. Just one script to issue, renew and install your certificates automatically. Does not require root/sudoer access. Docker ready. IPv6 ready. Cron job notifications for renewal or error etc. It's probably the easiest & smartest shell script to automatically issue & renew the free certificates. After the cert is generated, you probably want to install/copy the cert to your Apache/Nginx or other servers. The ownership and permission info of existing files are preserved. You can pre-create the files to define the ownership and permission.","Categories
Terminals, Software Development"
"This Vue CLI preset allows you to quickly start a web extension. Everything you need to build a web extension (manifest.json, .zip building, etc.), thanks to adambullmer/vue-cli-plugin-browser-extension. Build the extension into the dist folder for production. A zip file is also built and is located in the artifacts directory. Build the extension for development and watch over file changes. It also automatically reloads your extension into your browsers. If you are using GitHub Actions, you can easily automatically build a zip of your extension and create a new GitHub release, each time a new tag is pushed. If running webpack in watch mode, you need to stop and restart webpack to apply configuration changes.This Vue CLI preset allows you to quickly start a web extension. Everything you need to build a web extension (manifest.json, .zip building, etc.), thanks to adambullmer/vue-cli-plugin-browser-extension. Build the extension into the dist folder for production. A zip file is also built and is located in the artifacts directory. Build the extension for development and watch over file changes. It also automatically reloads your extension into your browsers. If you are using GitHub Actions, you can easily automatically build a zip of your extension and create a new GitHub release, each time a new tag is pushed. If running webpack in watch mode, you need to stop and restart webpack to apply configuration changes.","Categories
Terminals, Build Tools, Web Services"
"The Vault Swiss Army knife, which makes enterprise-grade security attainable on Kubernetes. It has many 'blades' that cut through the security problem: the Bank-Vaults operator provides automation; a Go client with automatic token renewal that provides dynamic secret generation, multiple unseal options, and more; a CLI tool to initialize, unseal and configure Vault with authentication methods and secret engines; and direct secret injection into Pods to reduce the attack surface. Automates the entire Vault lifecycle in your Kubernetes clusters. Provides seamless integration with non-Vault-aware applications without storing the decrypted secret anywhere. Vault is the de-facto standard for secret management in cloud-native environments. Bank-Vaults provides various tools for Hashicorp Vault to make its use easier. A wrapper for the official Vault client with automatic token renewal, built in Kubernetes support, and a dynamic database credential provider.The Vault Swiss Army knife, which makes enterprise-grade security attainable on Kubernetes. It has many 'blades' that cut through the security problem: the Bank-Vaults operator provides automation; a Go client with automatic token renewal that provides dynamic secret generation, multiple unseal options, and more; a CLI tool to initialize, unseal and configure Vault with authentication methods and secret engines; and direct secret injection into Pods to reduce the attack surface. Automates the entire Vault lifecycle in your Kubernetes clusters. Provides seamless integration with non-Vault-aware applications without storing the decrypted secret anywhere. Vault is the de-facto standard for secret management in cloud-native environments. Bank-Vaults provides various tools for Hashicorp Vault to make its use easier. A wrapper for the official Vault client with automatic token renewal, built in Kubernetes support, and a dynamic database credential provider.","Categories
Terminals, Frameworks, Building Automation"
"BaGet (pronounced ""baguette"") is a lightweight NuGet and symbol server. It is open-source, cross-platform, and cloud-ready! You can also use the BaGet.Protocol package to interact with a NuGet server. Cross-platform, dockerized, cloud-ready, supports read-through caching. Can index the entirety of nuget.org. Coming soon, support for private feeds. You can run BaGet on your preferred platform, on your computer, Docker, Azure, AWS, Google Cloud, and Alibaba Cloud (Aliyun). With a few extra steps, you can run BaGet behind a Windows IIS proxy. This has many benefits, including automatic restarts on reboots. You may need to give special permissions to the top-level BaGet folder so that the app can persist in its state. This is necessary as the Application Pools' identity is a virtual account that isn't recognized by the Windows User Management Console.BaGet (pronounced ""baguette"") is a lightweight NuGet and symbol server. It is open-source, cross-platform, and cloud-ready! You can also use the BaGet.Protocol package to interact with a NuGet server. Cross-platform, dockerized, cloud-ready, supports read-through caching. Can index the entirety of nuget.org. Coming soon, support for private feeds. You can run BaGet on your preferred platform, on your computer, Docker, Azure, AWS, Google Cloud, and Alibaba Cloud (Aliyun). With a few extra steps, you can run BaGet behind a Windows IIS proxy. This has many benefits, including automatic restarts on reboots. You may need to give special permissions to the top-level BaGet folder so that the app can persist in its state. This is necessary as the Application Pools' identity is a virtual account that isn't recognized by the Windows User Management Console.","Categories
Terminals, Application Servers, Package Managers"
"A great cloud needs great tools; we're excited to introduce Azure CLI, our next-generation multi-platform command-line experience for Azure. Take a test run now from Azure Cloud Shell! We support tab completion for groups, commands, and some parameters. You can use the --query parameter and the JMESPath query syntax to customize your output. With the Azure CLI Tools Visual Studio Code extension, you can create .azcli files and use these features. IntelliSense for commands and their arguments. Snippets for commands, inserting required arguments automatically. Run the current command in the integrated terminal. Run the current command and show its output in a side-by-side editor. Show documentation on mouse hover. Display current subscription and defaults in the status bar. The software may collect information about you and your use of the software and send it to Microsoft. Microsoft may use this information to provide services and improve our products and services.A great cloud needs great tools; we're excited to introduce Azure CLI, our next-generation multi-platform command-line experience for Azure. Take a test run now from Azure Cloud Shell! We support tab completion for groups, commands, and some parameters. You can use the --query parameter and the JMESPath query syntax to customize your output. With the Azure CLI Tools Visual Studio Code extension, you can create .azcli files and use these features. IntelliSense for commands and their arguments. Snippets for commands, inserting required arguments automatically. Run the current command in the integrated terminal. Run the current command and show its output in a side-by-side editor. Show documentation on mouse hover. Display current subscription and defaults in the status bar. The software may collect information about you and your use of the software and send it to Microsoft. Microsoft may use this information to provide services and improve our products and services.","Categories
Terminals, Cloud Services"
"Remove all resources from an AWS account. Be aware that aws-nuke is a very destructive tool, hence you have to be very careful while using it. Otherwise, you might delete production data. We strongly advise you to not run this application on any AWS account, where you cannot afford to lose all resources. We are testing our Terraform code with Jenkins. Sometimes a Terraform run fails during development and messes up the account. With aws-nuke, we can simply clean up the failed account so it can be reused for the next build. Our platform developers have their own AWS accounts where they can create their own Kubernetes clusters for testing purposes. With AWS-nuke it is very easy to clean up these accounts at the end of the day and keep the costs low. There are two ways to authenticate aws-nuke. There are static credentials and profiles. The later one can be configured in the shared credentials file.Remove all resources from an AWS account. Be aware that aws-nuke is a very destructive tool, hence you have to be very careful while using it. Otherwise, you might delete production data. We strongly advise you to not run this application on any AWS account, where you cannot afford to lose all resources. We are testing our Terraform code with Jenkins. Sometimes a Terraform run fails during development and messes up the account. With aws-nuke, we can simply clean up the failed account so it can be reused for the next build. Our platform developers have their own AWS accounts where they can create their own Kubernetes clusters for testing purposes. With AWS-nuke it is very easy to clean up these accounts at the end of the day and keep the costs low. There are two ways to authenticate aws-nuke. There are static credentials and profiles. The later one can be configured in the shared credentials file.","Categories
Terminals, Cloud Services"
"A theme for Terminal and iTerm that mimics the native One Dark Theme made by the Atom team. Also available in One Light. Colors are not enabled by default in macOS Terminal, so you will need to enable colors in order for this theme to work. For One Dark, use the same color for ""Black"" as that used for the window background (#1E2127). Using a brighter text color for the One Dark theme and remove transparency from backgrounds. Using generic RGB for colors; 95% opaque backgrounds. Alternate theme using a darker window color, based on the outer ui and not the editor space.A theme for Terminal and iTerm that mimics the native One Dark Theme made by the Atom team. Also available in One Light. Colors are not enabled by default in macOS Terminal, so you will need to enable colors in order for this theme to work. For One Dark, use the same color for ""Black"" as that used for the window background (#1E2127). Using a brighter text color for the One Dark theme and remove transparency from backgrounds. Using generic RGB for colors; 95% opaque backgrounds. Alternate theme using a darker window color, based on the outer ui and not the editor space.","Categories
Terminals, KDE Themes, Software Development"
"Merlin is an editor service that provides modern IDE features for OCaml. Emacs and Vim support is provided out-of-the-box. Since version 4.0, merlin's repository has a dedicated branch per version of OCaml, and the branch name consist of the concatenation of OCaml major version and minor version. So, for instance, OCaml 4.11.* maps to branch 411. The main branch is usually synchronized with the branch compatible with the latest (almost-)released version of OCaml. Note: if you're using an older version of OCaml (between 4.02 and 4.10) you will want to build the 3.4 branch, although it won't contain the most recent features. If you want to work on merlin, you'll want to avoid the -p merlin, to build in dev mode, with some extra warnings enabled. In that case you'll also need an extra dependency.Merlin is an editor service that provides modern IDE features for OCaml. Emacs and Vim support is provided out-of-the-box. Since version 4.0, merlin's repository has a dedicated branch per version of OCaml, and the branch name consist of the concatenation of OCaml major version and minor version. So, for instance, OCaml 4.11.* maps to branch 411. The main branch is usually synchronized with the branch compatible with the latest (almost-)released version of OCaml. Note: if you're using an older version of OCaml (between 4.02 and 4.10) you will want to build the 3.4 branch, although it won't contain the most recent features. If you want to work on merlin, you'll want to avoid the -p merlin, to build in dev mode, with some extra warnings enabled. In that case you'll also need an extra dependency.","Categories
Integrated Development Environments (IDE), Terminals"
"SharPyShell is a tiny and obfuscated ASP.NET web shell that executes commands received by an encrypted channel compiling them in memory at runtime. SharPyShell supports only C# web applications that run on .NET Framework >= 2.0. SharPyShell is a post-exploitation framework written in Python. The main aim of this framework is to provide the penetration tester with a series of tools to ease the post-exploitation phase once exploitation has been successful against an IIS webserver. This tool is not intended as a replacement for the frameworks for C2 Server (i.e. Meterpreter, Empire, etc..) but this should be used when you land on a fully restricted server where inbound and outbound connections are very limited. In this framework, you will have all the tools needed to privesc, net discovery, and lateral movement as you are typing behind the cmd of the target server.SharPyShell is a tiny and obfuscated ASP.NET web shell that executes commands received by an encrypted channel compiling them in memory at runtime. SharPyShell supports only C# web applications that run on .NET Framework >= 2.0. SharPyShell is a post-exploitation framework written in Python. The main aim of this framework is to provide the penetration tester with a series of tools to ease the post-exploitation phase once exploitation has been successful against an IIS webserver. This tool is not intended as a replacement for the frameworks for C2 Server (i.e. Meterpreter, Empire, etc..) but this should be used when you land on a fully restricted server where inbound and outbound connections are very limited. In this framework, you will have all the tools needed to privesc, net discovery, and lateral movement as you are typing behind the cmd of the target server.","Categories
Terminals, Frameworks"
"TinyGo brings the Go programming language to embedded systems and to the modern web by creating a new compiler based on LLVM. You can compile and run TinyGo programs on over 60 different microcontroller boards such as the BBC micro:bit and the Arduino Uno. TinyGo can also produce WebAssembly (WASM) code which is very compact in size. You can compile programs for web browsers, as well as for server and edge computing environments that support the WebAssembly System Interface (WASI) family of interfaces. TinyGo is a Go compiler intended for use in small places such as microcontrollers, WebAssembly (Wasm), and command-line tools. It reuses libraries used by the Go language tools alongside LLVM to provide an alternative way to compile programs written in the Go programming language. While TinyGo embeds the Clang compiler to parse import ""C"" blocks, many features of Cgo are still unsupported.TinyGo brings the Go programming language to embedded systems and to the modern web by creating a new compiler based on LLVM. You can compile and run TinyGo programs on over 60 different microcontroller boards such as the BBC micro:bit and the Arduino Uno. TinyGo can also produce WebAssembly (WASM) code which is very compact in size. You can compile programs for web browsers, as well as for server and edge computing environments that support the WebAssembly System Interface (WASI) family of interfaces. TinyGo is a Go compiler intended for use in small places such as microcontrollers, WebAssembly (Wasm), and command-line tools. It reuses libraries used by the Go language tools alongside LLVM to provide an alternative way to compile programs written in the Go programming language. While TinyGo embeds the Clang compiler to parse import ""C"" blocks, many features of Cgo are still unsupported.","Categories
Terminals, Compilers"
"Arduino CLI is an all-in-one solution that provides Boards/Library Managers, sketch builders, board detection, uploader, and many other tools needed to use any Arduino compatible board and platform from the command line or machine interfaces. In addition to being a standalone tool, Arduino CLI is the heart of all official Arduino development software (Arduino IDE, Arduino Web Editor). The script requires sh, which is always available on Linux and macOS. sh is not available by default on Windows, though it is available as part of Git for Windows (Git Bash). If you don't have sh available, use the ""Download"" installation option. If you would like to use the arduino-cli command from any location, install Arduino CLI to a directory already in your PATH or add the Arduino CLI installation path to your PATH environment variable.Arduino CLI is an all-in-one solution that provides Boards/Library Managers, sketch builders, board detection, uploader, and many other tools needed to use any Arduino compatible board and platform from the command line or machine interfaces. In addition to being a standalone tool, Arduino CLI is the heart of all official Arduino development software (Arduino IDE, Arduino Web Editor). The script requires sh, which is always available on Linux and macOS. sh is not available by default on Windows, though it is available as part of Git for Windows (Git Bash). If you don't have sh available, use the ""Download"" installation option. If you would like to use the arduino-cli command from any location, install Arduino CLI to a directory already in your PATH or add the Arduino CLI installation path to your PATH environment variable.","Categories
Terminals, HMI, Command Line Tools"
"itchat is an open-source WeChat personal account interface, it has never been easier to use python to call WeChat. With less than thirty lines of code, you can have a WeChat bot that handles all the information. Of course, the use of this api is far more than a robot, and more functions are waiting for you to discover. This interface shares a similar operation method with the public account interface itchatmp , learning to master two tools at a time. Now WeChat has become a large part of personal social networking. I hope this project can help you expand your personal WeChat account and facilitate your life. By printing the chat user and the parameters of the registration message, you can find that these values are all dictionaries. But in fact, that has carefully constructed corresponding messages, users, group chats, and official accounts.itchat is an open-source WeChat personal account interface, it has never been easier to use python to call WeChat. With less than thirty lines of code, you can have a WeChat bot that handles all the information. Of course, the use of this api is far more than a robot, and more functions are waiting for you to discover. This interface shares a similar operation method with the public account interface itchatmp , learning to master two tools at a time. Now WeChat has become a large part of personal social networking. I hope this project can help you expand your personal WeChat account and facilitate your life. By printing the chat user and the parameters of the registration message, you can find that these values are all dictionaries. But in fact, that has carefully constructed corresponding messages, users, group chats, and official accounts.","Categories
Terminals, Software Development, User Interface (UI)"
"werf is an Open Source CLI tool written in Go, designed to simplify and speed up the delivery of applications. To use it, you need to describe the configuration of your application (in other words, how to build and deploy it to Kubernetes) and store it in a Git repo, the latter acts as a single source of truth. In short, that's what we call GitOps today. werf is not a complete CI/CD solution, but a tool for creating pipelines that can be embedded into any existing CI/CD system. It literally ""connects the dots"" to bring these practices into your application. We consider it a new generation of high-level CI/CD tools. werf builds Docker images using Dockerfiles or an alternative fast built-in builder based on the custom syntax. It also deletes unused images from the Docker registry. werf deploys your application to Kubernetes using a chart in the Helm-compatible format with handy customizations and improved rollout tracking mechanism, error detection, and log output.werf is an Open Source CLI tool written in Go, designed to simplify and speed up the delivery of applications. To use it, you need to describe the configuration of your application (in other words, how to build and deploy it to Kubernetes) and store it in a Git repo, the latter acts as a single source of truth. In short, that's what we call GitOps today. werf is not a complete CI/CD solution, but a tool for creating pipelines that can be embedded into any existing CI/CD system. It literally ""connects the dots"" to bring these practices into your application. We consider it a new generation of high-level CI/CD tools. werf builds Docker images using Dockerfiles or an alternative fast built-in builder based on the custom syntax. It also deletes unused images from the Docker registry. werf deploys your application to Kubernetes using a chart in the Helm-compatible format with handy customizations and improved rollout tracking mechanism, error detection, and log output.","Categories
Terminals, CI/CD"
"Termux is an Android terminal application and Linux environment. At first start a small base system is downloaded, desired packages can then be installed using the apt package manager known from the Debian and Ubuntu Linux distributions. Access the built-in help by long-pressing anywhere on the terminal and selecting the Help menu option to learn more. Allows the app to view information about network connections such as which networks exist and are connected. Allows the app to create network sockets and use custom network protocols. The browser and other applications provide means to send data to the internet, so this permission is not required to send data to the internet. Allows an app to ask for permission to ignore battery optimizations for that app. This app can appear on top of other apps or other parts of the screen. This may interfere with normal app usage and change the way that other apps appear.Termux is an Android terminal application and Linux environment. At first start a small base system is downloaded, desired packages can then be installed using the apt package manager known from the Debian and Ubuntu Linux distributions. Access the built-in help by long-pressing anywhere on the terminal and selecting the Help menu option to learn more. Allows the app to view information about network connections such as which networks exist and are connected. Allows the app to create network sockets and use custom network protocols. The browser and other applications provide means to send data to the internet, so this permission is not required to send data to the internet. Allows an app to ask for permission to ignore battery optimizations for that app. This app can appear on top of other apps or other parts of the screen. This may interfere with normal app usage and change the way that other apps appear.","Categories
Terminals, Mobile"
"nnn (n³) is a full-featured terminal file manager. It's tiny, nearly 0-config and incredibly fast. It is designed to be unobtrusive with smart workflows to match the trains of thought. nnn can analyze disk usage, batch rename, launch apps and pick files. The plugin repository has tons of plugins to extend the capabilities further e.g. live previews, (un)mount disks, find & list, file/dir diff, upload files. A patch framework hosts sizable user-submitted patches which are subjective in nature. Independent (neo)vim plugins, nnn.vim, vim-floaterm nnn wrapper and nnn.nvim (neovim exclusive). Runs on the Pi, Termux (Android), Linux, macOS, BSD, Haiku, Cygwin, WSL, across DEs or a strictly CLI env. Minimizes screen refresh with fast line redraws. Tiny binary (typically around 100KB). 1-column mode for smaller terminals and form factors. Hackable - compile in/out features and dependencies.nnn (n³) is a full-featured terminal file manager. It's tiny, nearly 0-config and incredibly fast. It is designed to be unobtrusive with smart workflows to match the trains of thought. nnn can analyze disk usage, batch rename, launch apps and pick files. The plugin repository has tons of plugins to extend the capabilities further e.g. live previews, (un)mount disks, find & list, file/dir diff, upload files. A patch framework hosts sizable user-submitted patches which are subjective in nature. Independent (neo)vim plugins, nnn.vim, vim-floaterm nnn wrapper and nnn.nvim (neovim exclusive). Runs on the Pi, Termux (Android), Linux, macOS, BSD, Haiku, Cygwin, WSL, across DEs or a strictly CLI env. Minimizes screen refresh with fast line redraws. Tiny binary (typically around 100KB). 1-column mode for smaller terminals and form factors. Hackable - compile in/out features and dependencies.","Categories
Terminals, File Managers, Mobile"
"Tabby is an infinitely customizable cross-platform terminal app for local shells, serial, SSH and Telnet connections. SSH2 client with a connection manager. SFTP and Zmodem file transfers. X11 and port forwarding. Jump hosts. Agent forwarding, including Pageant and Windows native OpenSSH Agent. Login scripts. Optional built-in password manager with a master passphrase. Proxy command support. Support for different shells in the same window. Better tab-completion cmd.exe thanks to Clink. Explorer menu integration. Optional portable mode. Current directory detection that works. Multiple connection profiles. Newline conversion. Text, reading and byte-by-byte input modes. Text and hexdump output modes. Zmodem, Non-standard baud rates. Simultaneous multi-pane input. Optional PuTTY style right-click paste and copy on select. macOS vibrancy and Win 10 fluent background support.Tabby is an infinitely customizable cross-platform terminal app for local shells, serial, SSH and Telnet connections. SSH2 client with a connection manager. SFTP and Zmodem file transfers. X11 and port forwarding. Jump hosts. Agent forwarding, including Pageant and Windows native OpenSSH Agent. Login scripts. Optional built-in password manager with a master passphrase. Proxy command support. Support for different shells in the same window. Better tab-completion cmd.exe thanks to Clink. Explorer menu integration. Optional portable mode. Current directory detection that works. Multiple connection profiles. Newline conversion. Text, reading and byte-by-byte input modes. Text and hexdump output modes. Zmodem, Non-standard baud rates. Simultaneous multi-pane input. Optional PuTTY style right-click paste and copy on select. macOS vibrancy and Win 10 fluent background support.","Categories
Terminals"
"Serial port assistant
This is only a read-only mirror repository.
Main repository: https://github.com/KangLin/SerialPortAssistantSerial port assistant
This is only a read-only mirror repository.
Main repository: https://github.com/KangLin/SerialPortAssistant","Categories
Serial, Communications, Emulators"
"A tool for exploring a docker image, layer contents, and discovering ways to shrink the size of your Docker/OCI image. As you select a layer on the left, you are shown the contents of that layer combined with all previous layers on the right. Also, you can fully explore the file tree with the arrow keys. Files that have changed, been modified, added, or removed are indicated in the file tree. This can be adjusted to show changes for a specific layer, or aggregated changes up to this layer. The lower left pane shows basic layer info and an experimental metric that will guess how much wasted space your image contains. This might be from duplicating files across layers, moving files across layers, or not fully removing files. Both a percentage ""score"" and total wasted file space is provided. You can build a Docker image and do an immediate analysis with one command: dive build -t some-tag .A tool for exploring a docker image, layer contents, and discovering ways to shrink the size of your Docker/OCI image. As you select a layer on the left, you are shown the contents of that layer combined with all previous layers on the right. Also, you can fully explore the file tree with the arrow keys. Files that have changed, been modified, added, or removed are indicated in the file tree. This can be adjusted to show changes for a specific layer, or aggregated changes up to this layer. The lower left pane shows basic layer info and an experimental metric that will guess how much wasted space your image contains. This might be from duplicating files across layers, moving files across layers, or not fully removing files. Both a percentage ""score"" and total wasted file space is provided. You can build a Docker image and do an immediate analysis with one command: dive build -t some-tag .","Categories
Terminals"
"SDKMAN! is a tool for managing parallel versions of multiple Software Development Kits on most Unix based systems. It provides a convenient Command Line Interface (CLI) and API for installing, switching, removing and listing Candidates. Formerly known as GVM the Groovy enVironment Manager, it was inspired by the very useful RVM and rbenv tools, used at large by the Ruby community. SDKMAN is a tool for managing parallel Versions of multiple Software Development Kits on any Unix-based system. It provides a convenient command-line interface for installing, switching, removing and listing Candidates. If the environment needs tweaking for SDKMAN to be installed, the installer will prompt you accordingly and ask you to restart. Making life easier. No more trawling download pages, extracting archives, messing with _HOME and PATH environment variables. Runs on any UNIX based platforms, macOS, Linux, Cygwin, Solaris and FreeBSD.SDKMAN! is a tool for managing parallel versions of multiple Software Development Kits on most Unix based systems. It provides a convenient Command Line Interface (CLI) and API for installing, switching, removing and listing Candidates. Formerly known as GVM the Groovy enVironment Manager, it was inspired by the very useful RVM and rbenv tools, used at large by the Ruby community. SDKMAN is a tool for managing parallel Versions of multiple Software Development Kits on any Unix-based system. It provides a convenient command-line interface for installing, switching, removing and listing Candidates. If the environment needs tweaking for SDKMAN to be installed, the installer will prompt you accordingly and ask you to restart. Making life easier. No more trawling download pages, extracting archives, messing with _HOME and PATH environment variables. Runs on any UNIX based platforms, macOS, Linux, Cygwin, Solaris and FreeBSD.","Categories
Terminals"
"Pretty and more helpful exceptions in Python, automatically. While using better_exceptions in production, do not forget to unset the exceptions variable to avoid leaking sensitive data in your logs. If you do not see beautiful exceptions, first make sure that the environment variable does exist. On Linux and OSX, the export command does not add the variable permanently, you will probably need to edit the ~/.profile file to make it persistent. On Windows, you need to open a new terminal after the setx command.Pretty and more helpful exceptions in Python, automatically. While using better_exceptions in production, do not forget to unset the exceptions variable to avoid leaking sensitive data in your logs. If you do not see beautiful exceptions, first make sure that the environment variable does exist. On Linux and OSX, the export command does not add the variable permanently, you will probably need to edit the ~/.profile file to make it persistent. On Windows, you need to open a new terminal after the setx command.","Categories
Terminals"
"pastel is a command-line tool to generate, analyze, convert and manipulate colors. It supports many different color formats and color spaces like RGB (sRGB), HSL, CIELAB, CIELCh as well as ANSI 8-bit and 24-bit representations. pastel provides a number of commands like saturate, mix or paint. To get more information about a specific subcommand (say mix), you can call pastel mix -h or pastel help mix. Many pastel commands can be composed by piping the output of one command to another. You can also explicitly specify which colors you want to read from the input.pastel is a command-line tool to generate, analyze, convert and manipulate colors. It supports many different color formats and color spaces like RGB (sRGB), HSL, CIELAB, CIELCh as well as ANSI 8-bit and 24-bit representations. pastel provides a number of commands like saturate, mix or paint. To get more information about a specific subcommand (say mix), you can call pastel mix -h or pastel help mix. Many pastel commands can be composed by piping the output of one command to another. You can also explicitly specify which colors you want to read from the input.","Categories
Terminals, Design, Command Line Tools"
"Simple command-line tool for text to image generation using OpenAI's CLIP and Siren (Implicit neural representation network). In true deep learning fashion, more layers will yield better results. Default is at 16, but can be increased to 32 depending on your resources. Technique first devised and shared by Mario Klingemann, it allows you to prime the generator network with a starting image, before being steered towards the text. Simply specify the path to the image you wish to use, and optionally the number of initial training steps. We can also feed in an image as an optimization goal, instead of only priming the generator network. Deepdaze will then render its own interpretation of that image. The regular mode for texts only allows 77 tokens. If you want to visualize a full story/paragraph/song/poem, set create_story to True.Simple command-line tool for text to image generation using OpenAI's CLIP and Siren (Implicit neural representation network). In true deep learning fashion, more layers will yield better results. Default is at 16, but can be increased to 32 depending on your resources. Technique first devised and shared by Mario Klingemann, it allows you to prime the generator network with a starting image, before being steered towards the text. Simply specify the path to the image you wish to use, and optionally the number of initial training steps. We can also feed in an image as an optimization goal, instead of only priming the generator network. Deepdaze will then render its own interpretation of that image. The regular mode for texts only allows 77 tokens. If you want to visualize a full story/paragraph/song/poem, set create_story to True.","Categories
Terminals, Command Line Tools"
"fzf is a general-purpose command-line fuzzy finder. It's an interactive Unix filter for command-line that can be used with any list; files, command history, processes, hostnames, bookmarks, git commits, etc. fzf will launch an interactive finder, read the list from STDIN, and write the selected item to STDOUT. Without STDIN pipe, fzf will use find command to fetch the list of files excluding hidden ones. (You can override the default command with FZF_DEFAULT_COMMAND). fzf by default starts in fullscreen mode, but you can make it start below the cursor with the height option. Unless otherwise specified, fzf starts in ""extended-search mode"" where you can type in multiple search terms delimited by spaces. Fuzzy completion for files and directories can be triggered if the word before the cursor ends with the trigger sequence, which is by default **. Fuzzy completion for PIDs is provided for the kill command. In this case, there is no trigger sequence.fzf is a general-purpose command-line fuzzy finder. It's an interactive Unix filter for command-line that can be used with any list; files, command history, processes, hostnames, bookmarks, git commits, etc. fzf will launch an interactive finder, read the list from STDIN, and write the selected item to STDOUT. Without STDIN pipe, fzf will use find command to fetch the list of files excluding hidden ones. (You can override the default command with FZF_DEFAULT_COMMAND). fzf by default starts in fullscreen mode, but you can make it start below the cursor with the height option. Unless otherwise specified, fzf starts in ""extended-search mode"" where you can type in multiple search terms delimited by spaces. Fuzzy completion for files and directories can be triggered if the word before the cursor ends with the trigger sequence, which is by default **. Fuzzy completion for PIDs is provided for the kill command. In this case, there is no trigger sequence.","Categories
Terminals"
"The tldr-pages project is a collection of community-maintained help pages for command-line tools, that aims to be a simpler, more approachable complement to traditional man pages. The tldr pages are a community effort to simplify the beloved man pages with practical examples. Maybe you are new to the command-line world? Or just a little rusty? Or perhaps you can't always remember the arguments to lsof, or tar? There seems to be room for simpler help pages, focused on practical examples. This repository is just that, an ever-growing collection of examples for the most common UNIX, Linux, macOS, SunOS and Windows command-line tools. A popular and convenient way to access these pages on your computer is to install the Node.js client, which is supported by the tldr-pages project maintainers.The tldr-pages project is a collection of community-maintained help pages for command-line tools, that aims to be a simpler, more approachable complement to traditional man pages. The tldr pages are a community effort to simplify the beloved man pages with practical examples. Maybe you are new to the command-line world? Or just a little rusty? Or perhaps you can't always remember the arguments to lsof, or tar? There seems to be room for simpler help pages, focused on practical examples. This repository is just that, an ever-growing collection of examples for the most common UNIX, Linux, macOS, SunOS and Windows command-line tools. A popular and convenient way to access these pages on your computer is to install the Node.js client, which is supported by the tldr-pages project maintainers.","Categories
Terminals"
"The goal of the project is to create a beautiful and extensible experience for command-line interface users, built on open web standards. In the beginning, our focus will be primarily around speed, stability and the development of the correct API for extension authors. The user can hot-load and hot-reload plugins by pressing Command + R (refresh). Please strive to make plugins that don't require a complete restart of the application to work. Plugins affecting the `BrowserWindow` will the effect on new windows after hot-reload. On the main process, plugins are registered as soon as possible (we fire onLoad). On the browser, it's up to the user to trigger their load by pressing command+R. We put the user in control of the loading in this way to prevent them from losing critical work by extensions that reset state or don't preserve it correctly.The goal of the project is to create a beautiful and extensible experience for command-line interface users, built on open web standards. In the beginning, our focus will be primarily around speed, stability and the development of the correct API for extension authors. The user can hot-load and hot-reload plugins by pressing Command + R (refresh). Please strive to make plugins that don't require a complete restart of the application to work. Plugins affecting the `BrowserWindow` will the effect on new windows after hot-reload. On the main process, plugins are registered as soon as possible (we fire onLoad). On the browser, it's up to the user to trigger their load by pressing command+R. We put the user in control of the loading in this way to prevent them from losing critical work by extensions that reset state or don't preserve it correctly.","Categories
Terminals"
"Liquid Prompt gives you a nicely displayed prompt with useful information when you need it. It shows you what you need when you need it. You will notice what changes when it changes, saving time and frustration. You can even use it with your favorite shell, Bash or zsh. Liquidprompt is an adaptive prompt for Bash & Zsh that gives you a nicely displayed prompt with useful information when you need it. It does this with a powerful theming engine and a large array of data sources. To comply with the AGPL clauses, anybody offering Liquid Prompt over the network is required to also offer access to the source code of it and allow further use and modifications. As Liquid Prompt is implemented purely in shell script, anybody using it over SSH or equivalent terminal connection automatically also has access to the source code, so it is easy to comply with the license.Liquid Prompt gives you a nicely displayed prompt with useful information when you need it. It shows you what you need when you need it. You will notice what changes when it changes, saving time and frustration. You can even use it with your favorite shell, Bash or zsh. Liquidprompt is an adaptive prompt for Bash & Zsh that gives you a nicely displayed prompt with useful information when you need it. It does this with a powerful theming engine and a large array of data sources. To comply with the AGPL clauses, anybody offering Liquid Prompt over the network is required to also offer access to the source code of it and allow further use and modifications. As Liquid Prompt is implemented purely in shell script, anybody using it over SSH or equivalent terminal connection automatically also has access to the source code, so it is easy to comply with the license.","Categories
Terminals"
"A data hoarder’s dream come true, bundle any web page into a single HTML file. You can finally replace that gazillion of open tabs with a gazillion of .html files stored somewhere on your precious little drive. Unlike the conventional “Save page as”, monolith not only saves the target document, it embeds CSS, image, and JavaScript assets all at once, producing a single HTML5 document that is a joy to store and share. If compared to saving websites with wget -mpk, this tool embeds all assets as data URLs and therefore lets browsers render the saved page exactly the way it was on the Internet, even when no network connection is available.A data hoarder’s dream come true, bundle any web page into a single HTML file. You can finally replace that gazillion of open tabs with a gazillion of .html files stored somewhere on your precious little drive. Unlike the conventional “Save page as”, monolith not only saves the target document, it embeds CSS, image, and JavaScript assets all at once, producing a single HTML5 document that is a joy to store and share. If compared to saving websites with wget -mpk, this tool embeds all assets as data URLs and therefore lets browsers render the saved page exactly the way it was on the Internet, even when no network connection is available.","Categories
Terminals"
"The official npm run-script command cannot run multiple scripts, so if we want to run multiple scripts, it's redundant a bit. Let's shorten it by glob-like patterns. We sometimes use & to run multiple commands in parallel, but cmd.exe (npm run-script uses it by default) does not support the &. Half of Node.js users are using it on Windows, so the use of & might block contributions. npm-run-all parallel works well on Windows as well.The official npm run-script command cannot run multiple scripts, so if we want to run multiple scripts, it's redundant a bit. Let's shorten it by glob-like patterns. We sometimes use & to run multiple commands in parallel, but cmd.exe (npm run-script uses it by default) does not support the &. Half of Node.js users are using it on Windows, so the use of & might block contributions. npm-run-all parallel works well on Windows as well.","Categories
Terminals"
"The main purpose of this is to trick those that actually attempt to steal peoples passwords and login(s) against the;
Computer Fraud and Abuse Act (CFAA)
Stored Communications Act (SCA)
Electronic Communications Privacy Act (ECPA)
And is based off of batch functions converted into an exe that essentially looks like an authentic Oauth2 password stealer, but in reality creates about a thousand empty folders on the desktop changes the BG and restarts the pc, adding the exe to the startup folder and ultimately ruining said bad persons PC.The main purpose of this is to trick those that actually attempt to steal peoples passwords and login(s) against the;
Computer Fraud and Abuse Act (CFAA)
Stored Communications Act (SCA)
Electronic Communications Privacy Act (ECPA)
And is based off of batch functions converted into an exe that essentially looks like an authentic Oauth2 password stealer, but in reality creates about a thousand empty folders on the desktop changes the BG and restarts the pc, adding the exe to the startup folder and ultimately ruining said bad persons PC.","Categories
Terminals, System"
"CSSLint is an open-source CSS code quality tool originally written by Nicholas C. Zakas and Nicole Sullivan. A lint tool performs static analysis of source code and flags patterns that might be errors or otherwise cause problems for the developer. CSSLint is a tool to help point out problems with your CSS code. It does basic syntax checking as well as applying a set of rules to the code that look for problematic patterns or signs of inefficiency. The rules are all pluggable, so you can easily write your own or omit ones you don't want. You can integrate CSSLint into your favorite IDE to make checking your CSS code quality easy. In fact, some IDEs already have CSSLint built-in. Once you're familiar with the CSSLint command-line interface, the next step is to integrate it into your build system.CSSLint is an open-source CSS code quality tool originally written by Nicholas C. Zakas and Nicole Sullivan. A lint tool performs static analysis of source code and flags patterns that might be errors or otherwise cause problems for the developer. CSSLint is a tool to help point out problems with your CSS code. It does basic syntax checking as well as applying a set of rules to the code that look for problematic patterns or signs of inefficiency. The rules are all pluggable, so you can easily write your own or omit ones you don't want. You can integrate CSSLint into your favorite IDE to make checking your CSS code quality easy. In fact, some IDEs already have CSSLint built-in. Once you're familiar with the CSSLint command-line interface, the next step is to integrate it into your build system.","Categories
Terminals, Source Code Analysis"
"XcodeGen is a command line tool written in Swift that generates your Xcode project using your folder structure and a project spec. The project spec is a YAML or JSON file that defines your targets, configurations, schemes, custom build settings and many other options. All your source directories are automatically parsed and referenced appropriately while preserving your folder structure. Sensible defaults are used in many places, so you only need to customize what is needed. Very complex projects can also be defined using more advanced features. Generate projects on demand and remove your .xcodeproj from git, which means no more merge conflicts! Automatically generate Schemes for different environments like test and production. Share build settings across multiple targets with build setting groups. Easily copy and paste files and directories without having to edit anything in Xcode.XcodeGen is a command line tool written in Swift that generates your Xcode project using your folder structure and a project spec. The project spec is a YAML or JSON file that defines your targets, configurations, schemes, custom build settings and many other options. All your source directories are automatically parsed and referenced appropriately while preserving your folder structure. Sensible defaults are used in many places, so you only need to customize what is needed. Very complex projects can also be defined using more advanced features. Generate projects on demand and remove your .xcodeproj from git, which means no more merge conflicts! Automatically generate Schemes for different environments like test and production. Share build settings across multiple targets with build setting groups. Easily copy and paste files and directories without having to edit anything in Xcode.","Categories
Terminals, Code Generators, Command Line Tools"
"PathPicker accepts a wide range of input, output from git commands, grep results, searches, pretty much anything. After parsing the input, PathPicker presents you with a nice UI to select which files you're interested in. After that you can open them in your favorite editor or execute arbitrary commands. Facebook PathPicker is a simple command line tool that solves the perpetual problem of selecting files out of bash output. Bash is fully supported and works the best. ZSH is supported as well, but won't have a few features like alias expansion in command line mode. csh/fish/rc are supported in the latest version, but might have quirks or issues in older versions of PathPicker. Note: if your default shell and current shell is not in the same family (bash/zsh... v.s. fish/rc), you need to manually export environment variable $SHELL to your current shell.PathPicker accepts a wide range of input, output from git commands, grep results, searches, pretty much anything. After parsing the input, PathPicker presents you with a nice UI to select which files you're interested in. After that you can open them in your favorite editor or execute arbitrary commands. Facebook PathPicker is a simple command line tool that solves the perpetual problem of selecting files out of bash output. Bash is fully supported and works the best. ZSH is supported as well, but won't have a few features like alias expansion in command line mode. csh/fish/rc are supported in the latest version, but might have quirks or issues in older versions of PathPicker. Note: if your default shell and current shell is not in the same family (bash/zsh... v.s. fish/rc), you need to manually export environment variable $SHELL to your current shell.","Categories
Terminals, Command Line Tools"
"awless is a powerful, innovative and small surface command-line interface (CLI) to manage Amazon Web Services. Provides a simple/powerful text templating language to create and revert fully-fledged infrastructures. Wrapping/composing AWS API calls when necessary to enrich behavior. Ex: ensure smart defaults, security best practices, etc. Local log of all your cloud modifications done through awless to list/revert past actions. sync to a local graph storage of your cloud representation. Exploration of your cloud infrastructure and resources interrelations, even offline using the local graph storage. Clearer and flexible terminal output's with: numerous formats (machine/human-friendly), enriched resources' properties/relations when feasible.awless is a powerful, innovative and small surface command-line interface (CLI) to manage Amazon Web Services. Provides a simple/powerful text templating language to create and revert fully-fledged infrastructures. Wrapping/composing AWS API calls when necessary to enrich behavior. Ex: ensure smart defaults, security best practices, etc. Local log of all your cloud modifications done through awless to list/revert past actions. sync to a local graph storage of your cloud representation. Exploration of your cloud infrastructure and resources interrelations, even offline using the local graph storage. Clearer and flexible terminal output's with: numerous formats (machine/human-friendly), enriched resources' properties/relations when feasible.","Categories
Terminals"
"Although the AWS CLI is a great resource to manage your AWS-powered services, it's tough to remember the usage of 70+ top-level commands, 2000+ subcommand, countless command-specific options, and resources such as instance tags and buckets. SAWS aims to supercharge the AWS CLI with features focusing on improving ease-of-use, and increasing productivity. Under the hood, SAWS is powered by the AWS CLI and supports the same commands and command structure. In addition to the default commands, subcommands, and options the AWS CLI provides, SAWS supports auto-completion of your AWS resources. Currently, bucket names, instance ids, and instance tags are included, with additional support for more resources under development. Sometimes you're not quite sure what specific command/subcommand/option combination you need to use. In such cases, browsing through several combinations with the help command line is cumbersome versus browsing the online AWS CLI docs through a web browser.Although the AWS CLI is a great resource to manage your AWS-powered services, it's tough to remember the usage of 70+ top-level commands, 2000+ subcommand, countless command-specific options, and resources such as instance tags and buckets. SAWS aims to supercharge the AWS CLI with features focusing on improving ease-of-use, and increasing productivity. Under the hood, SAWS is powered by the AWS CLI and supports the same commands and command structure. In addition to the default commands, subcommands, and options the AWS CLI provides, SAWS supports auto-completion of your AWS resources. Currently, bucket names, instance ids, and instance tags are included, with additional support for more resources under development. Sometimes you're not quite sure what specific command/subcommand/option combination you need to use. In such cases, browsing through several combinations with the help command line is cumbersome versus browsing the online AWS CLI docs through a web browser.","Categories
Terminals, User Interface (UI)"
"Unicoder is a single header file that you add to your C or C++ projects which allows you to easily display unicode characters in the Terminal display irregardless of what compiler you are using. That is, it was written so that it would be portable so you can change platforms or compilers with ease. Currently it can be used on either the Windows or Linux platforms.
Also, Unicoder can insert compiler specific commands that perform useful task such as clearing the console display or turn on bold and underline or change text font and background colors. And it provides a rudimentary way to draw on the display.
Currently, Unicoder supports Ubuntu-Linux GCC and on Windows it can be used with these IDEs and compilers: MS Visual Studio 2017&2019, Code::Blocks, Pelles C, Embarcadero Dev-C++, Open Watcom, MSYS, MSYS2, Cygwin and with MinGW, Clang, LCC and Digital Mars C (but Digital Mars does not support Unicode!)Unicoder is a single header file that you add to your C or C++ projects which allows you to easily display unicode characters in the Terminal display irregardless of what compiler you are using. That is, it was written so that it would be portable so you can change platforms or compilers with ease. Currently it can be used on either the Windows or Linux platforms.
Also, Unicoder can insert compiler specific commands that perform useful task such as clearing the console display or turn on bold and underline or change text font and background colors. And it provides a rudimentary way to draw on the display.
Currently, Unicoder supports Ubuntu-Linux GCC and on Windows it can be used with these IDEs and compilers: MS Visual Studio 2017&2019, Code::Blocks, Pelles C, Embarcadero Dev-C++, Open Watcom, MSYS, MSYS2, Cygwin and with MinGW, Clang, LCC and Digital Mars C (but Digital Mars does not support Unicode!)","Categories
Terminals, User Interface (UI), Libraries"
"carbon.now.sh by is a wonderful tool that lets you generate beautiful images of your source code through an intuitive UI, while letting you customize aspects like fonts, themes, window controls and much more. carbon-now-cli gives you the full power of Carbon, right at your fingertips, inside the terminal. Generate beautiful images from a source file, or sections of a source file, by running a single command. Want to customize everything before generating the image? Run it in interactive mode. Downloads the real, high-quality image (no DOM screenshots). Detects file type automatically. Supports all file extensions supported by carbon.now.sh and more. Create and share beautiful images of your source code. Start typing or drop a file into the text area to get started. Displays image directly in supported terminals. Reports each step and therefore shortens the wait.carbon.now.sh by is a wonderful tool that lets you generate beautiful images of your source code through an intuitive UI, while letting you customize aspects like fonts, themes, window controls and much more. carbon-now-cli gives you the full power of Carbon, right at your fingertips, inside the terminal. Generate beautiful images from a source file, or sections of a source file, by running a single command. Want to customize everything before generating the image? Run it in interactive mode. Downloads the real, high-quality image (no DOM screenshots). Detects file type automatically. Supports all file extensions supported by carbon.now.sh and more. Create and share beautiful images of your source code. Start typing or drop a file into the text area to get started. Displays image directly in supported terminals. Reports each step and therefore shortens the wait.","Categories
Terminals"
"Kryo is a fast and efficient binary object graph serialization framework for Java. The goals of the project are high speed, low size, and an easy-to-use API. The project is useful any time objects need to be persisted, whether to a file, database or over the network. Kryo can also perform automatic deep and shallow copying/cloning. This is direct copying from object to object, not object to bytes to object. Kryo has three sets of methods for reading and writing objects. If the concrete class of the object is not known and the object could be null. Besides methods to read and write objects, the Kryo class provides a way to register serializers, reads and writes class identifiers efficiently, handles null objects for serializers that can't accept nulls, and handles reading and writing object references (if enabled). This allows serializers to focus on their serialization tasks.Kryo is a fast and efficient binary object graph serialization framework for Java. The goals of the project are high speed, low size, and an easy-to-use API. The project is useful any time objects need to be persisted, whether to a file, database or over the network. Kryo can also perform automatic deep and shallow copying/cloning. This is direct copying from object to object, not object to bytes to object. Kryo has three sets of methods for reading and writing objects. If the concrete class of the object is not known and the object could be null. Besides methods to read and write objects, the Kryo class provides a way to register serializers, reads and writes class identifiers efficiently, handles null objects for serializers that can't accept nulls, and handles reading and writing object references (if enabled). This allows serializers to focus on their serialization tasks.","Categories
HTML/XHTML, Serial, Hex Editors"
"testssl.sh is a free command-line tool that checks a server's service on any port for the support of TLS/SSL ciphers, protocols as well as recent cryptographic flaws and more. testssl.sh is free and open-source software. You can use it under the terms of GPLv2, please review the License before using it. Works for Linux, Mac OSX, FreeBSD, NetBSD and WSL/MSYS2/Cygwin out of the box, no need to install or configure something, no gems, CPAN, pip or the like. OpenBSD only needs bash to be postinstalled. You can test any SSL/TLS enabled and STARTTLS service, not only webservers at port 443. Several command line options help you to run your test and configure your output. If a particular check cannot be performed because of a missing capability on your client side, you'll get a warning. You can look at the code, see what's going on and you can change it.testssl.sh is a free command-line tool that checks a server's service on any port for the support of TLS/SSL ciphers, protocols as well as recent cryptographic flaws and more. testssl.sh is free and open-source software. You can use it under the terms of GPLv2, please review the License before using it. Works for Linux, Mac OSX, FreeBSD, NetBSD and WSL/MSYS2/Cygwin out of the box, no need to install or configure something, no gems, CPAN, pip or the like. OpenBSD only needs bash to be postinstalled. You can test any SSL/TLS enabled and STARTTLS service, not only webservers at port 443. Several command line options help you to run your test and configure your output. If a particular check cannot be performed because of a missing capability on your client side, you'll get a warning. You can look at the code, see what's going on and you can change it.","Categories
Terminals, Security, Command Line Tools"
"There's been a lot of churn around AMS since it began back in Rails 3.2 and a lot of new libraries are around and the JSON:API spec has reached 1.0. If there is to be a 1.0 release of AMS, it will need to address the general needs of serialization in much the way ActiveJob can be used with different workers. The next major release is in development. We're starting simple and avoiding, at least at the outset, all the complications in AMS version, especially all the implicit behavior from guessing the serializer, to the association's serializer, to the serialization type, etc. The basic idea is that models to serializers are a one to many relationship. Everything will need to be explicit. If you want to serialize a User with a UserSerializer, you'll need to call it directly. The serializer will essentially be for defining a basic JSON:API resource object: id, type, attributes, and relationships.There's been a lot of churn around AMS since it began back in Rails 3.2 and a lot of new libraries are around and the JSON:API spec has reached 1.0. If there is to be a 1.0 release of AMS, it will need to address the general needs of serialization in much the way ActiveJob can be used with different workers. The next major release is in development. We're starting simple and avoiding, at least at the outset, all the complications in AMS version, especially all the implicit behavior from guessing the serializer, to the association's serializer, to the serialization type, etc. The basic idea is that models to serializers are a one to many relationship. Everything will need to be explicit. If you want to serialize a User with a UserSerializer, you'll need to call it directly. The serializer will essentially be for defining a basic JSON:API resource object: id, type, attributes, and relationships.","Categories
Serial, JSON"
"Windows/BSD/Linux supported, HTTP and HTTPS supported as well. For self-signed certificates use -k, and skip timing the body of a response with -I. Follow 30x redirects with -L. Change HTTP method with -X METHOD. Provide a PUT or POST request body with -d string. To supply the PUT or POST body as a file, use -d @filename. Add extra request headers with -H 'Name: value'. The response body is usually discarded, you can use -o filename to save it to a file, or -O to save it to the file name suggested by the server. HTTP/HTTPS proxies supported via the usual HTTP_PROXY/HTTPS_PROXY env vars (as well as lower case variants). Supply your own client-side certificate with -E cert.pem.Windows/BSD/Linux supported, HTTP and HTTPS supported as well. For self-signed certificates use -k, and skip timing the body of a response with -I. Follow 30x redirects with -L. Change HTTP method with -X METHOD. Provide a PUT or POST request body with -d string. To supply the PUT or POST body as a file, use -d @filename. Add extra request headers with -H 'Name: value'. The response body is usually discarded, you can use -o filename to save it to a file, or -O to save it to the file name suggested by the server. HTTP/HTTPS proxies supported via the usual HTTP_PROXY/HTTPS_PROXY env vars (as well as lower case variants). Supply your own client-side certificate with -E cert.pem.","Categories
Terminals"
"SwiftFormat is a code library and command-line tool for reformatting Swift code on macOS or Linux. SwiftFormat goes above and beyond what you might expect from a code formatter. In addition to adjusting white space, it can insert or remove implicit self, remove redundant parentheses, and correct many other deviations from the standard Swift idioms. Many programmers have a preferred style for formatting their code, and others seem entirely blind to the existing formatting conventions of a project. When collaborating on a project, it can be helpful to agree on a common coding style, but enforcing that manually is tedious and error-prone, and can lead to arguments if some participants take it more seriously than others. Having a tool to automatically enforce a common style eliminates those issues, and lets you focus on the behavior of the code, not its presentation.SwiftFormat is a code library and command-line tool for reformatting Swift code on macOS or Linux. SwiftFormat goes above and beyond what you might expect from a code formatter. In addition to adjusting white space, it can insert or remove implicit self, remove redundant parentheses, and correct many other deviations from the standard Swift idioms. Many programmers have a preferred style for formatting their code, and others seem entirely blind to the existing formatting conventions of a project. When collaborating on a project, it can be helpful to agree on a common coding style, but enforcing that manually is tedious and error-prone, and can lead to arguments if some participants take it more seriously than others. Having a tool to automatically enforce a common style eliminates those issues, and lets you focus on the behavior of the code, not its presentation.","Categories
Terminals, Command Line Tools"
"Easily and securely share files and directories from the command line through a safe, private and encrypted link using a single simple command. Files are shared using the Send service and may be up to 1GB. Others are able to download these files with this tool, or through their web browser. All files are always encrypted on the client, and secrets are never shared with the remote host. An optional password may be specified, and a default file lifetime of 1 (up to 20) download or 24 hours is enforced to ensure your stuff does not remain online forever. This provides a secure platform to share your files. History tracking your files for easy management, ability to use your own Send hosts. Inspect or delete shared files, accurate error reporting. Streaming encryption and uploading/downloading, very low memory footprint. Intended for use in scripts without interaction.Easily and securely share files and directories from the command line through a safe, private and encrypted link using a single simple command. Files are shared using the Send service and may be up to 1GB. Others are able to download these files with this tool, or through their web browser. All files are always encrypted on the client, and secrets are never shared with the remote host. An optional password may be specified, and a default file lifetime of 1 (up to 20) download or 24 hours is enforced to ensure your stuff does not remain online forever. This provides a secure platform to share your files. History tracking your files for easy management, ability to use your own Send hosts. Inspect or delete shared files, accurate error reporting. Streaming encryption and uploading/downloading, very low memory footprint. Intended for use in scripts without interaction.","Categories
Terminals, File Managers, Command Line Tools"
"A toolkit for building console GUI apps for .NET, .NET Core, and Mono that works on Windows, the Mac, and Linux/Unix. In addition, a complete Xterm/Vt100 terminal emulator that you can embed is now part of XtermSharp, you just need to pull TerminalView.cs into your project. Works on Windows, Mac, and Linux. Terminal drivers for Curses, Windows Console, and the .NET Console mean Terminal.Gui works well on both color and monochrome terminals and has mouse support on terminal emulators that support it. Both keyboard and mouse input are supported, including limited support for drag & drop. Terminal.Gui supports both Absolute layout and an innovative UI layout system referred to as Computed Layout. Computed Layout makes it easy to layout controls relative to each other and enables dynamic console GUIs.A toolkit for building console GUI apps for .NET, .NET Core, and Mono that works on Windows, the Mac, and Linux/Unix. In addition, a complete Xterm/Vt100 terminal emulator that you can embed is now part of XtermSharp, you just need to pull TerminalView.cs into your project. Works on Windows, Mac, and Linux. Terminal drivers for Curses, Windows Console, and the .NET Console mean Terminal.Gui works well on both color and monochrome terminals and has mouse support on terminal emulators that support it. Both keyboard and mouse input are supported, including limited support for drag & drop. Terminal.Gui supports both Absolute layout and an innovative UI layout system referred to as Computed Layout. Computed Layout makes it easy to layout controls relative to each other and enables dynamic console GUIs.","Categories
Terminals, User Interface (UI)"
This project is heavily inspired by the super colorls project but with some little differences. For example it is written in rust and not in ruby which makes it much faster. Install the patched fonts of powerline nerd-font and/or font-awesome. Have a look at the Nerd Font README for more installation instructions. Don't forget to setup your terminal in order to use the correct font. lsd can be configured with a configuration file to set the default options. On non-Windows systems lsd follows the XDG Base Directory Specification convention for the location of the configuration file. The configuration dir lsd uses is itself named lsd. On Windows systems lsd only looks for the config.yaml files in one location. You can also provide a configuration file from a non standard location.This project is heavily inspired by the super colorls project but with some little differences. For example it is written in rust and not in ruby which makes it much faster. Install the patched fonts of powerline nerd-font and/or font-awesome. Have a look at the Nerd Font README for more installation instructions. Don't forget to setup your terminal in order to use the correct font. lsd can be configured with a configuration file to set the default options. On non-Windows systems lsd follows the XDG Base Directory Specification convention for the location of the configuration file. The configuration dir lsd uses is itself named lsd. On Windows systems lsd only looks for the config.yaml files in one location. You can also provide a configuration file from a non standard location.,"Categories
Terminals"
"terminal-notifier is a command-line tool to send macOS User Notifications, which are available on macOS 10.10 and higher. alerter features were merged in terminal-notifier 1.7. This led to some issues and even more issues in the 1.8 release. From now on terminal-notifier won't have the sticky notification feature nor the actions buttons. If you need them please use alerter. Sticking to two smaller specialized tools will hopefully make them easier to maintain and less error prone. It is currently packaged as an application bundle, because NSUserNotification does not work from a ‘Foundation tool’. radar://11956694. If you intend to package terminal-notifier with your app to distribute it on the Mac App Store, please use 1.5.2; version 1.6.0+ uses a private method override, which is not allowed in the App Store Guidelines.terminal-notifier is a command-line tool to send macOS User Notifications, which are available on macOS 10.10 and higher. alerter features were merged in terminal-notifier 1.7. This led to some issues and even more issues in the 1.8 release. From now on terminal-notifier won't have the sticky notification feature nor the actions buttons. If you need them please use alerter. Sticking to two smaller specialized tools will hopefully make them easier to maintain and less error prone. It is currently packaged as an application bundle, because NSUserNotification does not work from a ‘Foundation tool’. radar://11956694. If you intend to package terminal-notifier with your app to distribute it on the Mac App Store, please use 1.5.2; version 1.6.0+ uses a private method override, which is not allowed in the App Store Guidelines.","Categories
Terminals, Security, Command Line Tools"
"A Slack client for your terminal. Download a compatible binary for your system. For convenience, place slack-term in a directory where you can access it from the command line. Usually this is /usr/local/bin. If you want, you can also get slack-term via Go. You can also run it with docker, make sure you have a valid config file on your host system. In addition to running slack-term from the command line by using slack-term, you have some additional flags that you can use. You can specify a different location of the slack term config file. This enables you to run several slack-term instances with different configurations/tokens. You can also specify the slack-token that needs to be used, from the command line. There is also an option to set the slack-token for a single slack-term instance by setting the SLACK_TOKEN environment variable.A Slack client for your terminal. Download a compatible binary for your system. For convenience, place slack-term in a directory where you can access it from the command line. Usually this is /usr/local/bin. If you want, you can also get slack-term via Go. You can also run it with docker, make sure you have a valid config file on your host system. In addition to running slack-term from the command line by using slack-term, you have some additional flags that you can use. You can specify a different location of the slack term config file. This enables you to run several slack-term instances with different configurations/tokens. You can also specify the slack-token that needs to be used, from the command line. There is also an option to set the slack-token for a single slack-term instance by setting the SLACK_TOKEN environment variable.","Categories
Terminals, Chat"
"AngularStrap is a set of native directives that enables seamless integration of Bootstrap#^3.0 into your AngularJS#^1.2 application. With no external dependency except the Bootstrap CSS styles, AngularStrap is light and fast. It has been built from the ground up to leverage ngAnimate! AngularStrap is tested against the latest patch release of the 1.2, 1.3 and 1.4 branches. AngularStrap provides two different files, angular-strap.js: library javascript code, and angular-strap.tpl.js: default HTML inline templates used by the directives. By keeping the HTML template definitions in a separate file, it makes it easier to customize the templates used by the directives by creating a custom copy of the file or by overriding some of the templates. AngularStrap provides independently built modules that can be loaded separately.AngularStrap is a set of native directives that enables seamless integration of Bootstrap#^3.0 into your AngularJS#^1.2 application. With no external dependency except the Bootstrap CSS styles, AngularStrap is light and fast. It has been built from the ground up to leverage ngAnimate! AngularStrap is tested against the latest patch release of the 1.2, 1.3 and 1.4 branches. AngularStrap provides two different files, angular-strap.js: library javascript code, and angular-strap.tpl.js: default HTML inline templates used by the directives. By keeping the HTML template definitions in a separate file, it makes it easier to customize the templates used by the directives by creating a custom copy of the file or by overriding some of the templates. AngularStrap provides independently built modules that can be loaded separately.","Categories
Terminals"
"drive is a tiny program to pull or push Google Drive files. Make sure to set your GOPATH in your env, .bashrc or .bash_profile file. You can install scripts for automating major drive commands and syncing from drive-google wiki, also described in platform_packages.md. See file Makefile which currently supports cross compilation. Just run make and then inspect the binaries in directory bin. drive supports resource configuration files (.driverc) that you can place both globally (in your home directory) and locally(in the mounted drive dir) or in the directory that you are running an operation from, relative to the root. drive allows you to specify a '.driveignore' file similar to your .gitignore, in the root directory of the mounted drive. Blank lines and those prefixed by '#' are considered as comments and skipped.drive is a tiny program to pull or push Google Drive files. Make sure to set your GOPATH in your env, .bashrc or .bash_profile file. You can install scripts for automating major drive commands and syncing from drive-google wiki, also described in platform_packages.md. See file Makefile which currently supports cross compilation. Just run make and then inspect the binaries in directory bin. drive supports resource configuration files (.driverc) that you can place both globally (in your home directory) and locally(in the mounted drive dir) or in the directory that you are running an operation from, relative to the root. drive allows you to specify a '.driveignore' file similar to your .gitignore, in the root directory of the mounted drive. Blank lines and those prefixed by '#' are considered as comments and skipped.","Categories
Terminals, File Managers"
A command-line tool that reorganizes your Xcode project folder to match your Xcode groups. Make sure that your project is backed up through source control before doing anything. Execute the command on your project to have it reorganize the files on the file system:A command-line tool that reorganizes your Xcode project folder to match your Xcode groups. Make sure that your project is backed up through source control before doing anything. Execute the command on your project to have it reorganize the files on the file system:,"Categories
Terminals, Command Line Tools"
"Typer is a library for building CLI applications that users will love using and developers will love creating. Based on Python 3.6+ type hints. Great editor support. Completion everywhere. Less time debugging. Designed to be easy to use and learn. Less time reading docs. It's easy to use for the final users. Automatic help, and automatic completion for all shells. Minimize code duplication. Multiple features from each parameter declaration. Fewer bugs. The simplest example adds only 2 lines of code to your app: 1 import, 1 function call. Grow in complexity as much as you want, create arbitrarily complex trees of commands and groups of subcommands, with options and arguments. And it's intended to be the FastAPI of CLIs. Typer stands on the shoulders of a giant. Its only internal dependency is Click.Typer is a library for building CLI applications that users will love using and developers will love creating. Based on Python 3.6+ type hints. Great editor support. Completion everywhere. Less time debugging. Designed to be easy to use and learn. Less time reading docs. It's easy to use for the final users. Automatic help, and automatic completion for all shells. Minimize code duplication. Multiple features from each parameter declaration. Fewer bugs. The simplest example adds only 2 lines of code to your app: 1 import, 1 function call. Grow in complexity as much as you want, create arbitrarily complex trees of commands and groups of subcommands, with options and arguments. And it's intended to be the FastAPI of CLIs. Typer stands on the shoulders of a giant. Its only internal dependency is Click.","Categories
Terminals"
"Please upgrade to Ruby >= 2.4 before installing Guard! To install for older versions, update Bundler at least 1.12: gem update bundler and Bundler should correctly resolve to earlier gems for your given Ruby version. Guard automates various tasks by running custom rules whenever file or directories are modified. It's frequently used by software developers, web designers, writers and other specialists to avoid mundane, repetitive actions and commands such as ""relaunching"" tools after changing source files or configurations. Common use cases include: an IDE replacement, web development tools, designing ""smart"" and ""responsive"" build systems/workflows, automating various project tasks and installing/monitoring various system services.Please upgrade to Ruby >= 2.4 before installing Guard! To install for older versions, update Bundler at least 1.12: gem update bundler and Bundler should correctly resolve to earlier gems for your given Ruby version. Guard automates various tasks by running custom rules whenever file or directories are modified. It's frequently used by software developers, web designers, writers and other specialists to avoid mundane, repetitive actions and commands such as ""relaunching"" tools after changing source files or configurations. Common use cases include: an IDE replacement, web development tools, designing ""smart"" and ""responsive"" build systems/workflows, automating various project tasks and installing/monitoring various system services.","Categories
Terminals, System, Command Line Tools"
"hexyl is a simple hex viewer for the terminal. It uses a colored output to distinguish different categories of bytes (NULL bytes, printable ASCII characters, ASCII whitespace characters, other ASCII characters and non-ASCII). If you run Ubuntu 19.10 (Eoan Ermine) or newer, you can install the officially maintained package. If you run Debian Buster or newer, you can also install the officially maintained Debian package. Check out the release page for binary builds. Alternatively, install from source via cargo (see below). Make sure that you use a terminal that supports ANSI escape sequences (like ConHost v2 since Windows 10 1703 or Windows Terminal since Windows 10 1903).hexyl is a simple hex viewer for the terminal. It uses a colored output to distinguish different categories of bytes (NULL bytes, printable ASCII characters, ASCII whitespace characters, other ASCII characters and non-ASCII). If you run Ubuntu 19.10 (Eoan Ermine) or newer, you can install the officially maintained package. If you run Debian Buster or newer, you can also install the officially maintained Debian package. Check out the release page for binary builds. Alternatively, install from source via cargo (see below). Make sure that you use a terminal that supports ANSI escape sequences (like ConHost v2 since Windows 10 1703 or Windows Terminal since Windows 10 1903).","Categories
Terminals"
"pup is a command line tool for processing HTML. It reads from stdin, prints to stdout, and allows the user to filter parts of the page using CSS selectors. Inspired by jq, pup aims to be a fast and flexible way of exploring HTML from the terminal. If you have Go installed on your computer just run go get. If you're on OS X, use Homebrew to install (no Go required). By default pup will fill in missing tags and properly indent the page. CSS selectors have a group of specifiers called ""pseudo classes"" which are pretty cool. pup implements a majority of the relevant ones them. When combining selectors, the HTML nodes selected by the previous selector will be passed to the next ones. Non-HTML selectors which effect the output type are implemented as functions which can be provided as a final argument. Print the values of all attributes with a given key from all selected nodes.pup is a command line tool for processing HTML. It reads from stdin, prints to stdout, and allows the user to filter parts of the page using CSS selectors. Inspired by jq, pup aims to be a fast and flexible way of exploring HTML from the terminal. If you have Go installed on your computer just run go get. If you're on OS X, use Homebrew to install (no Go required). By default pup will fill in missing tags and properly indent the page. CSS selectors have a group of specifiers called ""pseudo classes"" which are pretty cool. pup implements a majority of the relevant ones them. When combining selectors, the HTML nodes selected by the previous selector will be passed to the next ones. Non-HTML selectors which effect the output type are implemented as functions which can be provided as a final argument. Print the values of all attributes with a given key from all selected nodes.","Categories
HTML/XHTML, Terminals, Command Line Tools"
"Highlight PHP code in console (terminal). PHP 8.0, handle changed tokenization of namespaced names. GH Actions, set error reporting to E_ALL. PHPCS, various improvements. Added github actions change to changelog. Composer/Ant, move the build scripts to the Composer configuration. PHPCS, various improvements. PHPUnit, improve configuration.Highlight PHP code in console (terminal). PHP 8.0, handle changed tokenization of namespaced names. GH Actions, set error reporting to E_ALL. PHPCS, various improvements. Added github actions change to changelog. Composer/Ant, move the build scripts to the Composer configuration. PHPCS, various improvements. PHPUnit, improve configuration.","Categories
Terminals"
"bandwhich sniffs a given network interface and records IP packet size, cross referencing it with the /proc filesystem on linux, lsof on macOS, or using WinApi on windows. It is responsive to the terminal window size, displaying less info if there is no room for it. It will also attempt to resolve ips to their host name in the background using reverse DNS on a best effort basis. bandwhich can be installed using the Rust package manager, cargo. It might be in your distro repositories if you're on linux, or you can install it via rustup. Cargo installs bandwhich to ~/.cargo/bin/bandwhich but you need root priviliges to run bandwhich. To install bandwhich on OpenWRT, you'll need to compile a binary that would fit its processor architecture. This might mean you would have to cross compile if, for example, you're working on an x86_64 and the OpenWRT is installed on an arm7.bandwhich sniffs a given network interface and records IP packet size, cross referencing it with the /proc filesystem on linux, lsof on macOS, or using WinApi on windows. It is responsive to the terminal window size, displaying less info if there is no room for it. It will also attempt to resolve ips to their host name in the background using reverse DNS on a best effort basis. bandwhich can be installed using the Rust package manager, cargo. It might be in your distro repositories if you're on linux, or you can install it via rustup. Cargo installs bandwhich to ~/.cargo/bin/bandwhich but you need root priviliges to run bandwhich. To install bandwhich on OpenWRT, you'll need to compile a binary that would fit its processor architecture. This might mean you would have to cross compile if, for example, you're working on an x86_64 and the OpenWRT is installed on an arm7.","Categories
Terminals"
"webhook is a lightweight configurable tool written in Go, that allows you to easily create HTTP endpoints (hooks) on your server, which you can use to execute configured commands. You can also pass data from the HTTP request (such as headers, payload or query variables) to your commands. webhook also allows you to specify rules which have to be satisfied in order for the hook to be triggered. For example, if you're using Github or Bitbucket, you can use webhook to set up a hook that runs a redeploy script for your project on your staging server, whenever you push changes to the master branch of your project. If you use Mattermost or Slack, you can set up an ""Outgoing webhook integration"" or ""Slash command"" to run various commands on your server, which can then report back directly to you or your channels using the ""Incoming webhook integrations"", or the appropriate response body.webhook is a lightweight configurable tool written in Go, that allows you to easily create HTTP endpoints (hooks) on your server, which you can use to execute configured commands. You can also pass data from the HTTP request (such as headers, payload or query variables) to your commands. webhook also allows you to specify rules which have to be satisfied in order for the hook to be triggered. For example, if you're using Github or Bitbucket, you can use webhook to set up a hook that runs a redeploy script for your project on your staging server, whenever you push changes to the master branch of your project. If you use Mattermost or Slack, you can set up an ""Outgoing webhook integration"" or ""Slash command"" to run various commands on your server, which can then report back directly to you or your channels using the ""Incoming webhook integrations"", or the appropriate response body.","Categories
Terminals, Application Servers"
"prompts has no big dependencies nor is it broken into a dozen tiny modules that only work well together. prompt uses layout and colors to create beautiful cli interfaces. prompts uses promises and async/await. No callback hell. All prompts are independent and can be used on their own. Provides a way to submit answers programmatically. Consistent experience across all prompts. Prompt with a single prompt object. Returns an object with the response. Prompt with a list of prompt objects. Returns an object with the responses. Make sure to give each prompt a unique name property to prevent overwriting values. Prompt properties can be functions too. Prompt Objects with type set to falsy values are skipped. Prompter function which takes your prompt objects and returns an object with responses. Prompts can be submitted (return, enter) or canceled (esc, abort, ctrl+c, ctrl+d). No property is being defined on the returned response object when a prompt is canceled.prompts has no big dependencies nor is it broken into a dozen tiny modules that only work well together. prompt uses layout and colors to create beautiful cli interfaces. prompts uses promises and async/await. No callback hell. All prompts are independent and can be used on their own. Provides a way to submit answers programmatically. Consistent experience across all prompts. Prompt with a single prompt object. Returns an object with the response. Prompt with a list of prompt objects. Returns an object with the responses. Make sure to give each prompt a unique name property to prevent overwriting values. Prompt properties can be functions too. Prompt Objects with type set to falsy values are skipped. Prompter function which takes your prompt objects and returns an object with responses. Prompts can be submitted (return, enter) or canceled (esc, abort, ctrl+c, ctrl+d). No property is being defined on the returned response object when a prompt is canceled.","Categories
Terminals, User Interface (UI)"
"wego is a weather client for the terminal. Config file for default location which can be overridden by commandline. Automatic config management with ingo. A working Go 1.5 environment (You can use goenv if your distribution does not support Go 1.5 yet). utf-8 terminal with 256 colors. A sane monospaced font containing all the required runes (I use dejavu sans mono). An API key for the backend. You can create an account and get a free API key by signing up. You can set the $WEGORC environment variable to override the default config file location. Displayed info (metric or imperial units), temperature range (felt and measured), windspeed and direction, viewing distance, precipitation amount and probability.wego is a weather client for the terminal. Config file for default location which can be overridden by commandline. Automatic config management with ingo. A working Go 1.5 environment (You can use goenv if your distribution does not support Go 1.5 yet). utf-8 terminal with 256 colors. A sane monospaced font containing all the required runes (I use dejavu sans mono). An API key for the backend. You can create an account and get a free API key by signing up. You can set the $WEGORC environment variable to override the default config file location. Displayed info (metric or imperial units), temperature range (felt and measured), windspeed and direction, viewing distance, precipitation amount and probability.","Categories
Terminals, Weather"
"The Symfony\Component\Process\Process class executes a command in a sub-process, taking care of the differences between operating system and escaping arguments to prevent security issues. It replaces PHP functions like exec, passthru, shell_exec and system. The getOutput() method always returns the whole content of the standard output of the command and getErrorOutput() the content of the error output. Alternatively, the getIncrementalOutput() and getIncrementalErrorOutput() methods return the new output since the last call. The clearOutput() method clears the contents of the output and clearErrorOutput() clears the contents of the error output. You can also use the Symfony\Component\Process\Process class with the for each construct to get the output while it is generated. By default, the loop waits for new output before going to the next iterationThe Symfony\Component\Process\Process class executes a command in a sub-process, taking care of the differences between operating system and escaping arguments to prevent security issues. It replaces PHP functions like exec, passthru, shell_exec and system. The getOutput() method always returns the whole content of the standard output of the command and getErrorOutput() the content of the error output. Alternatively, the getIncrementalOutput() and getIncrementalErrorOutput() methods return the new output since the last call. The clearOutput() method clears the contents of the output and clearErrorOutput() clears the contents of the error output. You can also use the Symfony\Component\Process\Process class with the for each construct to get the output while it is generated. By default, the loop waits for new output before going to the next iteration","Categories
Terminals"
"gdrive is a command line utility for interacting with Google Drive. gdrive is finally verified for using sensitive scopes which should fix the This app is blocked error. Note that the project name will show up as project-367116221053 when granting access to you account. Binaries are statically linked. If you want to compile from source you need the go toolchain. Version 1.5 or higher. The first time gdrive is launched (i.e. run gdrive about in your terminal not just gdrive), you will be prompted for a verification code. The code is obtained by following the printed url and authenticating with the google account for the drive you want access to. This will create a token file inside the .gdrive folder in your home directory. Note that anyone with access to this file will also have access to your google drive. If you want to manage multiple drives you can use the global --config flag or set the environment variable GDRIVE_CONFIG_DIR.gdrive is a command line utility for interacting with Google Drive. gdrive is finally verified for using sensitive scopes which should fix the This app is blocked error. Note that the project name will show up as project-367116221053 when granting access to you account. Binaries are statically linked. If you want to compile from source you need the go toolchain. Version 1.5 or higher. The first time gdrive is launched (i.e. run gdrive about in your terminal not just gdrive), you will be prompted for a verification code. The code is obtained by following the printed url and authenticating with the google account for the drive you want access to. This will create a token file inside the .gdrive folder in your home directory. Note that anyone with access to this file will also have access to your google drive. If you want to manage multiple drives you can use the global --config flag or set the environment variable GDRIVE_CONFIG_DIR.","Categories
Terminals"
"Ora is an elegant terminal spinner. If a string is provided, it is treated as a shortcut for options.text. Spinners provide their own recommended interval, so you don't really need to specify this. Indent the spinner with the given number of spaces. Force enable/disable the spinner. If not specified, the spinner will be enabled if the stream is being run inside a TTY context (not spawned or piped) and/or not in a CI environment. Note that {isEnabled: false} doesn't mean it won't output anything. It just means it won't output the spinner, colors, and other ansi escape codes. It will still log text. Discard stdin input (except Ctrl+C) while running if it's TTY. This prevents the spinner from twitching on input, outputting broken lines on Enter key presses, and prevents buffering of input while the spinner is running.Ora is an elegant terminal spinner. If a string is provided, it is treated as a shortcut for options.text. Spinners provide their own recommended interval, so you don't really need to specify this. Indent the spinner with the given number of spaces. Force enable/disable the spinner. If not specified, the spinner will be enabled if the stream is being run inside a TTY context (not spawned or piped) and/or not in a CI environment. Note that {isEnabled: false} doesn't mean it won't output anything. It just means it won't output the spinner, colors, and other ansi escape codes. It will still log text. Discard stdin input (except Ctrl+C) while running if it's TTY. This prevents the spinner from twitching on input, outputting broken lines on Enter key presses, and prevents buffering of input while the spinner is running.","Categories
Terminals"
"ConEmu-Maximus5 aims to be handy, comprehensive, fast and reliable terminal window where you may host any console application developed either for WinAPI (cmd, powershell, far) or Unix PTY (cygwin, msys, wsl bash). As Windows console window enhancement (local terminal emulator), ConEmu presents multiple consoles and simple GUI applications (like PuTTY for example) as one customizable tabbed GUI window with various features. Moreover, due to deep integration, ConEmu is the best companion for Far Manager. ConEmu is not a shell, so it does not provide ""shell features"" like remote access, tab-completion, command history and others. ConEmu is an advanced console window where you can run any shell of your choice. However, some of these features have been placed in the RoadMap. You may also try Clink for bash-style completion in cmd.exe and PSReadLine or PowerTab in powershell.exe. You can easily run old DOS applications (games) in Windows 7 or 64-bit OS.ConEmu-Maximus5 aims to be handy, comprehensive, fast and reliable terminal window where you may host any console application developed either for WinAPI (cmd, powershell, far) or Unix PTY (cygwin, msys, wsl bash). As Windows console window enhancement (local terminal emulator), ConEmu presents multiple consoles and simple GUI applications (like PuTTY for example) as one customizable tabbed GUI window with various features. Moreover, due to deep integration, ConEmu is the best companion for Far Manager. ConEmu is not a shell, so it does not provide ""shell features"" like remote access, tab-completion, command history and others. ConEmu is an advanced console window where you can run any shell of your choice. However, some of these features have been placed in the RoadMap. You may also try Clink for bash-style completion in cmd.exe and PSReadLine or PowerTab in powershell.exe. You can easily run old DOS applications (games) in Windows 7 or 64-bit OS.","Categories
Terminals"
"qrcp binds a web server to the address of your Wi-Fi network interface on a random port and creates a handler for it. The default handler serves the content and exits the program when the transfer is complete. When used to receive files, qrcp serves an upload page and handles the transfer. Most QR apps can detect URLs in decoded text and act accordingly (i.e. open the decoded URL with the default browser), so when the QR code is scanned the content will begin downloading by the mobile browser. When sending multiple files at once, qrcp creates a zip archive of the files or folders you want to transfer, and deletes the zip archive once the transfer is complete. When receiving files, qrcp serves an “upload page” through which you can choose files from your mobile. The default configuration file is stored in $HOME/qrcp.json, however, you can specify the location of the config file by passing the --config flag.qrcp binds a web server to the address of your Wi-Fi network interface on a random port and creates a handler for it. The default handler serves the content and exits the program when the transfer is complete. When used to receive files, qrcp serves an upload page and handles the transfer. Most QR apps can detect URLs in decoded text and act accordingly (i.e. open the decoded URL with the default browser), so when the QR code is scanned the content will begin downloading by the mobile browser. When sending multiple files at once, qrcp creates a zip archive of the files or folders you want to transfer, and deletes the zip archive once the transfer is complete. When receiving files, qrcp serves an “upload page” through which you can choose files from your mobile. The default configuration file is stored in $HOME/qrcp.json, however, you can specify the location of the config file by passing the --config flag.","Categories
Terminals, File Sharing, File Transfer Protocol (FTP)"
"gtop is a tool that helps you monitor your systems through a dashboard user interface, and it is optimized to monitor and visualize terminals. gtop requirements are to have Node.js version 8 or higher. It supports Linux, OSX, and Windows (with partial support). You need to assign host net and pid to access the metrics in the host machine. Start gtop with the gtop command. To stop gtop use q, or ctrl+c in most shell environments. You can sort the process table by pressing 'p' for Process Id, 'c' for CPU usage, and 'm' for Memory usage. If you see question marks or other different characters, try to run it with the environment variables provided in the documentation. gtop is released under the MIT license.gtop is a tool that helps you monitor your systems through a dashboard user interface, and it is optimized to monitor and visualize terminals. gtop requirements are to have Node.js version 8 or higher. It supports Linux, OSX, and Windows (with partial support). You need to assign host net and pid to access the metrics in the host machine. Start gtop with the gtop command. To stop gtop use q, or ctrl+c in most shell environments. You can sort the process table by pressing 'p' for Process Id, 'c' for CPU usage, and 'm' for Memory usage. If you see question marks or other different characters, try to run it with the environment variables provided in the documentation. gtop is released under the MIT license.","Categories
Terminals, Monitoring"
"fx can work in two modes, cli and interactive. To start interactive mode pipe any JSON into fx. One of the frequent operations is mapping some function on an array. You can pass any number of anonymous functions for reducing JSON. fx provides a function save which will save everything in place and return saved object. This function can be only used with filename as first argument to fx command. Create .fxrc file in $HOME directory, and require any packages or define global functions. To be able require global modules make sure you have correct NODE_PATH env variable. If you need output other than JSON (for example arguments for xargs), do not return anything from the reducer. undefined value is printed into stderr by default. Sometimes it is necessary to omit some messages in JSON stream, or select only specified log messages. For this purpose, fx has special helpers select/filter, pass function into it to select/filter JSON messages.fx can work in two modes, cli and interactive. To start interactive mode pipe any JSON into fx. One of the frequent operations is mapping some function on an array. You can pass any number of anonymous functions for reducing JSON. fx provides a function save which will save everything in place and return saved object. This function can be only used with filename as first argument to fx command. Create .fxrc file in $HOME directory, and require any packages or define global functions. To be able require global modules make sure you have correct NODE_PATH env variable. If you need output other than JSON (for example arguments for xargs), do not return anything from the reducer. undefined value is printed into stderr by default. Sometimes it is necessary to omit some messages in JSON stream, or select only specified log messages. For this purpose, fx has special helpers select/filter, pass function into it to select/filter JSON messages.","Categories
Terminals, Command Line Tools"
"tmuxinator aims to be compatible with the currently maintained versions of Ruby. Some operating systems may provide an unsupported version of Ruby as their ""system ruby"". In these cases, users should use RVM or rbenv to install a supported Ruby version and use that version's gem binary to install tmuxinator. tmuxinator uses your shell's default editor for opening files. If you want to change your default editor simply put a line in ~/.bashrc that changes it. The recommended version of tmux to use is 1.8 or later, with the exception of 2.5, which is not supported (see issue 536 for details). Your mileage may vary for earlier versions. Refer to the FAQ for any odd behaviour. Your distribution's package manager may install the completion files in the appropriate location for the completion to load automatically on startup.tmuxinator aims to be compatible with the currently maintained versions of Ruby. Some operating systems may provide an unsupported version of Ruby as their ""system ruby"". In these cases, users should use RVM or rbenv to install a supported Ruby version and use that version's gem binary to install tmuxinator. tmuxinator uses your shell's default editor for opening files. If you want to change your default editor simply put a line in ~/.bashrc that changes it. The recommended version of tmux to use is 1.8 or later, with the exception of 2.5, which is not supported (see issue 536 for details). Your mileage may vary for earlier versions. Refer to the FAQ for any odd behaviour. Your distribution's package manager may install the completion files in the appropriate location for the completion to load automatically on startup.","Categories
Terminals"
"Terminal for serial ports and TCP / UDP connections with JavaScript support.
Using scripts, you can expand the capabilities of the serial terminal to communicate with your devices.Terminal for serial ports and TCP / UDP connections with JavaScript support.
Using scripts, you can expand the capabilities of the serial terminal to communicate with your devices.","Categories
Serial, Communications, Networking"
"Spaceship is a minimalistic, powerful and extremely customizable Zsh prompt. It combines everything you may need for convenient work, without unnecessary complications, like a real spaceship. Powerline Font must be installed and used in your terminal (for example, switch font to Fira Code). Spaceship works well out of the box, but you can customize almost everything if you want. Tweak section's behavior with tons of options. Or, define a custom section that will do exactly what you want. You have the ability to customize or disable specific elements of Spaceship. Set options and define new sections in your .zshrc file, after the theme. To include a custom section you have defined in your prompt, add it to the SPACESHIP_PROMPT_ORDER. Spaceship supports most of the popular programming languages, runtimes, version managers, etc. If it doesn't support something that you need, feel free to open a pull request.Spaceship is a minimalistic, powerful and extremely customizable Zsh prompt. It combines everything you may need for convenient work, without unnecessary complications, like a real spaceship. Powerline Font must be installed and used in your terminal (for example, switch font to Fira Code). Spaceship works well out of the box, but you can customize almost everything if you want. Tweak section's behavior with tons of options. Or, define a custom section that will do exactly what you want. You have the ability to customize or disable specific elements of Spaceship. Set options and define new sections in your .zshrc file, after the theme. To include a custom section you have defined in your prompt, add it to the SPACESHIP_PROMPT_ORDER. Spaceship supports most of the popular programming languages, runtimes, version managers, etc. If it doesn't support something that you need, feel free to open a pull request.","Categories
Terminals"
"cool-retro-term is a terminal emulator which mimics the look and feel of the old cathode tube screens. It has been designed to be eye-candy, customizable, and reasonably lightweight. It uses the QML port of qtermwidget (Konsole). This terminal emulator works under Linux and macOS and requires Qt 5.2 or higher. Settings such as colors, fonts, and effects can be accessed via context menu. Just grab the latest AppImage from the release page and make it executable and run it. Make sure to install the dependencies first. Once you installed all dependencies (Qt is installed and in your path) you need to compile and run the application. Also, before the building process, remember to install Xcode and agree to the licence agreement.cool-retro-term is a terminal emulator which mimics the look and feel of the old cathode tube screens. It has been designed to be eye-candy, customizable, and reasonably lightweight. It uses the QML port of qtermwidget (Konsole). This terminal emulator works under Linux and macOS and requires Qt 5.2 or higher. Settings such as colors, fonts, and effects can be accessed via context menu. Just grab the latest AppImage from the release page and make it executable and run it. Make sure to install the dependencies first. Once you installed all dependencies (Qt is installed and in your path) you need to compile and run the application. Also, before the building process, remember to install Xcode and agree to the licence agreement.","Categories
Terminal Emulators"
"If you have a Go language environment, you can install GoTTY with the go get command. However, this command builds a binary file from the latest master branch, which can include unstable or breaking changes. GoTTY requires go1.9 or later. Run gotty with your preferred command as its arguments (e.g. gotty top). By default, GoTTY starts a web server at port 8080. Open the URL on your web browser and you can see the running command as if it were running on your terminal. By default, GoTTY doesn't allow clients to send any keystrokes or commands except terminal window resizing. When you want to permit clients to write input to the TTY, add the -w option. However, accepting input from remote clients is dangerous for most commands. When you need interaction with the TTY for some reasons, consider starting GoTTY with tmux or GNU Screen and run your command on it (see ""Sharing with Multiple Clients"" section for detail).If you have a Go language environment, you can install GoTTY with the go get command. However, this command builds a binary file from the latest master branch, which can include unstable or breaking changes. GoTTY requires go1.9 or later. Run gotty with your preferred command as its arguments (e.g. gotty top). By default, GoTTY starts a web server at port 8080. Open the URL on your web browser and you can see the running command as if it were running on your terminal. By default, GoTTY doesn't allow clients to send any keystrokes or commands except terminal window resizing. When you want to permit clients to write input to the TTY, add the -w option. However, accepting input from remote clients is dangerous for most commands. When you need interaction with the TTY for some reasons, consider starting GoTTY with tmux or GNU Screen and run your command on it (see ""Sharing with Multiple Clients"" section for detail).","Categories
Terminals"
"Micro's number one feature is being easy to install (it's just a static binary with no dependencies) and easy to use. Use a simple json format to configure your options and rebind keys to your liking. If you need more power, you can use Lua to configure the editor further. Micro supports over 75 languages and has 7 default colorschemes to choose from. Micro supports 16, 256, and truecolor themes. Syntax files and colorschemes are also very simple to make. Micro has support for Sublime-style multiple cursors, giving you lots of editing power directly in your terminal. Micro supports a full-blown plugin system. Plugins are written in Lua and there is a plugin manager to automatically download and install your plugins for you. Micro's keybindings are what you would expect from a simple-to-use editor. You can also rebind any of the bindings without problem in the bindings.json file. Micro has full support for the mouse.Micro's number one feature is being easy to install (it's just a static binary with no dependencies) and easy to use. Use a simple json format to configure your options and rebind keys to your liking. If you need more power, you can use Lua to configure the editor further. Micro supports over 75 languages and has 7 default colorschemes to choose from. Micro supports 16, 256, and truecolor themes. Syntax files and colorschemes are also very simple to make. Micro has support for Sublime-style multiple cursors, giving you lots of editing power directly in your terminal. Micro supports a full-blown plugin system. Plugins are written in Lua and there is a plugin manager to automatically download and install your plugins for you. Micro's keybindings are what you would expect from a simple-to-use editor. You can also rebind any of the bindings without problem in the bindings.json file. Micro has full support for the mouse.","Categories
Text Editors, Terminals"
"fd is a program to find entries in your filesytem. It is a simple, fast and user-friendly alternative to find. While it does not aim to support all of find's powerful functionality, it provides sensible (opinionated) defaults for a majority of use cases. First, to get an overview of all available command line options, you can either run fd -h for a concise help message or fd --help for a more detailed version. fd is designed to find entries in your filesystem. The most basic search you can perform is to run fd with a single argument: the search pattern. Instead of just showing the search results, you often want to do something with them. fd provides two ways to execute external commands for each of your search results: the -x/--exec option runs an external command for each of the search results (in parallel), or the -X/--exec-batch option launches the external command once, with all search results as arguments.fd is a program to find entries in your filesytem. It is a simple, fast and user-friendly alternative to find. While it does not aim to support all of find's powerful functionality, it provides sensible (opinionated) defaults for a majority of use cases. First, to get an overview of all available command line options, you can either run fd -h for a concise help message or fd --help for a more detailed version. fd is designed to find entries in your filesystem. The most basic search you can perform is to run fd with a single argument: the search pattern. Instead of just showing the search results, you often want to do something with them. fd provides two ways to execute external commands for each of your search results: the -x/--exec option runs an external command for each of the search results (in parallel), or the -X/--exec-batch option launches the external command once, with all search results as arguments.","Categories
Terminals, Search, File Systems"
"Terminus is a highly configurable terminal emulator for Windows, macOS and Linux. Features an integrated SSH client and connection manager. Provides theming and color schemes, fully configurable shortcuts, and split panes. Remembers your tabs. With PowerShell (and PS Core), WSL, Git-Bash, Cygwin, Cmder and CMD support. Enables direct file transfer from/to SSH sessions via Zmodem. Full Unicode support including double-width characters. Terminus doesn't choke on fast-flowing outputs. Allows proper shell experience on Windows including tab completion (via Clink). Terminus is an alternative to Windows' standard terminal (conhost), PowerShell ISE, PuTTY or iTerm. Terminus is not a new shell or a MinGW or Cygwin replacement. Neither is it lightweight - if RAM usage is of importance, consider Conemu or Alacritty.Terminus is a highly configurable terminal emulator for Windows, macOS and Linux. Features an integrated SSH client and connection manager. Provides theming and color schemes, fully configurable shortcuts, and split panes. Remembers your tabs. With PowerShell (and PS Core), WSL, Git-Bash, Cygwin, Cmder and CMD support. Enables direct file transfer from/to SSH sessions via Zmodem. Full Unicode support including double-width characters. Terminus doesn't choke on fast-flowing outputs. Allows proper shell experience on Windows including tab completion (via Clink). Terminus is an alternative to Windows' standard terminal (conhost), PowerShell ISE, PuTTY or iTerm. Terminus is not a new shell or a MinGW or Cygwin replacement. Neither is it lightweight - if RAM usage is of importance, consider Conemu or Alacritty.","Categories
Terminals"
"Upterm (formerly Black Screen) is an IDE in the world of terminals. Strictly speaking, it's both a terminal emulator and an interactive shell based on Electron. Upterm shows the autocompletion box as you type and tries to be smart about what to suggest. Often you can find useful additional information on the right side of the autocompletion, e.g. expanded alias value, command descriptions, value of the previous directory (cd -), etc. All command-line programs (including emacs, ssh and vim) should work as expected. If you experience any glitches, please create an issue.Upterm (formerly Black Screen) is an IDE in the world of terminals. Strictly speaking, it's both a terminal emulator and an interactive shell based on Electron. Upterm shows the autocompletion box as you type and tries to be smart about what to suggest. Often you can find useful additional information on the right side of the autocompletion, e.g. expanded alias value, command descriptions, value of the previous directory (cd -), etc. All command-line programs (including emacs, ssh and vim) should work as expected. If you experience any glitches, please create an issue.","Categories
Terminal Emulators"
"tmux is a terminal multiplexer: it enables a number of terminals to be created, accessed, and controlled from a single screen. tmux may be detached from a screen and continue running in the background, then later reattached. This release runs on OpenBSD, FreeBSD, NetBSD, Linux, OS X and Solaris. tmux depends on libevent 2.x, and on ncurses. To build tmux, a C compiler (for example gcc or clang), make, pkg-config and a suitable yacc (yacc or bison) are needed. Some platforms provide binary packages for tmux.tmux is a terminal multiplexer: it enables a number of terminals to be created, accessed, and controlled from a single screen. tmux may be detached from a screen and continue running in the background, then later reattached. This release runs on OpenBSD, FreeBSD, NetBSD, Linux, OS X and Solaris. tmux depends on libevent 2.x, and on ncurses. To build tmux, a C compiler (for example gcc or clang), make, pkg-config and a suitable yacc (yacc or bison) are needed. Some platforms provide binary packages for tmux.","Categories
Terminals, Compilers"
"A Software to create aliases for commands, applications to type in cmd, terminal. Just type the original command and type an alias for it. You can also assign a program for it. Browse through the directory to find the program or anything executable using the command line and you can create an alias for the same. Only Windows is supported for releases.A Software to create aliases for commands, applications to type in cmd, terminal. Just type the original command and type an alias for it. You can also assign a program for it. Browse through the directory to find the program or anything executable using the command line and you can create an alias for the same. Only Windows is supported for releases.","Categories
Terminals, Desktop Environment, Usability"
"A custom lightweight version of cmds. You can edit the code to anything you want.
It is a very light terminal, only 2 MB!A custom lightweight version of cmds. You can edit the code to anything you want.
It is a very light terminal, only 2 MB!","Categories
Terminals, Logging"
"Cmder is a lovely portable console emulator package for Windows. It was built out of sheer frustration due to the lack of nice console emulators on Windows. It is based on the amazing ConEmu, with major config overhaul, enhancements from Clink, Monokai color scheme and a custom prompt layout. Overall, it's got a very pleasant user interface that's much improved from ConEmu.

The biggest advantage with cmder is that it is portable. It was designed to be totally self-contained, totally free of external dependencies. This makes it perfect for USB Sticks or cloud storage, so you can have your settings, aliases, binaries and history wherever you go.Cmder is a lovely portable console emulator package for Windows. It was built out of sheer frustration due to the lack of nice console emulators on Windows. It is based on the amazing ConEmu, with major config overhaul, enhancements from Clink, Monokai color scheme and a custom prompt layout. Overall, it's got a very pleasant user interface that's much improved from ConEmu.

The biggest advantage with cmder is that it is portable. It was designed to be totally self-contained, totally free of external dependencies. This makes it perfect for USB Sticks or cloud storage, so you can have your settings, aliases, binaries and history wherever you go.","Categories
Terminal Emulators"
"eDEX-UI is a fullscreen, cross-platform terminal emulator and system monitor designed with a customizable science fiction computer interface. Inspired by the TRON Legacy movie effects, eDEX-UI presents a futuristic look and feel while still being able to function as a full-featured terminal emulator.

eDEX-UI offers advanced monitoring support for real-time systems and networks. It also offers full touchscreen support; a directory viewer; and for a completely unique sci-fi experience, advanced customization options via themes, on-screen keyboard layouts, CSS injections, and even optional sound effects. If you’re a science fiction fan or are just looking for something different in a terminal emulator, eDEX-UI will surely satisfy and give you a cool and unique experience.eDEX-UI is a fullscreen, cross-platform terminal emulator and system monitor designed with a customizable science fiction computer interface. Inspired by the TRON Legacy movie effects, eDEX-UI presents a futuristic look and feel while still being able to function as a full-featured terminal emulator.

eDEX-UI offers advanced monitoring support for real-time systems and networks. It also offers full touchscreen support; a directory viewer; and for a completely unique sci-fi experience, advanced customization options via themes, on-screen keyboard layouts, CSS injections, and even optional sound effects. If you’re a science fiction fan or are just looking for something different in a terminal emulator, eDEX-UI will surely satisfy and give you a cool and unique experience.","Categories
Terminal Emulators"
"Blink Shell is the first professional, desktop-grade terminal for iOS. It leverages the support of Mosh and SSH to establish ultra-stable and highly reliable connections, lightning-fast speeds, and full configurations. Whether you're connecting to the cloud on the go or coding from one location to another, you'll always stay connected with Blink. Even when your device goes to sleep, you can stay worry-free knowing your connections will stay intact.

Blink jumps you directly into a friendly shell, with an easy and straightforward interface. You can configure Blink exactly how you want as well. It lets you choose color themes and fonts, add your own Hosts and RSA Encryption keys, and pair with your Bluetooth-coupled keyboards. It's built and configurable in every way to be your all-day-long companion.Blink Shell is the first professional, desktop-grade terminal for iOS. It leverages the support of Mosh and SSH to establish ultra-stable and highly reliable connections, lightning-fast speeds, and full configurations. Whether you're connecting to the cloud on the go or coding from one location to another, you'll always stay connected with Blink. Even when your device goes to sleep, you can stay worry-free knowing your connections will stay intact.

Blink jumps you directly into a friendly shell, with an easy and straightforward interface. You can configure Blink exactly how you want as well. It lets you choose color themes and fonts, add your own Hosts and RSA Encryption keys, and pair with your Bluetooth-coupled keyboards. It's built and configurable in every way to be your all-day-long companion.","Categories
Terminals, Mobile"
"asciinema is a free and open source terminal session recorder. It lets you easily record and play back terminal sessions in the terminal or in a web browser.

Forget old screen recording methods and resulting blurry videos. asciinema lets you record your terminal sessions the right way, which is right where you work, in the terminal. Recording is as easy as running one command, and since it’s purely text-based you can copy and paste any content you want, simply pause the recording! You can also easily share your recordings on the web, embed an asciicast player in your blog post, project documentation page or in your conference talk slides.

See plenty of example sessions recorded with asciinema here: https://asciinema.org/asciinema is a free and open source terminal session recorder. It lets you easily record and play back terminal sessions in the terminal or in a web browser.

Forget old screen recording methods and resulting blurry videos. asciinema lets you record your terminal sessions the right way, which is right where you work, in the terminal. Recording is as easy as running one command, and since it’s purely text-based you can copy and paste any content you want, simply pause the recording! You can also easily share your recordings on the web, embed an asciicast player in your blog post, project documentation page or in your conference talk slides.

See plenty of example sessions recorded with asciinema here: https://asciinema.org/","Categories
Terminals, Capture, Screen Recorders"
"Xterm Window Manager (XtermWM) is a desktop environment / window
manager for the console. Runs under Xterm, Linux console, and in a GUI window.

Virtual desktops, tiled terminals with mouse-draggable resize, cascaded terminals, image support, and a plugin system. The most advanced text-based windowing system in existence.Xterm Window Manager (XtermWM) is a desktop environment / window
manager for the console. Runs under Xterm, Linux console, and in a GUI window.

Virtual desktops, tiled terminals with mouse-draggable resize, cascaded terminals, image support, and a plugin system. The most advanced text-based windowing system in existence.","Categories
Terminals, Desktop Environment, Window Managers"
"HTTPie is a modern command-line HTTP client that makes CLI interaction with web services as human-friendly as possible. It offers a plethora of friendly features that make it an excellent curl alternative. It is equipped with an intuitive UI, JSON support, syntax highlighting and so much more. HTTPie gives a single http command for sending arbitrary HTTP requests with a simple, natural syntax, and displayed in a formatted, colorized terminal output.

HTTPie can be installed on macOS, Windows and Linux. It can be used for painless debugging, testing, and general interactions with HTTP servers.HTTPie is a modern command-line HTTP client that makes CLI interaction with web services as human-friendly as possible. It offers a plethora of friendly features that make it an excellent curl alternative. It is equipped with an intuitive UI, JSON support, syntax highlighting and so much more. HTTPie gives a single http command for sending arbitrary HTTP requests with a simple, natural syntax, and displayed in a formatted, colorized terminal output.

HTTPie can be installed on macOS, Windows and Linux. It can be used for painless debugging, testing, and general interactions with HTTP servers.","Categories
Terminals, WWW/HTTP"
"The Fuck is an app that corrects errors in previous console commands. It works by matching these previous commands with a rule. When it finds a match, it creates a new command based on the matched rule and executes this command. It has numerous rules enabled by default, including ones for fixing misspelled commands, fixing wrong commands, spell checking and correcting failed commands, and many, many others. You can also create your own rules and set certain parameters.The Fuck is an app that corrects errors in previous console commands. It works by matching these previous commands with a rule. When it finds a match, it creates a new command based on the matched rule and executes this command. It has numerous rules enabled by default, including ones for fixing misspelled commands, fixing wrong commands, spell checking and correcting failed commands, and many, many others. You can also create your own rules and set certain parameters.","Categories
Terminals, QA Automation, Code Review"
