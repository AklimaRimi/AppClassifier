Description,Category
"This package provides a command-line interface to easily onboard devices with SageMaker Edge. Run the cli on the device you would like to provision as it will create all the necessary artifacts on the device. aws-sagemaker-edge-quick-device-setup is written in golang. You can also generate the binary directly from the source. Optionally there is a build script to generate binaries and shasums for the relevant OS/architecture combination. We support out-of-the-box distributions for known OS and architectures. Learn about how to configure AWS credentials. Since the required IAM policy is fairly permissive and the credentials are only needed during setup, we recommend using temporary credentials. In order to invoke the CLI to create required resources in cloud the user/role must have required permission.This package provides a command-line interface to easily onboard devices with SageMaker Edge. Run the cli on the device you would like to provision as it will create all the necessary artifacts on the device. aws-sagemaker-edge-quick-device-setup is written in golang. You can also generate the binary directly from the source. Optionally there is a build script to generate binaries and shasums for the relevant OS/architecture combination. We support out-of-the-box distributions for known OS and architectures. Learn about how to configure AWS credentials. Since the required IAM policy is fairly permissive and the credentials are only needed during setup, we recommend using temporary credentials. In order to invoke the CLI to create required resources in cloud the user/role must have required permission.","Categories
Terminals"
"This repo provides a C API for AWS Nitro Enclaves, including a KMS SDK that integrates it with attestation. The simplest way to use this SDK is by using one of the available containers as a base. Note that this SDK is currently not supported on Windows. Only the client-side sample application (kmstool_instance) is supported on Windows. If you discover a potential security issue in the Nitro Enclaves SDK for C, we ask that you notify AWS Security via our vulnerability reporting page.This repo provides a C API for AWS Nitro Enclaves, including a KMS SDK that integrates it with attestation. The simplest way to use this SDK is by using one of the available containers as a base. Note that this SDK is currently not supported on Windows. Only the client-side sample application (kmstool_instance) is supported on Windows. If you discover a potential security issue in the Nitro Enclaves SDK for C, we ask that you notify AWS Security via our vulnerability reporting page.","Categories
Terminals, Software Development"
"Simple CLI wrapper for CodeGuru reviewer that provides a one-line command to scan a local clone of a repository and receive results. This CLI wraps the AWS CLI commands to communicate with AWS CodeGuru Reviewer. Using CodeGuru Reviewer may generate metering fees in your AWS account. See the CodeGuru Reviewer pricing for details. To run the CLI, we need to have a version of git, Java (e.g., Amazon Corretto) and the AWS Command Line interface installed. Verify that both applications are installed on our machine. We will also need working credentials on our machine to interact with our AWS account. You can always use the CLI with Admin credentials but if you want to have a specific role to use the CLI, your credentials must have the provided permissions. You can provide your own bucket name using the --bucket-name option. Note that, currently, CodeGuru Reviewer only supports bucket names that start with the prefix codeguru-reviewer- out of the box.Simple CLI wrapper for CodeGuru reviewer that provides a one-line command to scan a local clone of a repository and receive results. This CLI wraps the AWS CLI commands to communicate with AWS CodeGuru Reviewer. Using CodeGuru Reviewer may generate metering fees in your AWS account. See the CodeGuru Reviewer pricing for details. To run the CLI, we need to have a version of git, Java (e.g., Amazon Corretto) and the AWS Command Line interface installed. Verify that both applications are installed on our machine. We will also need working credentials on our machine to interact with our AWS account. You can always use the CLI with Admin credentials but if you want to have a specific role to use the CLI, your credentials must have the provided permissions. You can provide your own bucket name using the --bucket-name option. Note that, currently, CodeGuru Reviewer only supports bucket names that start with the prefix codeguru-reviewer- out of the box.","Categories
Terminals"
"This repository hosts scripts to generate self-contained installations of the EB CLI. On Linux and macOS, the output contains instructions to add the EB CLI (and Python) executable file to the shell's $PATH variable, if it isn't already in it. The ebcli_installer.py Python script will install the awsebcli package in a virtual environment to prevent potential conflicts with other Python packages. Even within a virtualenv, a developer might need to install multiple packages whose dependencies are in conflict. For example, at times the AWS CLI and the EB CLI have used conflicting versions of botocore. One such instance was particularly egregious. When there are conflicts, users have to manage separate virtualenvs for each of the conflicting packages, or find a combination of the packages without conflicts.This repository hosts scripts to generate self-contained installations of the EB CLI. On Linux and macOS, the output contains instructions to add the EB CLI (and Python) executable file to the shell's $PATH variable, if it isn't already in it. The ebcli_installer.py Python script will install the awsebcli package in a virtual environment to prevent potential conflicts with other Python packages. Even within a virtualenv, a developer might need to install multiple packages whose dependencies are in conflict. For example, at times the AWS CLI and the EB CLI have used conflicting versions of botocore. One such instance was particularly egregious. When there are conflicts, users have to manage separate virtualenvs for each of the conflicting packages, or find a combination of the packages without conflicts.","Categories
Terminals"
"A CLI tool and go library which recommends instance types based on resource criteria like vcpus and memory. There are over 270 different instance types available on EC2 which can make the process of selecting appropriate instance types difficult. Instance Selector helps you select compatible instance types for your application to run on. The command-line interface can be passed resource criteria like vcpus, memory, network performance, and much more and then return the available, matching instance types. If you are using spot instances to save on costs, it is a best practice to use multiple instances types within your auto-scaling group (ASG) to ensure your application doesn't experience downtime due to one instance type being interrupted. Instance Selector will help to find a set of instance types that your application can run on.A CLI tool and go library which recommends instance types based on resource criteria like vcpus and memory. There are over 270 different instance types available on EC2 which can make the process of selecting appropriate instance types difficult. Instance Selector helps you select compatible instance types for your application to run on. The command-line interface can be passed resource criteria like vcpus, memory, network performance, and much more and then return the available, matching instance types. If you are using spot instances to save on costs, it is a best practice to use multiple instances types within your auto-scaling group (ASG) to ensure your application doesn't experience downtime due to one instance type being interrupted. Instance Selector will help to find a set of instance types that your application can run on.","Categories
Terminals, Libraries"
"This plugin helps you to use the AWS Command Line Interface (AWS CLI) to start and end sessions to your managed instances. Session Manager is a fully managed AWS Systems Manager capability that lets you manage your Amazon Elastic Compute Cloud (Amazon EC2) instances, on-premises instances and virtual machines. Session Manager provides secure and auditable instance management without the need to open inbound ports. When you use the Session Manager plugin with the AWS CLI to start a session, the plugin builds the websocket connection to your managed instances. Session Manager supports connecting to Amazon Elastic Compute Cloud (Amazon EC2) instances, in addition to servers or virtual machines (VMs) in your hybrid environment that use the advanced-instances tier. Session Manager supports EC2 instances, edge devices, and on-premises servers and virtual machines (VMs) in your hybrid environment that use the advanced-instances tier.This plugin helps you to use the AWS Command Line Interface (AWS CLI) to start and end sessions to your managed instances. Session Manager is a fully managed AWS Systems Manager capability that lets you manage your Amazon Elastic Compute Cloud (Amazon EC2) instances, on-premises instances and virtual machines. Session Manager provides secure and auditable instance management without the need to open inbound ports. When you use the Session Manager plugin with the AWS CLI to start a session, the plugin builds the websocket connection to your managed instances. Session Manager supports connecting to Amazon Elastic Compute Cloud (Amazon EC2) instances, in addition to servers or virtual machines (VMs) in your hybrid environment that use the advanced-instances tier. Session Manager supports EC2 instances, edge devices, and on-premises servers and virtual machines (VMs) in your hybrid environment that use the advanced-instances tier.","Categories
Terminals, Software Development"
"This repository provides a command-line interface (CLI) utility that replicates an Amazon Managed Workflows for Apache Airflow (MWAA) environment locally. The CLI builds a Docker container image locally that’s similar to an MWAA production image. This allows you to run a local Apache Airflow environment to develop and test DAGs, custom plugins, and dependencies before deploying to MWAA. To stop the local environment, Ctrl+C on the terminal and wait till the local runner and the postgres containers are stopped. You can setup the local Airflow's boto with the intended execution role to test your DAGs with AWS operators before uploading to your Amazon S3 bucket.This repository provides a command-line interface (CLI) utility that replicates an Amazon Managed Workflows for Apache Airflow (MWAA) environment locally. The CLI builds a Docker container image locally that’s similar to an MWAA production image. This allows you to run a local Apache Airflow environment to develop and test DAGs, custom plugins, and dependencies before deploying to MWAA. To stop the local environment, Ctrl+C on the terminal and wait till the local runner and the postgres containers are stopped. You can setup the local Airflow's boto with the intended execution role to test your DAGs with AWS operators before uploading to your Amazon S3 bucket.","Categories
Terminals, Software Development"
"This project is the source code of lightsailctl, a tool that augments Amazon Lightsail features in AWS CLI. lightsailctl is executed automatically by AWS CLI when certain subcommands are used, such as AWS lightsail push-container-image. lightsailctl is written in Go, so please install Go. Keep reading if you want to work with lightsailctl source code locally. This container image pushing logic requires a number of steps that are outsourced from AWS CLI to lightsailctl.This project is the source code of lightsailctl, a tool that augments Amazon Lightsail features in AWS CLI. lightsailctl is executed automatically by AWS CLI when certain subcommands are used, such as AWS lightsail push-container-image. lightsailctl is written in Go, so please install Go. Keep reading if you want to work with lightsailctl source code locally. This container image pushing logic requires a number of steps that are outsourced from AWS CLI to lightsailctl.","Categories
Terminals, Browser Extensions and Plugins"
"Amazon EC2 Spot Instances let you run flexible, fault-tolerant, or stateless applications in the AWS Cloud at up to a 90% discount from On-Demand prices. Spot instances are regular EC2 capacity that can be reclaimed by AWS with a 2-minute notification called the Interruption Notification. Applications that are able to gracefully handle this notification and respond by check pointing or draining work can leverage Spot for deeply discounted compute resources! In addition to Interruption Notifications, Rebalance Recommendation Events are sent to spot instances that are at higher risk of being interrupted. Handling Rebalance Recommendations can potentially give your application even more time to gracefully shutdown than the 2 minutes an Interruption Notification would give you. It can be challenging to test your application's handling of Spot Interruption Notifications and Rebalance Recommendations.Amazon EC2 Spot Instances let you run flexible, fault-tolerant, or stateless applications in the AWS Cloud at up to a 90% discount from On-Demand prices. Spot instances are regular EC2 capacity that can be reclaimed by AWS with a 2-minute notification called the Interruption Notification. Applications that are able to gracefully handle this notification and respond by check pointing or draining work can leverage Spot for deeply discounted compute resources! In addition to Interruption Notifications, Rebalance Recommendation Events are sent to spot instances that are at higher risk of being interrupted. Handling Rebalance Recommendations can potentially give your application even more time to gracefully shutdown than the 2 minutes an Interruption Notification would give you. It can be challenging to test your application's handling of Spot Interruption Notifications and Rebalance Recommendations.","Categories
Terminals, Security"
"This command line tool can be used to encrypt and decrypt files and directories using the AWS Encryption SDK. If you have not already installed cryptography, you might need to install additional prerequisites as detailed in the cryptography installation guide for your operating system. Installation using a python virtual environment is recommended to avoid conflicts between system packages and user-installed packages. For the most part, the behavior of aws-encryption-cli in handling files is based on that of GNU CLIs such as cp. A qualifier to this is that when encrypting a file, if a directory is provided as the destination, rather than creating the source filename in the destination directory, a suffix is appended to the destination filename. By default the suffix is .encrypted when encrypting and .decrypted when decrypting, but a custom suffix can be provided by the caller if desired.This command line tool can be used to encrypt and decrypt files and directories using the AWS Encryption SDK. If you have not already installed cryptography, you might need to install additional prerequisites as detailed in the cryptography installation guide for your operating system. Installation using a python virtual environment is recommended to avoid conflicts between system packages and user-installed packages. For the most part, the behavior of aws-encryption-cli in handling files is based on that of GNU CLIs such as cp. A qualifier to this is that when encrypting a file, if a directory is provided as the destination, rather than creating the source filename in the destination directory, a suffix is appended to the destination filename. By default the suffix is .encrypted when encrypting and .decrypted when decrypting, but a custom suffix can be provided by the caller if desired.","Categories
Terminals, Cryptography, Command Line Tools"
"jQuery Terminal is a JavaScript library for creating command-line interpreters in your applications. You can use this JavaScript Terminal library to create interactive web-based terminal applications on your website. Where commands are defined by you. You can define them on the server or in the browser's JavaScript. It can automatically call JSON-RPC service when the user types a command. Alternatively, you can provide an object with methods; each method will be invoked on the user's command (the python command can create python interpreter). An object can have nested objects which will create a nested interpreter (you can create an interactive menu of adventure games with this). You can also use a function in which you can parse user commands by yourself (you have full control of what users type into the terminal). It's ideal if you want to provide additional functionality for power users.jQuery Terminal is a JavaScript library for creating command-line interpreters in your applications. You can use this JavaScript Terminal library to create interactive web-based terminal applications on your website. Where commands are defined by you. You can define them on the server or in the browser's JavaScript. It can automatically call JSON-RPC service when the user types a command. Alternatively, you can provide an object with methods; each method will be invoked on the user's command (the python command can create python interpreter). An object can have nested objects which will create a nested interpreter (you can create an interactive menu of adventure games with this). You can also use a function in which you can parse user commands by yourself (you have full control of what users type into the terminal). It's ideal if you want to provide additional functionality for power users.","Categories
Terminals, Software Development, Libraries"
"Apache Avro™ is a data serialization system. Simple integration with dynamic languages. Code generation is not required to read or write data files nor to use or implement RPC protocols. Code generation is an optional optimization, is only worth implementing for statically typed languages. Avro relies on schemas. When Avro data is read, the schema used when writing it is always present. This permits each datum to be written with no per-value overheads, making serialization both fast and small. This also facilitates use with dynamic, scripting languages, since data, together with its schema, is fully self-describing. When Avro data is stored in a file, its schema is stored with it, so that files may be processed later by any program. If the program reading the data expects a different schema this can be easily resolved, since both schemas are present.Apache Avro™ is a data serialization system. Simple integration with dynamic languages. Code generation is not required to read or write data files nor to use or implement RPC protocols. Code generation is an optional optimization, is only worth implementing for statically typed languages. Avro relies on schemas. When Avro data is read, the schema used when writing it is always present. This permits each datum to be written with no per-value overheads, making serialization both fast and small. This also facilitates use with dynamic, scripting languages, since data, together with its schema, is fully self-describing. When Avro data is stored in a file, its schema is stored with it, so that files may be processed later by any program. If the program reading the data expects a different schema this can be easily resolved, since both schemas are present.","Categories
Serial, Software Development"
"Harmony gives you an elegant and high-level way to alter the functionality in applications written in C#. It works great in games and is well established in titles like 7 Days To Die, BattleTech, Besiege, Cities:Skylines, Kerbal Space Program, Oxygen Not Included, Ravenfield, Rimworld, Sheltered, Stardew Valley, Staxel, Subnautica, The Ultimate Nerd Game, Total Miner, Unturned, SCP: Secret Laboratory and many more. If you develop in C# and your code is loaded as a module/plugin into a host application, you can use Harmony to alter the functionality of all the available assemblies of that application. Where other patch libraries simply allow you to replace the original method, Harmony goes one step further. It is also used in unit testing WPF controls and in many other areas. Installation is done by using 0Harmony.dll in your project or by using the Lib.Harmony nuget package.Harmony gives you an elegant and high-level way to alter the functionality in applications written in C#. It works great in games and is well established in titles like 7 Days To Die, BattleTech, Besiege, Cities:Skylines, Kerbal Space Program, Oxygen Not Included, Ravenfield, Rimworld, Sheltered, Stardew Valley, Staxel, Subnautica, The Ultimate Nerd Game, Total Miner, Unturned, SCP: Secret Laboratory and many more. If you develop in C# and your code is loaded as a module/plugin into a host application, you can use Harmony to alter the functionality of all the available assemblies of that application. Where other patch libraries simply allow you to replace the original method, Harmony goes one step further. It is also used in unit testing WPF controls and in many other areas. Installation is done by using 0Harmony.dll in your project or by using the Lib.Harmony nuget package.","Categories
Terminals, System"
"C/C++ language server supporting multi-million line code base, powered by libclang. Emacs, Vim, VSCode, and others with language server protocol support. Cross-references, completion, diagnostics, semantic highlighting, and more. cquery is a highly-scalable, low-latency language server for C/C++/Objective-C. It is tested and designed for large codebases like Chromium. cquery provides accurate and fast semantic analysis without interrupting workflow. cquery implements almost the entire language server protocol and provides some extra features to boot. cquery is able to respond to queries quickly because it caches a huge amount of information. When a request comes in, cquery just looks it up in the cache without running many computations. As a result, there's a large memory overhead. For example, a full index of Chrome will take about 10gb of memory. If you exclude v8, webkit, and third_party, it goes down to about 6.5gb.C/C++ language server supporting multi-million line code base, powered by libclang. Emacs, Vim, VSCode, and others with language server protocol support. Cross-references, completion, diagnostics, semantic highlighting, and more. cquery is a highly-scalable, low-latency language server for C/C++/Objective-C. It is tested and designed for large codebases like Chromium. cquery provides accurate and fast semantic analysis without interrupting workflow. cquery implements almost the entire language server protocol and provides some extra features to boot. cquery is able to respond to queries quickly because it caches a huge amount of information. When a request comes in, cquery just looks it up in the cache without running many computations. As a result, there's a large memory overhead. For example, a full index of Chrome will take about 10gb of memory. If you exclude v8, webkit, and third_party, it goes down to about 6.5gb.","Categories
Data Formats, Terminals"
"Track the Coronavirus disease (COVID-19) in the command line. Worldwide for all countries, for one country, and the US States. Fast response time (< 100ms).Get worldwide Coronavirus disease (COVID-19) reporting. Active daily reporting of your country's COVID-19 statistics. Get US States data for Coronavirus disease reports across the US. Data includes country, cases, deaths, recovered, active, critical, per million. Charts plot statistics in the form of line charts both regular and logarithmic.Track the Coronavirus disease (COVID-19) in the command line. Worldwide for all countries, for one country, and the US States. Fast response time (< 100ms).Get worldwide Coronavirus disease (COVID-19) reporting. Active daily reporting of your country's COVID-19 statistics. Get US States data for Coronavirus disease reports across the US. Data includes country, cases, deaths, recovered, active, critical, per million. Charts plot statistics in the form of line charts both regular and logarithmic.","Categories
Terminals, Healthcare"
"Grain is a new language that puts academic language features to work. Enter the future. Grain compiles directly to WebAssembly, taking full advantage of its speed and efficiency. No runtime type errors, ever. Every bit of Grain you write is thoroughly sifted for type errors, with no need for type annotations. Grain has its roots in functional programming, but is flexible enough to accommodate different programming styles for various applications. Grain aims to modernize innovative features from functional and academic programming languages and bring them to the masses. Many languages have had wonderful ideas, but they have ultimately been dismissed as esoteric or too difficult to learn and, consequently, have struggled to rally a large community around them. Grain hopes to bring new life to these ideas and present them in an accessible form that’s easy to use and understand.Grain is a new language that puts academic language features to work. Enter the future. Grain compiles directly to WebAssembly, taking full advantage of its speed and efficiency. No runtime type errors, ever. Every bit of Grain you write is thoroughly sifted for type errors, with no need for type annotations. Grain has its roots in functional programming, but is flexible enough to accommodate different programming styles for various applications. Grain aims to modernize innovative features from functional and academic programming languages and bring them to the masses. Many languages have had wonderful ideas, but they have ultimately been dismissed as esoteric or too difficult to learn and, consequently, have struggled to rally a large community around them. Grain hopes to bring new life to these ideas and present them in an accessible form that’s easy to use and understand.","Categories
Terminals, Software Development, Compilers"
"Wnexd--Windows Directory Utility...
Free adjunct to the Windows-intrinsic pushd/popd utilities for users of the Command Prompt terminal window that simulates a linux-style ""pushd +1"", and ""dirs"".Wnexd--Windows Directory Utility...
Free adjunct to the Windows-intrinsic pushd/popd utilities for users of the Command Prompt terminal window that simulates a linux-style ""pushd +1"", and ""dirs"".","Categories
Terminals, System Shells, File Systems"
"Unused identifies unused code in Rails, Phoenix, and other types of applications, improving developer productivity. By default, unused leverages a different memory allocator called mimalloc. For my local benchmarks, it speeds up execution by a significant amount (which is documented in the commit introducing mimalloc), but currently runs into sporadic issues on Apple M1 devices. If you run into issues with segmentation faults, consider reinstalling unused with the stock Rust allocator. It is strongly recommended you install Universal Ctags to generate tags files. Universal Ctags supports more languages and has native parsers for a good number of them, resulting in faster tags generation time.Unused identifies unused code in Rails, Phoenix, and other types of applications, improving developer productivity. By default, unused leverages a different memory allocator called mimalloc. For my local benchmarks, it speeds up execution by a significant amount (which is documented in the commit introducing mimalloc), but currently runs into sporadic issues on Apple M1 devices. If you run into issues with segmentation faults, consider reinstalling unused with the stock Rust allocator. It is strongly recommended you install Universal Ctags to generate tags files. Universal Ctags supports more languages and has native parsers for a good number of them, resulting in faster tags generation time.","Categories
Terminals, Source Code Analysis, Command Line Tools"
"Useful to practice algorithms and data structures for coding interviews. Nodebook is an in-browser REPL supporting many programming languages. Code's on the left, Console's on the right. Click ""Run"" or press Ctrl+Enter or Cmd+Enter to run your code. Code is automatically persisted on the file system. You can also use Nodebook directly on the command line, running your notebooks upon change. A notebook is a folder containing an {index|main}.{js,py,c,cpp,...} file. The homepage lists all of the available notebooks. Click on the + Notebook button on the Home page, then select the language of the notebook to be created. Once on the notebook edition page, you can rename the notebook by clicking on it's name. Notebooks are created in the directory specified by the parameter --notebooks.Useful to practice algorithms and data structures for coding interviews. Nodebook is an in-browser REPL supporting many programming languages. Code's on the left, Console's on the right. Click ""Run"" or press Ctrl+Enter or Cmd+Enter to run your code. Code is automatically persisted on the file system. You can also use Nodebook directly on the command line, running your notebooks upon change. A notebook is a folder containing an {index|main}.{js,py,c,cpp,...} file. The homepage lists all of the available notebooks. Click on the + Notebook button on the Home page, then select the language of the notebook to be created. Once on the notebook edition page, you can rename the notebook by clicking on it's name. Notebooks are created in the directory specified by the parameter --notebooks.","Categories
Terminals, Software Development"
"Develop Apps Script projects locally using clasp (Command Line Apps Script Projects). You can also try clasp in Gitpod, a one-click online IDE for GitHub. Clasp allows you to develop your Apps Script projects locally. That means you can check your code into source control, collaborate with other developers, and use your favorite tools to develop Apps Script. Create, update, and view the multiple deployments of your project. Clasp automatically converts your flat project on script.google.com into folders. Execute your Apps Script from the command line. V8 support take advantage of the performance boost of Chrome JavaScript engine. Edit your appsscript.json manifest to choose between the Rhino and V8 engines. Typescript users should update their tsconfig.json with the ""target"": ""ES2019"" compiler option. Every ES2019 features (except ES modules).Develop Apps Script projects locally using clasp (Command Line Apps Script Projects). You can also try clasp in Gitpod, a one-click online IDE for GitHub. Clasp allows you to develop your Apps Script projects locally. That means you can check your code into source control, collaborate with other developers, and use your favorite tools to develop Apps Script. Create, update, and view the multiple deployments of your project. Clasp automatically converts your flat project on script.google.com into folders. Execute your Apps Script from the command line. V8 support take advantage of the performance boost of Chrome JavaScript engine. Edit your appsscript.json manifest to choose between the Rhino and V8 engines. Typescript users should update their tsconfig.json with the ""target"": ""ES2019"" compiler option. Every ES2019 features (except ES modules).","Categories
Terminals"
"A cli tool to browse and play anime. A cli to browse and watch anime (alone AND with friends). This tool scrapes the site gogoplay. If you encounter ""Video URL not found"" or any breaking issue, then make sure you are on the latest version by typing sudo ani-cli -U to update on Linux, Mac, and Android. On Windows, run gitbash as administrator then their type ani-cli -U. If after this the issue persists then open an issue. If you see sed warnings or your history entries have disappeared after updating, then update your history file with the history transition script.A cli tool to browse and play anime. A cli to browse and watch anime (alone AND with friends). This tool scrapes the site gogoplay. If you encounter ""Video URL not found"" or any breaking issue, then make sure you are on the latest version by typing sudo ani-cli -U to update on Linux, Mac, and Android. On Windows, run gitbash as administrator then their type ani-cli -U. If after this the issue persists then open an issue. If you see sed warnings or your history entries have disappeared after updating, then update your history file with the history transition script.","Categories
Terminals, Multimedia"
"Percollate is a command-line tool that turns web pages into beautifully formatted PDF, EPUB, or HTML files. By default, percollate processes URLs in parallel. Use the --wait option to process them sequentially instead, with a pause between items. The delay is specified in seconds, and can be zero. By default, percollate bundles all web pages in a single file. Use the --individual flag to export each source to a separate file. Additional CSS styles you can pass from the command line to override styles specified by the default/custom stylesheet. Generate a hyperlinked table of contents. The option is implicitly enabled when bundling more than one web page to a single file. Disable this implicit behavior by passing the --no-to flag. The idea with percollate is to make PDFs that can be printed without losing where the hyperlinks point to. However, for some link-heavy pages, the appended hrefs can become bothersome.Percollate is a command-line tool that turns web pages into beautifully formatted PDF, EPUB, or HTML files. By default, percollate processes URLs in parallel. Use the --wait option to process them sequentially instead, with a pause between items. The delay is specified in seconds, and can be zero. By default, percollate bundles all web pages in a single file. Use the --individual flag to export each source to a separate file. Additional CSS styles you can pass from the command line to override styles specified by the default/custom stylesheet. Generate a hyperlinked table of contents. The option is implicitly enabled when bundling more than one web page to a single file. Disable this implicit behavior by passing the --no-to flag. The idea with percollate is to make PDFs that can be printed without losing where the hyperlinks point to. However, for some link-heavy pages, the appended hrefs can become bothersome.","Categories
Data Formats, Terminals, Command Line Tools"
"bombardier is an HTTP(S) benchmarking tool. It is written in Go programming language and uses excellent fast HTTP instead of Go's default HTTP library, because of its lightning-fast performance. With bombardier v1.1 and higher, you can now use the net/HTTP client if you need to test HTTP/2.x services or want to use a more RFC-compliant HTTP client.bombardier is an HTTP(S) benchmarking tool. It is written in Go programming language and uses excellent fast HTTP instead of Go's default HTTP library, because of its lightning-fast performance. With bombardier v1.1 and higher, you can now use the net/HTTP client if you need to test HTTP/2.x services or want to use a more RFC-compliant HTTP client.","Categories
Terminals, WWW/HTTP"
"Picocli is a one-file framework for creating Java command-line applications with almost zero code. It supports a variety of command-line syntax styles including POSIX, GNU, MS-DOS and more. It generates highly customizable usage help messages that use ANSI colors and styles to contrast important elements and reduce the cognitive load on the user. Picocli-based applications can have command line TAB completion showing available options, option parameters, and subcommands, for any level of nested subcommands. Picocli-based applications can be ahead-of-time compiled to a GraalVM native image, with extremely fast startup time and lower memory requirements, which can be distributed as a single executable file. Picocli generates beautiful documentation for your application (HTML, PDF and Unix man pages). Another distinguishing feature of picocli is how it aims to let users run picocli-based applications without requiring picocli as an external dependency.Picocli is a one-file framework for creating Java command-line applications with almost zero code. It supports a variety of command-line syntax styles including POSIX, GNU, MS-DOS and more. It generates highly customizable usage help messages that use ANSI colors and styles to contrast important elements and reduce the cognitive load on the user. Picocli-based applications can have command line TAB completion showing available options, option parameters, and subcommands, for any level of nested subcommands. Picocli-based applications can be ahead-of-time compiled to a GraalVM native image, with extremely fast startup time and lower memory requirements, which can be distributed as a single executable file. Picocli generates beautiful documentation for your application (HTML, PDF and Unix man pages). Another distinguishing feature of picocli is how it aims to let users run picocli-based applications without requiring picocli as an external dependency.","Categories
Terminals, Build Tools, Frameworks"
"Imagine you have finished a macOS app, exported it from Xcode, and now want to distribute it to users. The most common way of distributing an app outside the Mac App Store is by putting it in a .dmg file. These are hard to create, especially good-looking ones. You can either pay for a GUI app where you have to customize an existing design or you can run some homebrewed Bash script and you still have to design it. This tool does everything for you, so you can play with your cat instead. The DMG detects the minimum runtime of the app, and uses ULFO (macOS 10.11 or later) or UDZO as appropriate. The resulting image has the filename App Name 0.0.0.dmg, for example, Lungo 1.0.0.dmg. It will try to code sign the DMG, but the DMG is still created and fine even if the code signing fails, for example if you don't have a developer certificate.Imagine you have finished a macOS app, exported it from Xcode, and now want to distribute it to users. The most common way of distributing an app outside the Mac App Store is by putting it in a .dmg file. These are hard to create, especially good-looking ones. You can either pay for a GUI app where you have to customize an existing design or you can run some homebrewed Bash script and you still have to design it. This tool does everything for you, so you can play with your cat instead. The DMG detects the minimum runtime of the app, and uses ULFO (macOS 10.11 or later) or UDZO as appropriate. The resulting image has the filename App Name 0.0.0.dmg, for example, Lungo 1.0.0.dmg. It will try to code sign the DMG, but the DMG is still created and fine even if the code signing fails, for example if you don't have a developer certificate.","Categories
Terminals"
"Standalone, daemon-less, unprivileged Dockerfile and OCI compatible container image builder. img is more cache-efficient than Docker and can also execute multiple build stages concurrently, as it internally uses BuildKit's DAG solver. The commands/UX are the same as docker {build, tag, push, pull, login, logout, save} so all you have to do is replace docker with img in your scripts, command line, and/or life. This is a glorified cli tool built on top of the build kit. The goal of this project is to be able to build container images for unprivileged users. Running unprivileged allows companies who use LDAP and other login mechanisms to use img without needing root. This is very important in HPC environments and academia as well. Currently, this works out of the box on a Linux machine if you install via the directions covered in installing from binaries. This installation will ensure you have the correct version of img and also runc.Standalone, daemon-less, unprivileged Dockerfile and OCI compatible container image builder. img is more cache-efficient than Docker and can also execute multiple build stages concurrently, as it internally uses BuildKit's DAG solver. The commands/UX are the same as docker {build, tag, push, pull, login, logout, save} so all you have to do is replace docker with img in your scripts, command line, and/or life. This is a glorified cli tool built on top of the build kit. The goal of this project is to be able to build container images for unprivileged users. Running unprivileged allows companies who use LDAP and other login mechanisms to use img without needing root. This is very important in HPC environments and academia as well. Currently, this works out of the box on a Linux machine if you install via the directions covered in installing from binaries. This installation will ensure you have the correct version of img and also runc.","Categories
Terminals"
"Haul is a drop-in replacement for react-native CLI built on open tools like Webpack. It can act as a development server or bundle your React Native app for production. @haul-bundler/cli and other packages under @haul-bundler scope are an overhaul of haul package and support only React Native 0.59.0 and above. If you need to support older versions, please check legacy branch. @haul-bundler/cli and other packages require Node 10 to be installed. If you're running an older version, please upgrade to Node 10 LTS or newer. Add the configuration needed to make Haul work with your app, e.g. add haul.config.js to your project, which you can customize to add more functionality. Check out the docs to learn more about available commands and tips on customizing the webpack configuration. Haul uses a completely different architecture from React Native packager, which means there are some things that don't work quite the same.Haul is a drop-in replacement for react-native CLI built on open tools like Webpack. It can act as a development server or bundle your React Native app for production. @haul-bundler/cli and other packages under @haul-bundler scope are an overhaul of haul package and support only React Native 0.59.0 and above. If you need to support older versions, please check legacy branch. @haul-bundler/cli and other packages require Node 10 to be installed. If you're running an older version, please upgrade to Node 10 LTS or newer. Add the configuration needed to make Haul work with your app, e.g. add haul.config.js to your project, which you can customize to add more functionality. Check out the docs to learn more about available commands and tips on customizing the webpack configuration. Haul uses a completely different architecture from React Native packager, which means there are some things that don't work quite the same.","Categories
Terminals, Software Development, Command Line Tools"
"An idiomatic, lean, fast & safe pure Rust implementation of Git. gix is a command-line interface (CLI) to access git repositories. It's written to optimize the user experience and perform as well or better than the canonical implementation. Furthermore, it provides an easy and safe to use API in the form of various small crates for implementing your own tools in a breeze. Please see 'Development Status' for a listing of all crates and their capabilities. Please note that all functionality comes from the gitoxide-core library, which mirrors these capabilities and itself relies on all git-* crates. Limit the number of threads used in operations that support it. Choose between 'human' and 'JSON' output formats. Display general information about the index itself, with detailed extension information by default and detailed information about the TREE extension. Follow the linked crate name for detailed status.An idiomatic, lean, fast & safe pure Rust implementation of Git. gix is a command-line interface (CLI) to access git repositories. It's written to optimize the user experience and perform as well or better than the canonical implementation. Furthermore, it provides an easy and safe to use API in the form of various small crates for implementing your own tools in a breeze. Please see 'Development Status' for a listing of all crates and their capabilities. Please note that all functionality comes from the gitoxide-core library, which mirrors these capabilities and itself relies on all git-* crates. Limit the number of threads used in operations that support it. Choose between 'human' and 'JSON' output formats. Display general information about the index itself, with detailed extension information by default and detailed information about the TREE extension. Follow the linked crate name for detailed status.","Categories
Terminals, Git"
"Fancy output with fallback for minimal environments. Consistent command-line interface (CLI) experience. Spam prevention by throttling logs. console uses std in the underlying so calling wrapStd redirects console too. The benefit of this function is that things like console.info will be correctly redirected to the corresponding type. Any instance of consola that inherits the mocked instance, will apply provided callback again. This way, mocking works for withTag scoped loggers without the need for extra effort. Choose between one of the built-in reporters or bring in your own one. By default FancyReporter is registered for modern terminals or BasicReporter will be used if running in limited environments such as CIs. A reporter (class or object) exposes log(logObj) method. To get more info about how to write your own reporter, take a look at the linked implementations.Fancy output with fallback for minimal environments. Consistent command-line interface (CLI) experience. Spam prevention by throttling logs. console uses std in the underlying so calling wrapStd redirects console too. The benefit of this function is that things like console.info will be correctly redirected to the corresponding type. Any instance of consola that inherits the mocked instance, will apply provided callback again. This way, mocking works for withTag scoped loggers without the need for extra effort. Choose between one of the built-in reporters or bring in your own one. By default FancyReporter is registered for modern terminals or BasicReporter will be used if running in limited environments such as CIs. A reporter (class or object) exposes log(logObj) method. To get more info about how to write your own reporter, take a look at the linked implementations.","Categories
Terminals, Logging"
"Watch NBA live play-by-play, game preview, box score and player information on your console. Best CLI tool for those who are both NBA fans and Engineers. In order to use nba-go, make sure that you have Node version 6.0.0 or higher. All data comes from stats.nba.com APIs. By default, the docker container will run nba-go game -t, but you can override this command at run time. Or download the latest version pkg binaries in releases. It can be run on Linux, macOS, and Windows. Depending on the status of the game you chose, a different result will be shown. There are three kinds of statuses that may be displayed. In order to show the schedule on some days, nba-go provides the command nba-go game with some options. Enter a specific date to check the schedule on that day. Best feature! Real-time updated play-by-play, scoreboard, and box score. Turn on fullscreen mode for a better experience.Watch NBA live play-by-play, game preview, box score and player information on your console. Best CLI tool for those who are both NBA fans and Engineers. In order to use nba-go, make sure that you have Node version 6.0.0 or higher. All data comes from stats.nba.com APIs. By default, the docker container will run nba-go game -t, but you can override this command at run time. Or download the latest version pkg binaries in releases. It can be run on Linux, macOS, and Windows. Depending on the status of the game you chose, a different result will be shown. There are three kinds of statuses that may be displayed. In order to show the schedule on some days, nba-go provides the command nba-go game with some options. Enter a specific date to check the schedule on that day. Best feature! Real-time updated play-by-play, scoreboard, and box score. Turn on fullscreen mode for a better experience.","Categories
Terminals"
"A gitmoji interactive command-line tool for using emojis on commits. This project provides an easy solution for using gitmoji from your command line. Gitmoji-cli solves the hassle of searching through the gitmoji list. Includes a bunch of options you can play with! A gitmoji interactive client for using gitmojis on commit messages. You can use the commit functionality in two ways, directly or via a commit-hook. If you want to integrate gitmoji-cli in your project I would recommend going for the hook mode as it supports more use cases, it's more flexible, and has better integration with other tools, whereas the client mode is more quick and easy to use. Run the init option, add your changes and commit them, after the prompts will begin and your commit message will be built. Pretty print all the available gitmojis.A gitmoji interactive command-line tool for using emojis on commits. This project provides an easy solution for using gitmoji from your command line. Gitmoji-cli solves the hassle of searching through the gitmoji list. Includes a bunch of options you can play with! A gitmoji interactive client for using gitmojis on commit messages. You can use the commit functionality in two ways, directly or via a commit-hook. If you want to integrate gitmoji-cli in your project I would recommend going for the hook mode as it supports more use cases, it's more flexible, and has better integration with other tools, whereas the client mode is more quick and easy to use. Run the init option, add your changes and commit them, after the prompts will begin and your commit message will be built. Pretty print all the available gitmojis.","Categories
Terminals, User Interface (UI), Command Line Tools"
"haxor-news brings Hacker News to the terminal, allowing you to view/filter the following without leaving your command line; posts, post comments, post-linked web content, monthly hiring and freelancers posts, user info, and onions. haxor-news helps you filter the large number of comments that popular posts generate. Job hunting or just curious what's out there? Filter the monthly who's hiring and freelancers post. Combine haxor-news with pipes, redirects, and other command-line utilities. Output to pagers, write to files, automate with cron, etc. haxor-news comes with a handy optional auto-completer with interactive help. After viewing a list of posts, you can view a post's linked web content by referencing the post #. The HTML contents of the post's link are formatted for easy viewing within your terminal. If available, the formatted output is sent to a pager.haxor-news brings Hacker News to the terminal, allowing you to view/filter the following without leaving your command line; posts, post comments, post-linked web content, monthly hiring and freelancers posts, user info, and onions. haxor-news helps you filter the large number of comments that popular posts generate. Job hunting or just curious what's out there? Filter the monthly who's hiring and freelancers post. Combine haxor-news with pipes, redirects, and other command-line utilities. Output to pagers, write to files, automate with cron, etc. haxor-news comes with a handy optional auto-completer with interactive help. After viewing a list of posts, you can view a post's linked web content by referencing the post #. The HTML contents of the post's link are formatted for easy viewing within your terminal. If available, the formatted output is sent to a pager.","Categories
Terminals, User Interface (UI)"
"If it works as an SPA, it will work in Electron. Because it extends your regular config, it works with all plugins and customized webpack options. All the functions of VCP Electron Builder are entirely configurable and well documented. VCP Electron Builder provides tools for easy debugging and testing, powered by Spectron. Open a terminal in the directory of your app created with Vue-CLI 3 or 4 (4 is recommended). Then, install and invoke the generator of vue-cli-plugin-electron-builder. Native modules are supported and should work without any configuration, assuming node integration is enabled. If you get errors, you may need to set the native dependency as a webpack external. Preload files allow you to execute JS with Node integration in the context of your Vue App (shared window variable). Read Vue ClI's documentation to learn about using environment variables in your app.If it works as an SPA, it will work in Electron. Because it extends your regular config, it works with all plugins and customized webpack options. All the functions of VCP Electron Builder are entirely configurable and well documented. VCP Electron Builder provides tools for easy debugging and testing, powered by Spectron. Open a terminal in the directory of your app created with Vue-CLI 3 or 4 (4 is recommended). Then, install and invoke the generator of vue-cli-plugin-electron-builder. Native modules are supported and should work without any configuration, assuming node integration is enabled. If you get errors, you may need to set the native dependency as a webpack external. Preload files allow you to execute JS with Node integration in the context of your Vue App (shared window variable). Read Vue ClI's documentation to learn about using environment variables in your app.","Categories
Terminals, Build Tools"
"High-quality library definitions for Flow. flow-typed is a repository of third-party library interface definitions for use with Flow. When you start a project with Flow, you likely want to use some third-party libraries that were not written with Flow. By default, Flow will just ignore these libraries leaving them untyped. As a result, Flow can't give errors if you accidentally misuse the library (nor will it be able to auto-complete the library). To address this, Flow supports library definitions which allow you to describe the interface of a module or library separate from the implementation of that module/library. The flow-typed repo is a collection of high-quality library definitions, tests to ensure that definitions remain high quality, and tools to make it as easy as possible to import them into your project. All you have to do when you add one or more new dependencies to your project is run flow-typed install.High-quality library definitions for Flow. flow-typed is a repository of third-party library interface definitions for use with Flow. When you start a project with Flow, you likely want to use some third-party libraries that were not written with Flow. By default, Flow will just ignore these libraries leaving them untyped. As a result, Flow can't give errors if you accidentally misuse the library (nor will it be able to auto-complete the library). To address this, Flow supports library definitions which allow you to describe the interface of a module or library separate from the implementation of that module/library. The flow-typed repo is a collection of high-quality library definitions, tests to ensure that definitions remain high quality, and tools to make it as easy as possible to import them into your project. All you have to do when you add one or more new dependencies to your project is run flow-typed install.","Categories
Terminals, Libraries"
"The interactive web server. HTTPLabs let you inspect HTTP requests and forge responses. Each release provides pre-built binaries for different architectures. HTTPLab uses files to store pre-built responses, it will look for a file called .httplab on the current directory if not found it will fall back to $HOME.The interactive web server. HTTPLabs let you inspect HTTP requests and forge responses. Each release provides pre-built binaries for different architectures. HTTPLab uses files to store pre-built responses, it will look for a file called .httplab on the current directory if not found it will fall back to $HOME.","Categories
Terminals, HTTP Servers"
"Bitwarden client applications (web, browser extension, desktop, and cli). This repository houses all Bitwarden client applications except the mobile application. Please check the readmes for each application under apps for instructions on how to build the different applications. We recommend that you configure git to ignore specific revisions. Drive collaboration, save time, and boost productivity with Bitwarden, the easiest way to secure all your passwords and sensitive information. Move fast and securely with the password manager trusted by millions. Everything you could want out of a password manager. For those who want to do more, secure more, and collaborate more, Bitwarden is fast and easy to set up for both individuals and businesses. Cross-platform access for mobile, browser, and desktop apps. Supported in over 40 languages. Zero-knowledge, and end-to-end encryption guide the Bitwarden approach to trust, accountability, and security.Bitwarden client applications (web, browser extension, desktop, and cli). This repository houses all Bitwarden client applications except the mobile application. Please check the readmes for each application under apps for instructions on how to build the different applications. We recommend that you configure git to ignore specific revisions. Drive collaboration, save time, and boost productivity with Bitwarden, the easiest way to secure all your passwords and sensitive information. Move fast and securely with the password manager trusted by millions. Everything you could want out of a password manager. For those who want to do more, secure more, and collaborate more, Bitwarden is fast and easy to set up for both individuals and businesses. Cross-platform access for mobile, browser, and desktop apps. Supported in over 40 languages. Zero-knowledge, and end-to-end encryption guide the Bitwarden approach to trust, accountability, and security.","Categories
Terminals, Internet"
"Netcat, curl and socat for WebSockets. Command-line client for WebSockets, like netcat (or curl) for ws:// with advanced socat-like functions. Connecting to and serving WebSockets from the command line. Executing external program and making it communicate to WebSocket using stdin/stdout. Text and binary modes, converting between lines (or null-terminated records) and messages. Inetd mode, UNIX sockets (including abstract namespaced on Linux). Integration with Nginx using TCP or UNIX sockets. Directly using unauthenticated SOCKS5 servers for connecting to WebSockets and listening WebSocket connections. Auto-reconnect and connection-reuse modes. Linux, Windows, and Mac support, with pre-built executables. Low-level WebSocket clients and servers with an overridable underlying transport connection, e.g. calling an external program to serve as a transport for websocat (for SSL, proxying, etc.).Netcat, curl and socat for WebSockets. Command-line client for WebSockets, like netcat (or curl) for ws:// with advanced socat-like functions. Connecting to and serving WebSockets from the command line. Executing external program and making it communicate to WebSocket using stdin/stdout. Text and binary modes, converting between lines (or null-terminated records) and messages. Inetd mode, UNIX sockets (including abstract namespaced on Linux). Integration with Nginx using TCP or UNIX sockets. Directly using unauthenticated SOCKS5 servers for connecting to WebSockets and listening WebSocket connections. Auto-reconnect and connection-reuse modes. Linux, Windows, and Mac support, with pre-built executables. Low-level WebSocket clients and servers with an overridable underlying transport connection, e.g. calling an external program to serve as a transport for websocat (for SSL, proxying, etc.).","Categories
Terminals"
"S3cmd (s3cmd) is a free command line tool and client for uploading, retrieving and managing data in Amazon S3 and other cloud storage service providers that use the S3 protocol, such as Google Cloud Storage or DreamHost DreamObjects. It is best suited for power users who are familiar with command-line programs. It is also ideal for batch scripts and automated backup to S3, triggered from cron, etc. S3cmd is written in Python. It's an open-source project available under GNU Public License v2 (GPLv2) and is free for both commercial and private use. You will only have to pay Amazon for using their storage. Lots of features and options have been added to S3cmd, since its very first release in 2008.... we recently counted more than 60 command-line options, including multipart uploads, encryption, incremental backup, s3 sync, ACL and Metadata management, S3 bucket size, bucket policies, and more!S3cmd (s3cmd) is a free command line tool and client for uploading, retrieving and managing data in Amazon S3 and other cloud storage service providers that use the S3 protocol, such as Google Cloud Storage or DreamHost DreamObjects. It is best suited for power users who are familiar with command-line programs. It is also ideal for batch scripts and automated backup to S3, triggered from cron, etc. S3cmd is written in Python. It's an open-source project available under GNU Public License v2 (GPLv2) and is free for both commercial and private use. You will only have to pay Amazon for using their storage. Lots of features and options have been added to S3cmd, since its very first release in 2008.... we recently counted more than 60 command-line options, including multipart uploads, encryption, incremental backup, s3 sync, ACL and Metadata management, S3 bucket size, bucket policies, and more!","Categories
Terminals, Cloud Services, Command Line Tools"
"Tool, language, and decoders for working with binary data. fq is inspired by the well-known jq tool and language and allows you to work with binary formats the same way you would using jq. In addition, it can also present data similar to a hex viewer, transform, slice, and concatenate binary data, supports nested formats, and has an interactive REPL with auto-completion. It was originally designed to query, inspect and debug codecs and metadata in media files and containers like mp4, FLAC, mp3, and jpeg. But has since been extended to support a variety of formats like executables, and packet captures including TCP reassembly and serialization formats like ASN1 BER, Avro, CBOR, protobuf, and a lot more. In summary, it aims to be something like jq, hexdump, dd and gdb combined into one. fq is still early in development so things might change, be broken, or do not make sense. That also means that there is a great opportunity to help out!Tool, language, and decoders for working with binary data. fq is inspired by the well-known jq tool and language and allows you to work with binary formats the same way you would using jq. In addition, it can also present data similar to a hex viewer, transform, slice, and concatenate binary data, supports nested formats, and has an interactive REPL with auto-completion. It was originally designed to query, inspect and debug codecs and metadata in media files and containers like mp4, FLAC, mp3, and jpeg. But has since been extended to support a variety of formats like executables, and packet captures including TCP reassembly and serialization formats like ASN1 BER, Avro, CBOR, protobuf, and a lot more. In summary, it aims to be something like jq, hexdump, dd and gdb combined into one. fq is still early in development so things might change, be broken, or do not make sense. That also means that there is a great opportunity to help out!","Categories
Terminals"
"Yet another cross-platform graphical process/system monitor. A customizable cross-platform graphical process/system monitor for the terminal. Supports Linux, macOS, and Windows. Inspired by gtop, gotop, and htop. By default, bottom is somewhat like a dashboard - a bunch of different widgets, all showing different things, and they all cram together to fit into one terminal. If you instead just want to see one widget, maybe you want to look at a graph in more detail, for example, you can ""expand"" the currently selected widget using the e key, which will hide all other widgets and make that widget take up all available terminal space. To allow for widget-specific keybindings and expansion, there is the idea of widget selection in bottom, where you can focus on a specific widget to work with it. This can be done with the mouse (just click on the widget of interest).Yet another cross-platform graphical process/system monitor. A customizable cross-platform graphical process/system monitor for the terminal. Supports Linux, macOS, and Windows. Inspired by gtop, gotop, and htop. By default, bottom is somewhat like a dashboard - a bunch of different widgets, all showing different things, and they all cram together to fit into one terminal. If you instead just want to see one widget, maybe you want to look at a graph in more detail, for example, you can ""expand"" the currently selected widget using the e key, which will hide all other widgets and make that widget take up all available terminal space. To allow for widget-specific keybindings and expansion, there is the idea of widget selection in bottom, where you can focus on a specific widget to work with it. This can be done with the mouse (just click on the widget of interest).","Categories
Terminals, System, Graphics"
"A Ruby script that colorizes the ls output with color and icons. You can overwrite the existing icons and colors mapping by copying the yaml files. You may also use a color hex code as long as it is quoted within the YAML file and prefaced with a # symbol. A Ruby gem that beautifies the terminal's ls command, with color and font-awesome icons.A Ruby script that colorizes the ls output with color and icons. You can overwrite the existing icons and colors mapping by copying the yaml files. You may also use a color hex code as long as it is quoted within the YAML file and prefaced with a # symbol. A Ruby gem that beautifies the terminal's ls command, with color and font-awesome icons.","Categories
Terminals, User Interface (UI), Design"
"This is the command-line tool for JSON Resume, the open-source initiative to create a JSON-based standard for resumes. Alternatives: The Resume CLI tool works as it is so there isn't a huge amount of active development on it, try these alternatives if it doesn't work for you. JSON Resume is a community-driven open-source initiative to create a JSON-based standard for resumes. We believe that the strengths of the JSON format make it a good fit for resumes. It's lightweight, easy to use and it's perfect to build tools for! We also feel that the JSON Schema is mature enough for writing usable semantics. The schema is open source and community-driven. We release everything we do under the MIT license.This is the command-line tool for JSON Resume, the open-source initiative to create a JSON-based standard for resumes. Alternatives: The Resume CLI tool works as it is so there isn't a huge amount of active development on it, try these alternatives if it doesn't work for you. JSON Resume is a community-driven open-source initiative to create a JSON-based standard for resumes. We believe that the strengths of the JSON format make it a good fit for resumes. It's lightweight, easy to use and it's perfect to build tools for! We also feel that the JSON Schema is mature enough for writing usable semantics. The schema is open source and community-driven. We release everything we do under the MIT license.","Categories
Terminals, Command Line Tools"
"This tool seeks to be a one-stop-shop for building and working with rust-generated WebAssembly that you would like to interop with JavaScript, in the browser or with Node.js. wasm-pack helps you build rust-generated WebAssembly packages that you could publish to the npm registry, or otherwise use alongside any javascript packages in workflows that you already use, such as webpack. This project is a part of the rust-wasm group. You can find more info by visiting that repo! Currently, wasm-pack requires that you have npm installed to pack and publish your package. Long-term, this will be replaced by a Rust-only version. If you would rather use another package manager that interfaces with the npm registry you may, however, the pack, publish, and login commands wrap the npm CLI interface and as a result require that npm be installed.This tool seeks to be a one-stop-shop for building and working with rust-generated WebAssembly that you would like to interop with JavaScript, in the browser or with Node.js. wasm-pack helps you build rust-generated WebAssembly packages that you could publish to the npm registry, or otherwise use alongside any javascript packages in workflows that you already use, such as webpack. This project is a part of the rust-wasm group. You can find more info by visiting that repo! Currently, wasm-pack requires that you have npm installed to pack and publish your package. Long-term, this will be replaced by a Rust-only version. If you would rather use another package manager that interfaces with the npm registry you may, however, the pack, publish, and login commands wrap the npm CLI interface and as a result require that npm be installed.","Categories
Terminals, Workflow Management"
"Style definitions for nice terminal layouts. Built with TUIs in mind. Lip Gloss takes an expressive, declarative approach to terminal rendering. Users familiar with CSS will feel at home with Lip Gloss. The terminal's color profile will be automatically detected, and colors outside the gamut of the current palette will be automatically coerced to their closest available value. The terminal's background color will automatically be detected and the appropriate color will be chosen at runtime. There are also shorthand functions for defining borders, which follow a similar pattern to the margin and padding shorthand functions. Sometimes, such as when developing a component, you want to make sure style definitions respect their intended purpose in the UI. This is where Inline and MaxWidth, and MaxHeight come in.Style definitions for nice terminal layouts. Built with TUIs in mind. Lip Gloss takes an expressive, declarative approach to terminal rendering. Users familiar with CSS will feel at home with Lip Gloss. The terminal's color profile will be automatically detected, and colors outside the gamut of the current palette will be automatically coerced to their closest available value. The terminal's background color will automatically be detected and the appropriate color will be chosen at runtime. There are also shorthand functions for defining borders, which follow a similar pattern to the margin and padding shorthand functions. Sometimes, such as when developing a component, you want to make sure style definitions respect their intended purpose in the UI. This is where Inline and MaxWidth, and MaxHeight come in.","Categories
Terminals, Design"
"A modern, simple TCP tunnel in Rust that exposes local ports to a remote server, bypassing standard NAT connection firewalls. That's all it does, no more and no less. This will expose your local port at localhost:8000 to the public internet at bore.pub:<PORT>, where the port number is assigned randomly. Similar to localtunnel and ngrok, except bore is intended to be a highly efficient, unopinionated tool for forwarding TCP traffic that is simple to install and easy to self-host, with no frills attached. (bore totals less than 400 lines of safe, async Rust code and is trivial to set up — just run a single binary for the client and server.) The easiest way to install bore is from prebuilt binaries. These are available on the releases page for macOS, Windows, and Linux. Just unzip the appropriate file for your platform and move the bore executable into a folder on your PATH. You also can build bore from source using Cargo, the Rust package manager.A modern, simple TCP tunnel in Rust that exposes local ports to a remote server, bypassing standard NAT connection firewalls. That's all it does, no more and no less. This will expose your local port at localhost:8000 to the public internet at bore.pub:<PORT>, where the port number is assigned randomly. Similar to localtunnel and ngrok, except bore is intended to be a highly efficient, unopinionated tool for forwarding TCP traffic that is simple to install and easy to self-host, with no frills attached. (bore totals less than 400 lines of safe, async Rust code and is trivial to set up — just run a single binary for the client and server.) The easiest way to install bore is from prebuilt binaries. These are available on the releases page for macOS, Windows, and Linux. Just unzip the appropriate file for your platform and move the bore executable into a folder on your PATH. You also can build bore from source using Cargo, the Rust package manager.","Categories
Terminals"
"This is a ACMEv2 client for Windows that aims to be very simple to start with, but powerful enough to grow into almost every scenario. A very simple interface to create and install certificates on a local IIS server. A more advanced interface for many other use cases, including Apache and Exchange. Automatically creates a scheduled task to renew certificates when needed. Get certificates with wildcards, international names, OCSP Must Staple extension (optional). Re-use private keys for DANE, use EC crypto or bring your own CSR. Advanced toolkit for DNS, HTTP and TLS validation: SFTP/FTPS, acme-dns, Azure, Route53, Cloudflare and many more. Store your certificates where and how you want them: Windows, IIS Central Store, .pem files, .pfx file or KeyVault. Compatible with all popular ACME services, including Let’s Encrypt, ZeroSSL, DigiCert, Sectigo, Buypass, Keyon and others. Completely unattended operation from the command line.This is a ACMEv2 client for Windows that aims to be very simple to start with, but powerful enough to grow into almost every scenario. A very simple interface to create and install certificates on a local IIS server. A more advanced interface for many other use cases, including Apache and Exchange. Automatically creates a scheduled task to renew certificates when needed. Get certificates with wildcards, international names, OCSP Must Staple extension (optional). Re-use private keys for DANE, use EC crypto or bring your own CSR. Advanced toolkit for DNS, HTTP and TLS validation: SFTP/FTPS, acme-dns, Azure, Route53, Cloudflare and many more. Store your certificates where and how you want them: Windows, IIS Central Store, .pem files, .pfx file or KeyVault. Compatible with all popular ACME services, including Let’s Encrypt, ZeroSSL, DigiCert, Sectigo, Buypass, Keyon and others. Completely unattended operation from the command line.","Categories
Terminals"
"Start building a Preact Progressive Web App in seconds. 100/100 Lighthouse score, right out of the box (proof). Fully automatic code-splitting for routes (see Route-Based Code Splitting). Transparently code-split any component with an async! prefix. Auto-generated Service Workers for offline caching powered by Workbox. PRPL pattern support for efficient loading. Zero-configuration pre-rendering/server-side rendering hydration. Support for CSS Modules, LESS, Sass, and Stylus; with Autoprefixer. Monitor your bundle/chunk sizes with built-in tracking. Automatic app mounting, debug helpers & Hot Module Replacement. The purpose of official preact project templates are to provide opinionated development tooling setups so that users can get started with actual app code as fast as possible. However, these templates are un-opinionated in terms of how you structure your app code and what libraries you use in addition to preact.js.Start building a Preact Progressive Web App in seconds. 100/100 Lighthouse score, right out of the box (proof). Fully automatic code-splitting for routes (see Route-Based Code Splitting). Transparently code-split any component with an async! prefix. Auto-generated Service Workers for offline caching powered by Workbox. PRPL pattern support for efficient loading. Zero-configuration pre-rendering/server-side rendering hydration. Support for CSS Modules, LESS, Sass, and Stylus; with Autoprefixer. Monitor your bundle/chunk sizes with built-in tracking. Automatic app mounting, debug helpers & Hot Module Replacement. The purpose of official preact project templates are to provide opinionated development tooling setups so that users can get started with actual app code as fast as possible. However, these templates are un-opinionated in terms of how you structure your app code and what libraries you use in addition to preact.js.","Categories
Terminals"
"Interactive prompt for command-line applications. We built Promptui because we wanted to make it easy and fun to explore cloud services with manifold cli. Promptui is a library providing a simple interface to create command-line prompts for go. It can be easily integrated into spf13/cobra, urfave/cli or any cli go application. Prompt provides a single line for user input. Prompt supports optional live validation, confirmation, and masking of the input. Select provides a list of options to choose from. Select supports pagination, search, detailed view, and custom templates. We built Promptui because we wanted to make it easy and fun to explore cloud services with manifold cli.Interactive prompt for command-line applications. We built Promptui because we wanted to make it easy and fun to explore cloud services with manifold cli. Promptui is a library providing a simple interface to create command-line prompts for go. It can be easily integrated into spf13/cobra, urfave/cli or any cli go application. Prompt provides a single line for user input. Prompt supports optional live validation, confirmation, and masking of the input. Select provides a list of options to choose from. Select supports pagination, search, detailed view, and custom templates. We built Promptui because we wanted to make it easy and fun to explore cloud services with manifold cli.","Categories
Terminals, User Interface (UI)"
"If you have a file called todo.txt on your computer right now, you're in the right place.
So many power users try dozens of complicated todo list software applications, only to go right back to their trusty todo.txt file. But it's not easy to open todo.txt, make a change, and save it, especially on your touchscreen device and at the command line. Todo.txt apps solve that problem. Simplicity is todo.txt's core value. You're not going to find many checkboxes, drop-downs, reminders, or date pickers here. Todo.txt apps are minimal, todo.txt-focused editors which help you manage your tasks with as few keystrokes and taps as possible. Countless productivity apps and sites store your tasks in their own proprietary database and file format. But you can work with your todo.txt file in every text editor ever made, regardless of operating system or vendor. With a simple but powerful shell script called todo.sh, you can interact with todo.txt at the command line for quick and easy, Unix-y access.If you have a file called todo.txt on your computer right now, you're in the right place.
So many power users try dozens of complicated todo list software applications, only to go right back to their trusty todo.txt file. But it's not easy to open todo.txt, make a change, and save it, especially on your touchscreen device and at the command line. Todo.txt apps solve that problem. Simplicity is todo.txt's core value. You're not going to find many checkboxes, drop-downs, reminders, or date pickers here. Todo.txt apps are minimal, todo.txt-focused editors which help you manage your tasks with as few keystrokes and taps as possible. Countless productivity apps and sites store your tasks in their own proprietary database and file format. But you can work with your todo.txt file in every text editor ever made, regardless of operating system or vendor. With a simple but powerful shell script called todo.sh, you can interact with todo.txt at the command line for quick and easy, Unix-y access.","Categories
Terminals"
"A web scraping system aiming to simplify data extraction from the web. ferret has a declarative query language that makes it easy to focus on the data that you need to get. ferret has the ability to scrape JS rendered pages, handle all page events, and emulate user interactions. the ferret was designed as a library from the ground up. it can be easily embedded into any Go application. ferret helps you to focus on the data you need using an easy-to-learn declarative language. ferret uses Chrome/Chromium via Chrome Devtools Protocol to handle dynamically rendered web pages. ferret is extremely extensible, and creating custom functions and types is super easy. ferret allows users to focus on the data. It abstracts away the technical details and complexity of underlying technologies using its own declarative language. It is extremely portable, extensible, and fast.A web scraping system aiming to simplify data extraction from the web. ferret has a declarative query language that makes it easy to focus on the data that you need to get. ferret has the ability to scrape JS rendered pages, handle all page events, and emulate user interactions. the ferret was designed as a library from the ground up. it can be easily embedded into any Go application. ferret helps you to focus on the data you need using an easy-to-learn declarative language. ferret uses Chrome/Chromium via Chrome Devtools Protocol to handle dynamically rendered web pages. ferret is extremely extensible, and creating custom functions and types is super easy. ferret allows users to focus on the data. It abstracts away the technical details and complexity of underlying technologies using its own declarative language. It is extremely portable, extensible, and fast.","Categories
Terminals"
"I’d like to introduce reviewdog! An automated code review tool working with any lint tools and supports local run as well. “reviewdog” provides a way to post review comments to code hosting services, such as GitHub, automatically by integrating with any linter tools with ease. It uses any output of lint tools, with translation if required, and posts them as a comment if the file and line are in diff of patches to review. reviewdog also supports running in a local environment to filter the output of lint tools by diff. We can use various linters and static code analysis tools to detect such problems in local machines, editors, CI services. However, here is the problem. Static analysis tools may report false-positive results. Reporting false-positive results itself is ok, but due to the false-positive results we cannot make build fail and it becomes difficult for us to find true positive results from messed up analysis results.I’d like to introduce reviewdog! An automated code review tool working with any lint tools and supports local run as well. “reviewdog” provides a way to post review comments to code hosting services, such as GitHub, automatically by integrating with any linter tools with ease. It uses any output of lint tools, with translation if required, and posts them as a comment if the file and line are in diff of patches to review. reviewdog also supports running in a local environment to filter the output of lint tools by diff. We can use various linters and static code analysis tools to detect such problems in local machines, editors, CI services. However, here is the problem. Static analysis tools may report false-positive results. Reporting false-positive results itself is ok, but due to the false-positive results we cannot make build fail and it becomes difficult for us to find true positive results from messed up analysis results.","Categories
Terminals, Source Code Analysis, Code Review"
"buku is a powerful bookmark manager and a personal textual mini-web. For those who prefer the GUI, bukuserver exposes a browsable front-end on a local web host server. When I started writing it, I couldn't find a flexible command-line solution with a private, portable, merge-able database along with seamless GUI integration. Hence, buku. buku can import bookmarks from the browser(s) or fetch the title, tags and description of a URL from the web. Use your favorite editor to add, compose and update bookmarks. Search bookmarks instantly with multiple search options, including regex and a deep scan mode (handy with URLs). It can look up broken links on Wayback Machine. There's an Easter Egg to revisit random bookmarks. There's no tracking, hidden history, obsolete records, usage analytics or homing. To get started right away, jump to the Quickstart section. buku has one of the best documentation around. The man page comes with examples.buku is a powerful bookmark manager and a personal textual mini-web. For those who prefer the GUI, bukuserver exposes a browsable front-end on a local web host server. When I started writing it, I couldn't find a flexible command-line solution with a private, portable, merge-able database along with seamless GUI integration. Hence, buku. buku can import bookmarks from the browser(s) or fetch the title, tags and description of a URL from the web. Use your favorite editor to add, compose and update bookmarks. Search bookmarks instantly with multiple search options, including regex and a deep scan mode (handy with URLs). It can look up broken links on Wayback Machine. There's an Easter Egg to revisit random bookmarks. There's no tracking, hidden history, obsolete records, usage analytics or homing. To get started right away, jump to the Quickstart section. buku has one of the best documentation around. The man page comes with examples.","Categories
Text Editors, Terminals"
"Generic CLI tool to automate versioning and package publishing-related tasks. Use release-it for version management and publish to anywhere with its versatile configuration, a powerful plugin system, and hooks to execute any command you need to test, build, and/or publish your project. The latest major version is v15, supporting Node.js 14 and up (as Node.js v12 is EOL). Use release-it v14 for environments running Node.js v10 and v12. Although release-it is a generic release tool, installation requires npm. To use release-it, a package.json file is not required. The recommended way to install release-it also adds basic configuration. You will be prompted to select the new version, and more prompts will follow based on your setup. Run release-it from the root of the project to prevent potential issues. Out of the box, release-it has sane defaults, and plenty of options to configure it.Generic CLI tool to automate versioning and package publishing-related tasks. Use release-it for version management and publish to anywhere with its versatile configuration, a powerful plugin system, and hooks to execute any command you need to test, build, and/or publish your project. The latest major version is v15, supporting Node.js 14 and up (as Node.js v12 is EOL). Use release-it v14 for environments running Node.js v10 and v12. Although release-it is a generic release tool, installation requires npm. To use release-it, a package.json file is not required. The recommended way to install release-it also adds basic configuration. You will be prompted to select the new version, and more prompts will follow based on your setup. Run release-it from the root of the project to prevent potential issues. Out of the box, release-it has sane defaults, and plenty of options to configure it.","Categories
Terminals, Package Managers"
"Onefetch is a command-line Git information tool written in Rust that displays project information and code statistics for a local Git repository directly on your terminal. The tool is completely offline, no network access is required. By default, the repo's information is displayed alongside the dominant language's logo, but you can further configure onefetch to instead use an image, on supported terminals, text input, or nothing at all. It automatically detects open source licenses from texts and provides the user with valuable information like code distribution, pending changes, number of dependencies (by package manager), top contributors (by number of commits), the size on disk, creation date, LOC (lines of code), etc. Onefetch can be configured via command-line flags to display exactly what you want, the way you want it to: you can customize ASCII/Text formatting, disable info lines, ignore files & directories, and output in multiple formats (JSON, Yaml), etc.Onefetch is a command-line Git information tool written in Rust that displays project information and code statistics for a local Git repository directly on your terminal. The tool is completely offline, no network access is required. By default, the repo's information is displayed alongside the dominant language's logo, but you can further configure onefetch to instead use an image, on supported terminals, text input, or nothing at all. It automatically detects open source licenses from texts and provides the user with valuable information like code distribution, pending changes, number of dependencies (by package manager), top contributors (by number of commits), the size on disk, creation date, LOC (lines of code), etc. Onefetch can be configured via command-line flags to display exactly what you want, the way you want it to: you can customize ASCII/Text formatting, disable info lines, ignore files & directories, and output in multiple formats (JSON, Yaml), etc.","Categories
Terminals, Git"
"grex is a library as well as a command-line utility that is meant to simplify the often complicated and tedious task of creating regular expressions. It does so by automatically generating a single regular expression from user-provided test cases. The resulting expression is guaranteed to match the test cases which it was generated from. This project has started as a Rust port of the JavaScript tool regexgen written by Devon Govett. Although a lot of further useful features could be added to it, its development was apparently ceased several years ago. The plan is now to add these new features to grex as Rust really shines when it comes to command-line tools. grex offers all features that regexgen provides, and more. The philosophy of this project is to generate the most specific regular expression possible by default that exactly matches the given input only and nothing else. With the use of command-line flags (in the CLI tool) or preprocessing methods (in the library).grex is a library as well as a command-line utility that is meant to simplify the often complicated and tedious task of creating regular expressions. It does so by automatically generating a single regular expression from user-provided test cases. The resulting expression is guaranteed to match the test cases which it was generated from. This project has started as a Rust port of the JavaScript tool regexgen written by Devon Govett. Although a lot of further useful features could be added to it, its development was apparently ceased several years ago. The plan is now to add these new features to grex as Rust really shines when it comes to command-line tools. grex offers all features that regexgen provides, and more. The philosophy of this project is to generate the most specific regular expression possible by default that exactly matches the given input only and nothing else. With the use of command-line flags (in the CLI tool) or preprocessing methods (in the library).","Categories
Terminals, Command Line Tools"
"Plop is a little tool that saves you time and helps your team build new files with consistency. Plop generates code when you want, how you want, and can be changed whenever you want. Simple to Learn
Creating a good boilerplate shouldn't require a master's degree. Read over the one-page getting started guide and you'll be well on your way. Once plop is setup, anyone on the team can simply type plop into the terminal. The right way to create your code, is now the easiest way. Allow your boilerplate to grow and change with the codebase it is generating. Adding new generators can be as simple as writing a template. Keep everyone up to date as they build. When your generators live in your codebase, everyone gets the latest version by simply pulling from the repo. Plop uses the popular handlebars template engine to generate your files. Many developers are already familiar with the handlebars syntax.Plop is a little tool that saves you time and helps your team build new files with consistency. Plop generates code when you want, how you want, and can be changed whenever you want. Simple to Learn
Creating a good boilerplate shouldn't require a master's degree. Read over the one-page getting started guide and you'll be well on your way. Once plop is setup, anyone on the team can simply type plop into the terminal. The right way to create your code, is now the easiest way. Allow your boilerplate to grow and change with the codebase it is generating. Adding new generators can be as simple as writing a template. Keep everyone up to date as they build. When your generators live in your codebase, everyone gets the latest version by simply pulling from the repo. Plop uses the popular handlebars template engine to generate your files. Many developers are already familiar with the handlebars syntax.","Categories
Terminals"
"Collect your thoughts and notes without leaving the command line. jrnl has a natural-language interface so you don't have to remember cryptic shortcuts when you're writing down your thoughts. Your journals are stored in plain-text files that will still be readable in 50 years when all your fancy iPad apps will have gone the way of the Dodo. Encrypt your journals with industry-strength AES encryption. The NSA won't be able to read your dirty secrets. Sync your journals with Dropbox and capture your thoughts where ever you are. jrnl is made by a bunch of really friendly and remarkably attractive people. Maybe even you? Effortlessly access several journals for all parts of your life. You can use it to easily create, search, and view journal entries. Journals are stored as human-readable plain text, and can also be encrypted using AES encryption.Collect your thoughts and notes without leaving the command line. jrnl has a natural-language interface so you don't have to remember cryptic shortcuts when you're writing down your thoughts. Your journals are stored in plain-text files that will still be readable in 50 years when all your fancy iPad apps will have gone the way of the Dodo. Encrypt your journals with industry-strength AES encryption. The NSA won't be able to read your dirty secrets. Sync your journals with Dropbox and capture your thoughts where ever you are. jrnl is made by a bunch of really friendly and remarkably attractive people. Maybe even you? Effortlessly access several journals for all parts of your life. You can use it to easily create, search, and view journal entries. Journals are stored as human-readable plain text, and can also be encrypted using AES encryption.","Categories
Terminals, Communications"
"VisiData is an interactive multitool for tabular data. It combines the clarity of a spreadsheet, the efficiency of the terminal, and the power of Python, into a lightweight utility that can handle millions of rows with ease. A terminal interface for exploring and arranging tabular data. VisiData supports tsv, CSV, SQLite, JSON, xlsx (Excel), hdf5, and many other formats. Requires Linux, OS/X, or Windows (with WSL). Hundreds of other commands and options are also available; see the documentation. Code in the stable branch of this repository, including the main vd application, loaders, and plugins, is available for use and redistribution under GPLv3. VisiData is a free, open-source tool that lets you quickly open, explore, summarize, and analyze datasets in your computer’s terminal. VisiData works with CSV files, Excel spreadsheets, SQL databases, and many other data sources.VisiData is an interactive multitool for tabular data. It combines the clarity of a spreadsheet, the efficiency of the terminal, and the power of Python, into a lightweight utility that can handle millions of rows with ease. A terminal interface for exploring and arranging tabular data. VisiData supports tsv, CSV, SQLite, JSON, xlsx (Excel), hdf5, and many other formats. Requires Linux, OS/X, or Windows (with WSL). Hundreds of other commands and options are also available; see the documentation. Code in the stable branch of this repository, including the main vd application, loaders, and plugins, is available for use and redistribution under GPLv3. VisiData is a free, open-source tool that lets you quickly open, explore, summarize, and analyze datasets in your computer’s terminal. VisiData works with CSV files, Excel spreadsheets, SQL databases, and many other data sources.","Categories
Terminals, Spreadsheet"
"Legit is a complementary command-line interface for Git, optimized for workflow simplicity. It is heavily inspired by GitHub for Mac. We haven't re-created the git CLI tool in a GUI, we've created something different. We've created a tool that makes Git more accessible. Little things like auto-stashing when you switch branches will confuse git veterans, but it will make Git much easier to grok for newcomers because of the assumptions it makes about your Git workflow. Switches to specified branch. Defaults to the current branch. Automatically stashes and unstashes any changes. Synchronizes the given branch. Defaults to current branch. Stash, Fetch, Auto-Merge/Rebase, Push, and Unstash.Legit is a complementary command-line interface for Git, optimized for workflow simplicity. It is heavily inspired by GitHub for Mac. We haven't re-created the git CLI tool in a GUI, we've created something different. We've created a tool that makes Git more accessible. Little things like auto-stashing when you switch branches will confuse git veterans, but it will make Git much easier to grok for newcomers because of the assumptions it makes about your Git workflow. Switches to specified branch. Defaults to the current branch. Automatically stashes and unstashes any changes. Synchronizes the given branch. Defaults to current branch. Stash, Fetch, Auto-Merge/Rebase, Push, and Unstash.","Categories
Terminals, Git"
"Easily find and remove old and heavy node_modules folders. Installation through npm is simple. Make sure you have installed node and npm and then run npm i -g npkill. You can also use it without installing it by running npx npkill. Simply go from the terminal to the directory from which you want to search and type npkill. This will start the search and will show the node_modules directories next to their size. You can use the cursor arrows to move up or down. Pressing the Space key will erase the directory in which the cursor is located, freeing up that valuable space. This tool allows you to list any node_modules directories in your system, as well as the space they take up. You can then select which ones you want to erase to free up space. Yay! Say goodbye to lengthy commands. Using npkill is as simple as reading a list of your node_modules, and pressing Del to get rid of them. Could it be any easier?Easily find and remove old and heavy node_modules folders. Installation through npm is simple. Make sure you have installed node and npm and then run npm i -g npkill. You can also use it without installing it by running npx npkill. Simply go from the terminal to the directory from which you want to search and type npkill. This will start the search and will show the node_modules directories next to their size. You can use the cursor arrows to move up or down. Pressing the Space key will erase the directory in which the cursor is located, freeing up that valuable space. This tool allows you to list any node_modules directories in your system, as well as the space they take up. You can then select which ones you want to erase to free up space. Yay! Say goodbye to lengthy commands. Using npkill is as simple as reading a list of your node_modules, and pressing Del to get rid of them. Could it be any easier?","Categories
Terminals"
"Prevent Kubernetes misconfigurations from reaching production (again)! The CLI integration provides a policy enforcement solution to run automatic checks for rule violations. Datree is a CLI tool that supports Kubernetes admins in their roles by preventing developers from making errors in Kubernetes configurations that can cause clusters to fail in production. Our CLI tool is open source, enabling it to be supported by the Kubernetes community. It’s far more effective than manual processes, such as sending an email to a slew of developers, begging them to set various limits, which likely falls on deaf ears because developers are already overwhelmed. The CLI integration provides a policy enforcement solution for Kubernetes to run automatic checks on every code change for rule violations and misconfigurations. When rule violations are found, Datree produces an alert that guides the developer to fix the issue inside the CI process.Prevent Kubernetes misconfigurations from reaching production (again)! The CLI integration provides a policy enforcement solution to run automatic checks for rule violations. Datree is a CLI tool that supports Kubernetes admins in their roles by preventing developers from making errors in Kubernetes configurations that can cause clusters to fail in production. Our CLI tool is open source, enabling it to be supported by the Kubernetes community. It’s far more effective than manual processes, such as sending an email to a slew of developers, begging them to set various limits, which likely falls on deaf ears because developers are already overwhelmed. The CLI integration provides a policy enforcement solution for Kubernetes to run automatic checks on every code change for rule violations and misconfigurations. When rule violations are found, Datree produces an alert that guides the developer to fix the issue inside the CI process.","Categories
Terminals"
bit is an experimental modernized git CLI built on top of git that provides happy defaults and other niceties. Command and flag suggestions to help you navigate the plethora of options git provides you. Autocompletion for files and branch names when using bit add or bit checkout. Automatic fetch and branch fast-forwarding reduce the likelihood of merge conflicts. Suggestions work with git aliases. New commands like bit sync vastly simplify your workflow. Commands from git-extras such as bit release & bit info. Fully compatible with git allowing you to fallback to git if need be. Get insight into how bit works using bit --debug.bit is an experimental modernized git CLI built on top of git that provides happy defaults and other niceties. Command and flag suggestions to help you navigate the plethora of options git provides you. Autocompletion for files and branch names when using bit add or bit checkout. Automatic fetch and branch fast-forwarding reduce the likelihood of merge conflicts. Suggestions work with git aliases. New commands like bit sync vastly simplify your workflow. Commands from git-extras such as bit release & bit info. Fully compatible with git allowing you to fallback to git if need be. Get insight into how bit works using bit --debug.,"Categories
Terminals, Git"
"googler is a power tool to Google (web, news, videos and site search) from the command line. It shows the title, URL and abstract for each result, which can be directly opened in a browser from the terminal. Results are fetched in pages (with page navigation). Supports sequential searches in a single googler instance. googler was initially written to cater to headless servers without X. You can integrate it with a text-based browser. However, it has grown into a very handy and flexible utility that delivers much more. For example, fetch any number of results or start anywhere, limit the search by any duration, define aliases to google search any number of websites, and switch domains easily, all of this in a very clean interface without ads or stray URLs. The shell completion scripts make sure you don't need to remember any options.googler is a power tool to Google (web, news, videos and site search) from the command line. It shows the title, URL and abstract for each result, which can be directly opened in a browser from the terminal. Results are fetched in pages (with page navigation). Supports sequential searches in a single googler instance. googler was initially written to cater to headless servers without X. You can integrate it with a text-based browser. However, it has grown into a very handy and flexible utility that delivers much more. For example, fetch any number of results or start anywhere, limit the search by any duration, define aliases to google search any number of websites, and switch domains easily, all of this in a very clean interface without ads or stray URLs. The shell completion scripts make sure you don't need to remember any options.","Categories
Terminals"
"Xonsh is a Python-powered, cross-platform, Unix-gazing shell language and commands prompt. The language is a superset of Python 3.6+ with additional shell primitives that you are used to from Bash and IPython. It works on all major systems including Linux, OSX, and Windows. Xonsh is meant for the daily use of experts and novices. The xonsh shell lets you easily mix Python and shell commands in a powerful and simplified approach to the command line. The xonsh language has shell primitives that you are used to from Bash. The xonsh language is a superset of Python 3.6+ and you can run Python code and import modules. With xonsh you can combine Python with shell commands. Prepare environment variables and arguments in Python and use them in shell commands. The language is a superset of Python 3.6+ with additional shell primitives that you are used to from Bash and IPython.Xonsh is a Python-powered, cross-platform, Unix-gazing shell language and commands prompt. The language is a superset of Python 3.6+ with additional shell primitives that you are used to from Bash and IPython. It works on all major systems including Linux, OSX, and Windows. Xonsh is meant for the daily use of experts and novices. The xonsh shell lets you easily mix Python and shell commands in a powerful and simplified approach to the command line. The xonsh language has shell primitives that you are used to from Bash. The xonsh language is a superset of Python 3.6+ and you can run Python code and import modules. With xonsh you can combine Python with shell commands. Prepare environment variables and arguments in Python and use them in shell commands. The language is a superset of Python 3.6+ with additional shell primitives that you are used to from Bash and IPython.","Categories
Terminals"
"Tokei is a program that displays statistics about your code. Tokei will show the number of files, total lines within those files, and code, comments, and blanks grouped by language. Tokei is very fast and is able to count millions of lines of code in seconds. Check out the 12.0.0 release to see how Tokei's speed compares to others. Tokei is accurate, Tokei correctly handles multi-line comments, and nested comments, and not count comments that are in strings. Providing accurate code statistics. Tokei has a huge range of languages, supporting over 150 languages, and their various extensions. Tokei can output in multiple formats(CBOR, JSON, YAML) allowing Tokei's output to be easily stored, and reused. These can also be reused in tokei combining a previous run's statistics with another set. Tokei is available on Mac, Linux, and Windows. See installation instructions for how to get Tokei on your platform.Tokei is a program that displays statistics about your code. Tokei will show the number of files, total lines within those files, and code, comments, and blanks grouped by language. Tokei is very fast and is able to count millions of lines of code in seconds. Check out the 12.0.0 release to see how Tokei's speed compares to others. Tokei is accurate, Tokei correctly handles multi-line comments, and nested comments, and not count comments that are in strings. Providing accurate code statistics. Tokei has a huge range of languages, supporting over 150 languages, and their various extensions. Tokei can output in multiple formats(CBOR, JSON, YAML) allowing Tokei's output to be easily stored, and reused. These can also be reused in tokei combining a previous run's statistics with another set. Tokei is available on Mac, Linux, and Windows. See installation instructions for how to get Tokei on your platform.","Categories
Terminals"
"Automate versioning and CHANGELOG generation, with semver.org and conventionalcommits. A utility for versioning using semver and CHANGELOG generation powered by Conventional Commits. This has the benefit of making your repo/package more portable so that other developers can cut releases without having to globally install standard-version on their machines. Any of the command line parameters accepted by standard-version can instead be provided via configuration. Please refer to the conventional-changelog-config-spec for details on available configuration options. As long as your git commit messages are conventional and accurate, you no longer need to specify the semver type - and you get CHANGELOG generation for free! If you use git hooks, like pre-commit, to test your code before committing, you can prevent hooks from being verified during the commit step by passing the --no-verify option.Automate versioning and CHANGELOG generation, with semver.org and conventionalcommits. A utility for versioning using semver and CHANGELOG generation powered by Conventional Commits. This has the benefit of making your repo/package more portable so that other developers can cut releases without having to globally install standard-version on their machines. Any of the command line parameters accepted by standard-version can instead be provided via configuration. Please refer to the conventional-changelog-config-spec for details on available configuration options. As long as your git commit messages are conventional and accurate, you no longer need to specify the semver type - and you get CHANGELOG generation for free! If you use git hooks, like pre-commit, to test your code before committing, you can prevent hooks from being verified during the commit step by passing the --no-verify option.","Categories
Terminals"
"oclif is an open-source framework for building a command-line interface (CLI) in Node.js. Create CLIs with a few flags or advanced CLIs that have subcommands. oclif makes it easy for you to build CLIs for your company, service, or your own development needs. Scaffold a fully functional CLI to get started quickly. oclif packages our years of experience into out-of-the-box functionality for argument parsing, command testing, and auto-documentation of CLI features. oclif is open source and free to use or modify. We think you’ll love it too and you can also help make it better. You or your users can easily extend your CLI functionality to meet customer needs using plugins. Plugins are modular and shareable, encouraging reuse. oclif is actively used to build the Heroku and Salesforce CLIs, powering millions of interactions for developers every day. With oclif you can build command-line tools for your business, open-source project, or your own development workflow.oclif is an open-source framework for building a command-line interface (CLI) in Node.js. Create CLIs with a few flags or advanced CLIs that have subcommands. oclif makes it easy for you to build CLIs for your company, service, or your own development needs. Scaffold a fully functional CLI to get started quickly. oclif packages our years of experience into out-of-the-box functionality for argument parsing, command testing, and auto-documentation of CLI features. oclif is open source and free to use or modify. We think you’ll love it too and you can also help make it better. You or your users can easily extend your CLI functionality to meet customer needs using plugins. Plugins are modular and shareable, encouraging reuse. oclif is actively used to build the Heroku and Salesforce CLIs, powering millions of interactions for developers every day. With oclif you can build command-line tools for your business, open-source project, or your own development workflow.","Categories
Terminals, Frameworks"
"Streamlink is a command-line utility that pipes video streams from various services into a video player, such as VLC. The main purpose of Streamlink is to avoid resource-heavy and unoptimized websites, while still allowing the user to enjoy various streamed content. There is also an API available for developers who want access to the stream data. Streamlink is built upon a plugin system that allows support for new services to be easily added. Most of the big streaming services are supported. Streamlink is made up of two parts, a cli and a library API. See their respective sections for more information on how to use them. The default behavior of Streamlink is to playback streams in the VLC player. Please note that by using this application you're bypassing ads run by sites such as Twitch.tv. Please consider donating or paying for subscription services when they are available for the content you consume and enjoy.Streamlink is a command-line utility that pipes video streams from various services into a video player, such as VLC. The main purpose of Streamlink is to avoid resource-heavy and unoptimized websites, while still allowing the user to enjoy various streamed content. There is also an API available for developers who want access to the stream data. Streamlink is built upon a plugin system that allows support for new services to be easily added. Most of the big streaming services are supported. Streamlink is made up of two parts, a cli and a library API. See their respective sections for more information on how to use them. The default behavior of Streamlink is to playback streams in the VLC player. Please note that by using this application you're bypassing ads run by sites such as Twitch.tv. Please consider donating or paying for subscription services when they are available for the content you consume and enjoy.","Categories
Terminals, Streaming, Multimedia"
"ASF is a C# application with the primary purpose of farming Steam cards from multiple accounts simultaneously. Unlike Idle Master which works only for one account at a given time, while requiring Steam client running in the background and launching additional processes imitating ""game-playing"" status, ASF doesn't require any Steam client running in the background, doesn't launch any additional processes and is made to handle unlimited Steam accounts at once. In addition to that, it's meant to be run on servers or other desktop-less machines and features full cross-OS support, which makes it possible to launch on any operating system with .NET Core runtime, such as Windows, Linux, and macOS. ASF is possible thanks to the gigantic amount of work done in the marvelous SteamKit2 library. Today, ASF is one of the most versatile Steam power tools, allowing you to make use of many features that were implemented over time.ASF is a C# application with the primary purpose of farming Steam cards from multiple accounts simultaneously. Unlike Idle Master which works only for one account at a given time, while requiring Steam client running in the background and launching additional processes imitating ""game-playing"" status, ASF doesn't require any Steam client running in the background, doesn't launch any additional processes and is made to handle unlimited Steam accounts at once. In addition to that, it's meant to be run on servers or other desktop-less machines and features full cross-OS support, which makes it possible to launch on any operating system with .NET Core runtime, such as Windows, Linux, and macOS. ASF is possible thanks to the gigantic amount of work done in the marvelous SteamKit2 library. Today, ASF is one of the most versatile Steam power tools, allowing you to make use of many features that were implemented over time.","Categories
Terminals, Games/Entertainment"
"By utilizing a simple and minimal usage syntax, that requires a flat learning curve, taskbook enables you to effectively manage your tasks and notes across multiple boards from within your terminal. All data are written atomically to the storage in order to prevent corruption and are never shared with anyone or anything. Deleted items are automatically archived and can be inspected or restored at any moment. You can now support the development process through GitHub Sponsors.By utilizing a simple and minimal usage syntax, that requires a flat learning curve, taskbook enables you to effectively manage your tasks and notes across multiple boards from within your terminal. All data are written atomically to the storage in order to prevent corruption and are never shared with anyone or anything. Deleted items are automatically archived and can be inspected or restored at any moment. You can now support the development process through GitHub Sponsors.","Categories
Terminals"
"Hackable and configurable to the core, signale can be used for logging purposes, status reporting, as well as for handling the output rendering process of other node modules and applications. You can now support the development process through GitHub Sponsors. To create a custom logger define an options object yielding a types field with the logger data and pass it as argument to a new signale instance. By utilizing the secrets option, secrets and other sensitive information can be filtered out from the body as well as the metadata, i.e. scope names etc, of to-be-logged messages. The option is part of the configuration object passed to a Signale instance on its initialization, and is of type Array<String|Number>. The array can hold multiple secrets, all of which are removed, if present, from the to-be-logged messages and are replaced with the default '[secure]' string.Hackable and configurable to the core, signale can be used for logging purposes, status reporting, as well as for handling the output rendering process of other node modules and applications. You can now support the development process through GitHub Sponsors. To create a custom logger define an options object yielding a types field with the logger data and pass it as argument to a new signale instance. By utilizing the secrets option, secrets and other sensitive information can be filtered out from the body as well as the metadata, i.e. scope names etc, of to-be-logged messages. The option is part of the configuration object passed to a Signale instance on its initialization, and is of type Array<String|Number>. The array can hold multiple secrets, all of which are removed, if present, from the to-be-logged messages and are replaced with the default '[secure]' string.","Categories
Terminals, Logging"
"Glow is a terminal-based markdown reader designed from the ground up to bring out the beauty and power of the CLI. Use it to discover markdown files, read documentation directly on the command line and stash markdown files to your own private collection so you can read them anywhere. Glow will find local markdown files in subdirectories or a local Git repository. By the way, all data stashed is encrypted end-to-end: only you can decrypt it. Simply run glow without arguments to start the textual user interface and browse local and stashed markdowns. Glow will find local markdown files in the current directory and below or if you’re in a Git repository, Glow will search the repo. Markdown files can be read with Glow's high-performance pager. Most of the keystrokes you know from less are the same, but you can press ? to list the hotkeys. Glow works with the Charm Cloud to allow you to store any markdown files in your own private collection.Glow is a terminal-based markdown reader designed from the ground up to bring out the beauty and power of the CLI. Use it to discover markdown files, read documentation directly on the command line and stash markdown files to your own private collection so you can read them anywhere. Glow will find local markdown files in subdirectories or a local Git repository. By the way, all data stashed is encrypted end-to-end: only you can decrypt it. Simply run glow without arguments to start the textual user interface and browse local and stashed markdowns. Glow will find local markdown files in the current directory and below or if you’re in a Git repository, Glow will search the repo. Markdown files can be read with Glow's high-performance pager. Most of the keystrokes you know from less are the same, but you can press ? to list the hotkeys. Glow works with the Charm Cloud to allow you to store any markdown files in your own private collection.","Categories
Terminals"
"termtosvg is a Unix terminal recorder written in Python that renders your command line sessions as standalone SVG animations. Produce lightweight and clean-looking animations embeddable on a project page. Custom color themes, terminal UI, and animation controls via SVG templates. Compatible with asciinema recording format. termtosvg is compatible with Linux, macOS and BSD OSes, requires Python >= 3.5 and can be installed using pip.termtosvg is a Unix terminal recorder written in Python that renders your command line sessions as standalone SVG animations. Produce lightweight and clean-looking animations embeddable on a project page. Custom color themes, terminal UI, and animation controls via SVG templates. Compatible with asciinema recording format. termtosvg is compatible with Linux, macOS and BSD OSes, requires Python >= 3.5 and can be installed using pip.","Categories
Terminals, Audio Recording"
"readme-md-generator is able to read your environment (package.json, git config...) to suggest you default answers during the README.md creation process. Make sure you have npx installed (npx is shipped by default since npm 5.2.0).readme-md-generator is able to read your environment (package.json, git config...) to suggest you default answers during the README.md creation process. Make sure you have npx installed (npx is shipped by default since npm 5.2.0).","Categories
Terminals, Documentation"
"Nexe is a command-line utility that compiles your Node.js application into a single executable file. By default nexe will attempt to download a pre-built executable. These are listed on the releases page. The exact version you want may be unavailable or you may want to customize what is built. See help for a list of options available when passing the build option. You will also need to ensure your environment is set up to build node. Note, the python binary in your path should be an acceptable version of python 3; you can create a symlink or use the python parameter. In order to use native modules, the native binaries must be shipped alongside the binary generated by nexe. Create a single executable out of your node.js apps,Nexe is a command-line utility that compiles your Node.js application into a single executable file. By default nexe will attempt to download a pre-built executable. These are listed on the releases page. The exact version you want may be unavailable or you may want to customize what is built. See help for a list of options available when passing the build option. You will also need to ensure your environment is set up to build node. Note, the python binary in your path should be an acceptable version of python 3; you can create a symlink or use the python parameter. In order to use native modules, the native binaries must be shipped alongside the binary generated by nexe. Create a single executable out of your node.js apps,","Categories
Terminals"
"A Spotify client for the terminal written in Rust. The binary executable is spt. For those on Arch Linux, you can find the package on AUR. spotify-tui needs to connect to Spotify’s API in order to find music by name, play tracks etc. After accepting the permissions, you'll be redirected to localhost. If all goes well, the redirect URL will be parsed automatically and now you're done. If the local webserver fails for some reason you'll be redirected to a blank webpage that might say something like ""Connection Refused"" since no server is running. Regardless, copy the URL and paste it into the prompt in the terminal. Running spt with no arguments will bring up the UI. Press ? to bring up a help menu that shows currently implemented key events and their actions. There is also a CLI that is able to do most of the stuff the UI does.A Spotify client for the terminal written in Rust. The binary executable is spt. For those on Arch Linux, you can find the package on AUR. spotify-tui needs to connect to Spotify’s API in order to find music by name, play tracks etc. After accepting the permissions, you'll be redirected to localhost. If all goes well, the redirect URL will be parsed automatically and now you're done. If the local webserver fails for some reason you'll be redirected to a blank webpage that might say something like ""Connection Refused"" since no server is running. Regardless, copy the URL and paste it into the prompt in the terminal. Running spt with no arguments will bring up the UI. Press ? to bring up a help menu that shows currently implemented key events and their actions. There is also a CLI that is able to do most of the stuff the UI does.","Categories
Terminals, Sound/Audio"
"Manage multiple runtime versions with a single CLI tool. Manage each of your project runtimes with a single CLI tool and command interface. asdf is a CLI tool that can manage multiple language runtime versions on a per-project basis. It is like gvm, nvm, rbenv & pyenv (and more) all in one! Simply install your language's plugin! Large ecosystem of existing runtimes & tools. Simple API to add support for new tools as you need! Support for existing config files .nvmrc, .node-versions, .ruby-version for smooth migration! .tool-versions to manage all your tools, runtimes, and their versions in a single, sharable place. Supports Bash, ZSH, Fish & Elvish with completions available. Provides a GitHub Action to install and utilize your .tool-versions in your CI/CD workflows.Manage multiple runtime versions with a single CLI tool. Manage each of your project runtimes with a single CLI tool and command interface. asdf is a CLI tool that can manage multiple language runtime versions on a per-project basis. It is like gvm, nvm, rbenv & pyenv (and more) all in one! Simply install your language's plugin! Large ecosystem of existing runtimes & tools. Simple API to add support for new tools as you need! Support for existing config files .nvmrc, .node-versions, .ruby-version for smooth migration! .tool-versions to manage all your tools, runtimes, and their versions in a single, sharable place. Supports Bash, ZSH, Fish & Elvish with completions available. Provides a GitHub Action to install and utilize your .tool-versions in your CI/CD workflows.","Categories
Terminals, Git"
"cli is a simple, fast, and fun package for building command-line apps in Go. The goal is to enable developers to write fast and distributable command-line applications in an expressive way. Usage documentation exists for each major version. Don't know what version you're on? You're probably using the version from the main branch, which is currently v2. Using this package requires a working Go environment. Go Modules are required when using this package. Currently, only YAML, JSON, and TOML files are supported but developers can add support for other input sources by implementing the altsrc.InputSourceContext for their given sources.cli is a simple, fast, and fun package for building command-line apps in Go. The goal is to enable developers to write fast and distributable command-line applications in an expressive way. Usage documentation exists for each major version. Don't know what version you're on? You're probably using the version from the main branch, which is currently v2. Using this package requires a working Go environment. Go Modules are required when using this package. Currently, only YAML, JSON, and TOML files are supported but developers can add support for other input sources by implementing the altsrc.InputSourceContext for their given sources.","Categories
Terminals, Software Development"
"Chalk 5 is ESM. If you want to use Chalk with TypeScript or a build tool, you will probably want to use Chalk 4 for now. Chalk comes with an easy to use composable API where you just chain and nest the styles you want. Chain styles and call the last one as a method with a string argument. Order doesn't matter, and later styles take precedent in case of a conflict. This simply means that chalk.red.yellow.green is equivalent to chalk.green. Color support is automatically detected, but you can override it by setting the level property. You should however only do this in your own code as it applies globally to all Chalk consumers. Detect whether the terminal supports color. Used internally and handled for you, but exposed for convenience. chalkStderr contains a separate instance configured with color support detected for stderr stream instead of stdout. Override rules from supportsColor apply to this too. supportsColorStderr is exposed for convenience.Chalk 5 is ESM. If you want to use Chalk with TypeScript or a build tool, you will probably want to use Chalk 4 for now. Chalk comes with an easy to use composable API where you just chain and nest the styles you want. Chain styles and call the last one as a method with a string argument. Order doesn't matter, and later styles take precedent in case of a conflict. This simply means that chalk.red.yellow.green is equivalent to chalk.green. Color support is automatically detected, but you can override it by setting the level property. You should however only do this in your own code as it applies globally to all Chalk consumers. Detect whether the terminal supports color. Used internally and handled for you, but exposed for convenience. chalkStderr contains a separate instance configured with color support detected for stderr stream instead of stdout. Override rules from supportsColor apply to this too. supportsColorStderr is exposed for convenience.","Categories
Terminals, Design"
"You've heard it before, git is powerful, but what good is that power when everything is so damn hard to do? Interactive rebasing requires you to edit a goddamn TODO file in your editor? Are you kidding me? To stage part of a file you need to use a command-line program to step through each hunk and if a hunk can't be split down any further but contains code you don't want to stage, you have to edit an arcane patch file by hand? Are you KIDDING me?! Sometimes you get asked to stash your changes when switching branches only to realize that after you switch and unstash that there weren't even any conflicts and it would have been fine to just check out the branch directly? If you're a mere mortal like me and you're tired of hearing how powerful git is when in your daily life it's a powerful pain in your ass, lazygit might be for you.You've heard it before, git is powerful, but what good is that power when everything is so damn hard to do? Interactive rebasing requires you to edit a goddamn TODO file in your editor? Are you kidding me? To stage part of a file you need to use a command-line program to step through each hunk and if a hunk can't be split down any further but contains code you don't want to stage, you have to edit an arcane patch file by hand? Are you KIDDING me?! Sometimes you get asked to stash your changes when switching branches only to realize that after you switch and unstash that there weren't even any conflicts and it would have been fine to just check out the branch directly? If you're a mere mortal like me and you're tired of hearing how powerful git is when in your daily life it's a powerful pain in your ass, lazygit might be for you.","Categories
Terminals, User Interface (UI), Git"
"Work with issues, pull requests, checks, releases and more. Call the GitHub API to script almost any action, and set a custom alias for any command. Connect to GitHub Enterprise Server in addition to GitHub. Allow contributors to easily notify you of changes they've pushed to a repository, with access limited to the contributors you specify. Easily merge changes you accept. Visual Studio Code is backed by high-performance VMs that start in seconds. Get updates on the GitHub activity you've subscribed to. Use the notifications inbox to customize, triage, and manage your updates. Review new code, see visual code changes, and confidently merge code changes with automated status checks. Assign code reviews to make it clear which team members should submit their review for a pull request. Automatically request reviews–or require approval, by selected contributors when changes are made to sections of code that they own.Work with issues, pull requests, checks, releases and more. Call the GitHub API to script almost any action, and set a custom alias for any command. Connect to GitHub Enterprise Server in addition to GitHub. Allow contributors to easily notify you of changes they've pushed to a repository, with access limited to the contributors you specify. Easily merge changes you accept. Visual Studio Code is backed by high-performance VMs that start in seconds. Get updates on the GitHub activity you've subscribed to. Use the notifications inbox to customize, triage, and manage your updates. Review new code, see visual code changes, and confidently merge code changes with automated status checks. Assign code reviews to make it clear which team members should submit their review for a pull request. Automatically request reviews–or require approval, by selected contributors when changes are made to sections of code that they own.","Categories
Terminals, Command Line Tools"
"The CLI for your next Chrome Extension. When you're ready to publish to Chrome Web Store, create a minified bundle with npm run build and then zip the build folder. You don’t need to install or configure Webpack. Webpack comes in preconfigured so that you can focus on the code. Your environment will have everything you need to build a Chrome Extension. Override default page like New Tab, Bookmarks, or History page. Add features to Chrome Developer Tools. Creates an extension for supported languages like JavaScript and TypeScript.The CLI for your next Chrome Extension. When you're ready to publish to Chrome Web Store, create a minified bundle with npm run build and then zip the build folder. You don’t need to install or configure Webpack. Webpack comes in preconfigured so that you can focus on the code. Your environment will have everything you need to build a Chrome Extension. Override default page like New Tab, Bookmarks, or History page. Add features to Chrome Developer Tools. Creates an extension for supported languages like JavaScript and TypeScript.","Categories
Terminals, Browser Extensions and Plugins"
"A free/libre toolchain for easing several low-level tasks like forensics, software reverse engineering, exploiting, and debugging. It is composed by a bunch of libraries (which are extended with plugins) and programs that can be automated with almost any programming language. It is recommended to install it from git, alternatively, you can pick the last release (every 6 weeks) from Github. Batch, Commandline, visual, and panels interactive modes. Embedded webserver with js scripting and WebUI. Assemble and disassemble a large list of CPUs. Runs on Windows and any other UNIX flavor out there. Analyze and emulate code with ESIL. Native debugger and GDB, WINDBG, QNX, and FRIDA. Navigate ASCII-art control flow graphs. Ability to patch binaries, and modify code or data. Search for patterns, magic headers, and function signatures. Easy to extend and modify. Commandline, C API, script with r2pipe in any language.A free/libre toolchain for easing several low-level tasks like forensics, software reverse engineering, exploiting, and debugging. It is composed by a bunch of libraries (which are extended with plugins) and programs that can be automated with almost any programming language. It is recommended to install it from git, alternatively, you can pick the last release (every 6 weeks) from Github. Batch, Commandline, visual, and panels interactive modes. Embedded webserver with js scripting and WebUI. Assemble and disassemble a large list of CPUs. Runs on Windows and any other UNIX flavor out there. Analyze and emulate code with ESIL. Native debugger and GDB, WINDBG, QNX, and FRIDA. Navigate ASCII-art control flow graphs. Ability to patch binaries, and modify code or data. Search for patterns, magic headers, and function signatures. Easy to extend and modify. Commandline, C API, script with r2pipe in any language.","Categories
Terminals, Frameworks"
"Dotdrop is a dotfiles manager that provides efficient ways of managing your precious config files. It is especially powerful when it comes to managing those across different hosts. The main idea of dotdrop is to have the ability to store each dotfile only once and deploy them with different content on different hosts/setups. To achieve this, it uses a templating engine that allows specifying, during the dotfile installation with dotdrop, based on a selected profile, how (with what content) each dotfile will be installed. Each dotfile is stored only once, dotdrop allows to template your config files such that the same dotfile is customized when deployed on the host you’re working on. Different profiles can be defined that allow for fine-grained control over which dotfiles have to be installed on different hosts (home, work, vps, etc). Some hosts/profiles will have all your dotfiles installed while others might just need a subset of the dotfiles.Dotdrop is a dotfiles manager that provides efficient ways of managing your precious config files. It is especially powerful when it comes to managing those across different hosts. The main idea of dotdrop is to have the ability to store each dotfile only once and deploy them with different content on different hosts/setups. To achieve this, it uses a templating engine that allows specifying, during the dotfile installation with dotdrop, based on a selected profile, how (with what content) each dotfile will be installed. Each dotfile is stored only once, dotdrop allows to template your config files such that the same dotfile is customized when deployed on the host you’re working on. Different profiles can be defined that allow for fine-grained control over which dotfiles have to be installed on different hosts (home, work, vps, etc). Some hosts/profiles will have all your dotfiles installed while others might just need a subset of the dotfiles.","Categories
Terminals, File Managers"
"Cryptocurrency price ticker CLI. Check cryptocurrencies' prices, and changes on your console. Best CLI tool for those who are both crypto investors and engineers. All data comes from coincap APIs. As coinmarketcap API is only free with API keys, we moved to use coincap API and disabled some features. It's simple to run coinmon on your local computer. You can pass parameters just like coinmon binary.Cryptocurrency price ticker CLI. Check cryptocurrencies' prices, and changes on your console. Best CLI tool for those who are both crypto investors and engineers. All data comes from coincap APIs. As coinmarketcap API is only free with API keys, we moved to use coincap API and disabled some features. It's simple to run coinmon on your local computer. You can pass parameters just like coinmon binary.","Categories
Terminals, Cryptocurrency"
"cointop is a fast and lightweight interactive terminal-based UI application for tracking and monitoring cryptocurrency coin stats in real-time. The interface is inspired by htop and shortcut keys are inspired by vim. Vim-inspired shortcut keys, custom key bindings configuration. Custom color scheme configuration, 256-color, and 24-bit support. Save and view favorite coins. Portfolio tracking of holdings view profit & loss. Charts for coin price history and global market graphs. Fuzzy searching for finding coins. Supports multiple coin data APIs; CoinGecko and CoinMarketCap. Price alerts with desktop notifications. Fast sort shortcuts, pagination, chart date range change, auto-refresh. It's very lightweight; can be left running indefinitely.cointop is a fast and lightweight interactive terminal-based UI application for tracking and monitoring cryptocurrency coin stats in real-time. The interface is inspired by htop and shortcut keys are inspired by vim. Vim-inspired shortcut keys, custom key bindings configuration. Custom color scheme configuration, 256-color, and 24-bit support. Save and view favorite coins. Portfolio tracking of holdings view profit & loss. Charts for coin price history and global market graphs. Fuzzy searching for finding coins. Supports multiple coin data APIs; CoinGecko and CoinMarketCap. Price alerts with desktop notifications. Fast sort shortcuts, pagination, chart date range change, auto-refresh. It's very lightweight; can be left running indefinitely.","Categories
Terminals, User Interface (UI), Cryptocurrency"
"bash-completion is a collection of command-line command completions for the Bash shell, a collection of helper functions to assist in creating new completions, and a set of facilities for loading completions automatically on-demand, as well as installing them. The easiest way to install this software is to use a package; refer to Repology for a comprehensive list of operating system distributions, package names, and available versions. Depending on the package, you may still need to source it from either /etc/bashrc or ~/.bashrc (or any other file sourcing those). If you don't have the package readily available for your distribution, or you simply don't want to use one, you can install bash-completion using the standard commands for GNU Autotools packages. If you find that a given function is producing errors or does not work as it should under certain circumstances when you attempt completion, try running set -x or set -v prior to attempting the completion again.bash-completion is a collection of command-line command completions for the Bash shell, a collection of helper functions to assist in creating new completions, and a set of facilities for loading completions automatically on-demand, as well as installing them. The easiest way to install this software is to use a package; refer to Repology for a comprehensive list of operating system distributions, package names, and available versions. Depending on the package, you may still need to source it from either /etc/bashrc or ~/.bashrc (or any other file sourcing those). If you don't have the package readily available for your distribution, or you simply don't want to use one, you can install bash-completion using the standard commands for GNU Autotools packages. If you find that a given function is producing errors or does not work as it should under certain circumstances when you attempt completion, try running set -x or set -v prior to attempting the completion again.","Categories
Terminals, System Shells"
"This is a collection of utilities for Windows 10 Linux Subsystem, such as retrieving Windows 10 environment variables or creating your favorite Linux GUI application shortcuts on Windows 10 Desktop. Requires Windows 10 Creators Update; Some of the features requires a higher version of Windows 10; Supports WSL2. A WSL shortcut creator to create a shortcut on your Windows 10 Desktop. A WSL system information printer to print out system information from Windows 10 or WSL. A WSL screenshot information tool to print information in an elegant way. A fake WSL browser that can help you open links in the default Windows browser or open files on Windows. A set of quick actions for WSL such as quickly mounting all drives or manually syncing time between Windows and WSL. And much more.This is a collection of utilities for Windows 10 Linux Subsystem, such as retrieving Windows 10 environment variables or creating your favorite Linux GUI application shortcuts on Windows 10 Desktop. Requires Windows 10 Creators Update; Some of the features requires a higher version of Windows 10; Supports WSL2. A WSL shortcut creator to create a shortcut on your Windows 10 Desktop. A WSL system information printer to print out system information from Windows 10 or WSL. A WSL screenshot information tool to print information in an elegant way. A fake WSL browser that can help you open links in the default Windows browser or open files on Windows. A set of quick actions for WSL such as quickly mounting all drives or manually syncing time between Windows and WSL. And much more.","Categories
Terminals, System"
"z.lua is a faster way to navigate your filesystem. It tracks your most used directories, based on 'frecency'. After a short learning phase, z will take you to the most 'recent' directory that matches ALL of the regexes given on the command line, in order. Available for posix shells, bash, zsh, dash, sh, ash, ksh, busybox and etc. Available for Fish Shell, Power Shell and Windows cmd. An enhanced matching algorithm takes you to where ever you want precisely. Allow updating database only if $PWD changed with ""$_ZL_ADD_ONCE"" set to 1. Interactive selection enables you to choose where to go before cd. Integrated with FZF (optional) for interactive selection and completion. Quickly go back to a parent directory instead of typing ""cd ../../.."". Corresponding experience in different shells and operating systems. 10x times faster than fasd and autojump, 3x times faster than z.sh.z.lua is a faster way to navigate your filesystem. It tracks your most used directories, based on 'frecency'. After a short learning phase, z will take you to the most 'recent' directory that matches ALL of the regexes given on the command line, in order. Available for posix shells, bash, zsh, dash, sh, ash, ksh, busybox and etc. Available for Fish Shell, Power Shell and Windows cmd. An enhanced matching algorithm takes you to where ever you want precisely. Allow updating database only if $PWD changed with ""$_ZL_ADD_ONCE"" set to 1. Interactive selection enables you to choose where to go before cd. Integrated with FZF (optional) for interactive selection and completion. Quickly go back to a parent directory instead of typing ""cd ../../.."". Corresponding experience in different shells and operating systems. 10x times faster than fasd and autojump, 3x times faster than z.sh.","Categories
Terminals"
"Lightweight workspace manager for the shell. Desk makes it easy to flip back and forth between different project contexts in your favorite shell. Change directory, activate a virtualenv or rvm, load in domain-specific aliases, environment variables, functions, arbitrary shell files, all in a single command. Instead of relying on CTRL-R to execute and recall (""that command's gotta be here somewhere...""), desk helps shorten and document those actions with shell aliases and functions, which are then namespaced under a particular desk. Because Deskfiles are just enriched shell scripts, the possibilities are endless. For example, when doing work on AWS I have desk securely load AWS API keys into environment variables via pass -- no effort on my part, and no risk of accidentally persisting that sensitive information to a history file.Lightweight workspace manager for the shell. Desk makes it easy to flip back and forth between different project contexts in your favorite shell. Change directory, activate a virtualenv or rvm, load in domain-specific aliases, environment variables, functions, arbitrary shell files, all in a single command. Instead of relying on CTRL-R to execute and recall (""that command's gotta be here somewhere...""), desk helps shorten and document those actions with shell aliases and functions, which are then namespaced under a particular desk. Because Deskfiles are just enriched shell scripts, the possibilities are endless. For example, when doing work on AWS I have desk securely load AWS API keys into environment variables via pass -- no effort on my part, and no risk of accidentally persisting that sensitive information to a history file.","Categories
Terminals, System Shells"
"Bash script that enables you to aggregate (tail/follow) logs from multiple pods into one stream. This is the same as running ""kubectl logs -f "" but for multiple pods. Just download the kubetail file (or any of the releases) and you're good to go. Note that you may need to run compinit for zsh to pick-up the changes in the competition after having upgraded from the non-abbreviated installation. If you're using a ZSH plugin manager, you can install kubetail as a plugin. kubetail itself doesn't have filtering or highlighting capabilities built in. If you're on MacOSX I recommend using iTerm2 which allows for continuous highlighting of search terms, good scrolling capabilities, and multitab arrangements. Another useful feature of iTerm2 is the ""timeline"" (cmd + shift + e) which lets you display a timeline in your own local timezone next to the logs (that are typically in UTC).Bash script that enables you to aggregate (tail/follow) logs from multiple pods into one stream. This is the same as running ""kubectl logs -f "" but for multiple pods. Just download the kubetail file (or any of the releases) and you're good to go. Note that you may need to run compinit for zsh to pick-up the changes in the competition after having upgraded from the non-abbreviated installation. If you're using a ZSH plugin manager, you can install kubetail as a plugin. kubetail itself doesn't have filtering or highlighting capabilities built in. If you're on MacOSX I recommend using iTerm2 which allows for continuous highlighting of search terms, good scrolling capabilities, and multitab arrangements. Another useful feature of iTerm2 is the ""timeline"" (cmd + shift + e) which lets you display a timeline in your own local timezone next to the logs (that are typically in UTC).","Categories
Terminals, System Shells, Logging"
"A script that lets you add the current Kubernetes context and namespace configured on kubectl to your Bash/Zsh prompt strings (i.e. the $PS1). The default prompt assumes you have the kubectl command-line utility installed. Official installation instructions and binaries are available. Blue was used for the default symbol to match the Kubernetes color as closely as possible. Red was chosen as the context name to stand out, and cyan for the namespace. 256 colors are available by specifying the numerical value as the variable argument. Due to the vast ways of customizing the shell, please try the prompt with a minimal configuration before submitting a bug report.A script that lets you add the current Kubernetes context and namespace configured on kubectl to your Bash/Zsh prompt strings (i.e. the $PS1). The default prompt assumes you have the kubectl command-line utility installed. Official installation instructions and binaries are available. Blue was used for the default symbol to match the Kubernetes color as closely as possible. Red was chosen as the context name to stand out, and cyan for the namespace. 256 colors are available by specifying the numerical value as the variable argument. Due to the vast ways of customizing the shell, please try the prompt with a minimal configuration before submitting a bug report.","Categories
Terminals, System Shells"
"Avoid switching between Clojure and bash scripts. Enjoy your parens on the command line. Leveraging GraalVM native-image and the Small Clojure Interpreter, babashka is a self-contained and instantly starting scripting environment. Babashka comes with scripting batteries included: tools.cli, cheshire, babashka.fs, babashka.process, java.time and many more libraries and classes. Babashka scripts work on linux, macOS and Windows. Besides the built-in libraries, babashka is able to load libraries from source, tapping into the world of already existing Clojure libraries. Babashka supports real JVM threads and like Clojure, supports futures and dynamic thread-locally bound vars. Babashka features a built-in task runner which covers the most popular use cases of make, just and npm scripts. Babashka can shell out to other CLI programs like you are used to in bash. It goes one step further and offers seamless integration with other binaries using the pod protocol.Avoid switching between Clojure and bash scripts. Enjoy your parens on the command line. Leveraging GraalVM native-image and the Small Clojure Interpreter, babashka is a self-contained and instantly starting scripting environment. Babashka comes with scripting batteries included: tools.cli, cheshire, babashka.fs, babashka.process, java.time and many more libraries and classes. Babashka scripts work on linux, macOS and Windows. Besides the built-in libraries, babashka is able to load libraries from source, tapping into the world of already existing Clojure libraries. Babashka supports real JVM threads and like Clojure, supports futures and dynamic thread-locally bound vars. Babashka features a built-in task runner which covers the most popular use cases of make, just and npm scripts. Babashka can shell out to other CLI programs like you are used to in bash. It goes one step further and offers seamless integration with other binaries using the pod protocol.","Categories
Terminals, Interpreters, System Shells"
"tmpmail is a command-line utility written in POSIX sh that allows you to create a temporary email address and receive emails to the temporary email address. It uses 1secmail's API to receive emails. By default w3m is used to render the HTML emails on the terminal. But if you prefer another text-based web browser or would rather view the email in a GUI web browser such as Firefox, simply use the browser argument followed by the command needed to launch the web browser of your choice. A temporary email right from your terminal written in POSIX sh.tmpmail is a command-line utility written in POSIX sh that allows you to create a temporary email address and receive emails to the temporary email address. It uses 1secmail's API to receive emails. By default w3m is used to render the HTML emails on the terminal. But if you prefer another text-based web browser or would rather view the email in a GUI web browser such as Firefox, simply use the browser argument followed by the command needed to launch the web browser of your choice. A temporary email right from your terminal written in POSIX sh.","Categories
Terminals, Email"
"Easily view, navigate and search your command history with shell history suggest box for bash and zsh. Are you looking for a command that you used recently? Do you want to avoid the need to write long commands over and over again? Are you looking for a tool that is able to manage your favorite commands? HSTR (HiSToRy) is a command-line utility that brings improved bash/zsh command completion from history. It aims to make completion easier and more efficient than Ctrl-r. HSTR can also manage your command history (for instance you can remove commands that are obsolete or contain a piece of sensitive information) or bookmark your favorite commands.Easily view, navigate and search your command history with shell history suggest box for bash and zsh. Are you looking for a command that you used recently? Do you want to avoid the need to write long commands over and over again? Are you looking for a tool that is able to manage your favorite commands? HSTR (HiSToRy) is a command-line utility that brings improved bash/zsh command completion from history. It aims to make completion easier and more efficient than Ctrl-r. HSTR can also manage your command history (for instance you can remove commands that are obsolete or contain a piece of sensitive information) or bookmark your favorite commands.","Categories
Terminals"
"Terraform version manager inspired by rbenv. The trust-tfenv directive means that verification uses a copy of the Hashicorp OpenPGP key found in the tfenv repository. Skipping that directive means that the Hashicorp key must be in the existing default trusted keys. By default, console output from tfenv does not print a date stamp or log severity. Some variables allow you to pass a string containing a command that will be executed using eval in order to produce a prefix to each console output line, and each FILE type log entry. If you put a .terraform-version file on your project root, or in your home directory, tfenv detects it and uses the version written in it. If the version is latest or latest:<regex>, the latest matching version currently installed will be selected.Terraform version manager inspired by rbenv. The trust-tfenv directive means that verification uses a copy of the Hashicorp OpenPGP key found in the tfenv repository. Skipping that directive means that the Hashicorp key must be in the existing default trusted keys. By default, console output from tfenv does not print a date stamp or log severity. Some variables allow you to pass a string containing a command that will be executed using eval in order to produce a prefix to each console output line, and each FILE type log entry. If you put a .terraform-version file on your project root, or in your home directory, tfenv detects it and uses the version written in it. If the version is latest or latest:<regex>, the latest matching version currently installed will be selected.","Categories
Terminals"
"Bats is a TAP-compliant testing framework for Bash. It provides a simple way to verify that the UNIX programs you write behave as expected. A Bats test file is a Bash script with special syntax for defining test cases. Under the hood, each test case is just a function with a description. Bats is most useful when testing software is written in Bash, but you can use it to test any UNIX program. Test cases consist of standard shell commands. Bats makes use of Bash's errexit (set -e) option when running test cases. If every command in the test case exits with a 0 status code (success), the test passes. In this way, each line is an assertion of truth. The Bats source code repository is hosted on GitHub. There you can file bugs on the issue tracker or submit tested pull requests for review.Bats is a TAP-compliant testing framework for Bash. It provides a simple way to verify that the UNIX programs you write behave as expected. A Bats test file is a Bash script with special syntax for defining test cases. Under the hood, each test case is just a function with a description. Bats is most useful when testing software is written in Bash, but you can use it to test any UNIX program. Test cases consist of standard shell commands. Bats makes use of Bash's errexit (set -e) option when running test cases. If every command in the test case exits with a 0 status code (success), the test passes. In this way, each line is an assertion of truth. The Bats source code repository is hosted on GitHub. There you can file bugs on the issue tracker or submit tested pull requests for review.","Categories
Terminals, Exam, Automated Testing"
"LinuxGSM is the command-line tool for quick, simple deployment and management of Linux dedicated game servers. Traditionally game servers are not easy to manage yourself. Admins often have to spend hours messing around trying to get their server working. LinuxGSM is a command-line tool designed to be as simple as possible, allowing admins to spend less time on management and more time gaming. LinuxGSM will run on popular distros as long as the minimum requirements are met. Each game server has specific dependency requirements. Visit a specific game server installation page on the LinuxGSM website to check dependency requirements for the game server you want to install. LinuxGSM keeps itself and your game server updated. Using methods available from game developers to update including, SteamCMD, custom JSON or file archives, LinuxGSM can make sure you are running the latest version of your game server.LinuxGSM is the command-line tool for quick, simple deployment and management of Linux dedicated game servers. Traditionally game servers are not easy to manage yourself. Admins often have to spend hours messing around trying to get their server working. LinuxGSM is a command-line tool designed to be as simple as possible, allowing admins to spend less time on management and more time gaming. LinuxGSM will run on popular distros as long as the minimum requirements are met. Each game server has specific dependency requirements. Visit a specific game server installation page on the LinuxGSM website to check dependency requirements for the game server you want to install. LinuxGSM keeps itself and your game server updated. Using methods available from game developers to update including, SteamCMD, custom JSON or file archives, LinuxGSM can make sure you are running the latest version of your game server.","Categories
Terminals, Games/Entertainment, Command Line Tools"
"You stuffed the command shell with aliases, tools and colors but you lose it all when using ssh. The mission of xxh is to bring your favorite shell wherever you go through ssh without root access and system installations. Preparing portable shells and plugins occurs locally and then xxh uploads the result to the host. No installations or root access on the host is required. Security and host environment are a prime focus. No blindfold copying config files from local to the remote host. Following privacy and repeatability practices the best way is to fork the xxh plugin or shell example and pack your configs into it. Every xxh repo could be forked, customized, and reused without waiting for a package management system, xxh release, or any third-party packages. Five shells are currently supported and more could be added by the community.You stuffed the command shell with aliases, tools and colors but you lose it all when using ssh. The mission of xxh is to bring your favorite shell wherever you go through ssh without root access and system installations. Preparing portable shells and plugins occurs locally and then xxh uploads the result to the host. No installations or root access on the host is required. Security and host environment are a prime focus. No blindfold copying config files from local to the remote host. Following privacy and repeatability practices the best way is to fork the xxh plugin or shell example and pack your configs into it. Every xxh repo could be forked, customized, and reused without waiting for a package management system, xxh release, or any third-party packages. Five shells are currently supported and more could be added by the community.","Categories
Terminals, System Shells"
"A full-featured utility for managing Windows Subsystem for Linux (WSL). Configure default user, environment variables and various flags. Export configuration to an XML file and import from the file. Export an installation to a tar file. Install any Linux distro to any directory on your computer. Register an existing installation directory. This enables you to install to a USB stick and use it on different computers. The right-click menu feature requires the shell extension DLL to be properly registered. This is automatically done if you used Chocolatey to install this project. This project uses CMake as its build system. MinGW GCC and Visual C++ compilers are supported.A full-featured utility for managing Windows Subsystem for Linux (WSL). Configure default user, environment variables and various flags. Export configuration to an XML file and import from the file. Export an installation to a tar file. Install any Linux distro to any directory on your computer. Register an existing installation directory. This enables you to install to a USB stick and use it on different computers. The right-click menu feature requires the shell extension DLL to be properly registered. This is automatically done if you used Chocolatey to install this project. This project uses CMake as its build system. MinGW GCC and Visual C++ compilers are supported.","Categories
Terminals"
